//导游津贴
app.controller("GuideSubsidyListCtrl", GuideSubsidyListCtrl);
function GuideSubsidyListCtrl($scope, $rootScope, $filter, getGuideSubsidyList, getGuideSubsidyDetailList) {
    var ctrl = this;
    var vm = $rootScope[position[1]].GuideSubsidyList;
    //vm.RemittanceClaimWindows = {};
    ctrl.searchList = function () {
        $rootScope.showProcessBar = true;
        vm.listData.search.iPageIndex = 1;
        vm.listData.search.StartTime = $filter('date')(vm.listData.search.StartTime, "yyyy-MM-dd");
        vm.listData.search.EndTime = $filter('date')(vm.listData.search.EndTime, "yyyy-MM-dd");
        getGuideSubsidyList(vm.listData.search, function (data) {
            $rootScope.isloadList = false;
            $rootScope.showProcessBar = false;
            vm.listData.list = data.GuideSubsidyList.listData.list;
        });
    };

    ctrl.loadList = function () {
        $rootScope.showProcessBar = true;
        vm.listData.search.iPageIndex += 1;
        getGuideSubsidyList(vm.listData.search, function (data) {
            $rootScope.isloadList = false;
            $rootScope.showProcessBar = false;
            vm.listData.list.push.apply(vm.listData.list, data.GuideSubsidyList.listData.list);
        });
    };
    
    //#region   详情页内含列表搜索
    var vmm = $rootScope[position[2]];
    $scope.search = {};
    $scope.search.PayStatus = "-1";
    $scope.search.StartTime = "";
    $scope.search.EndTime = "";
    $scope.searchDetailList = function () {
        $rootScope.showProcessBar = true;
        $scope.search.StartTime = $filter('date')($scope.search.StartTime, "yyyy-MM-dd");
        $scope.search.EndTime = $filter('date')($scope.search.EndTime, "yyyy-MM-dd");
        $scope.search._id = vmm._id;
        getGuideSubsidyDetailList($scope.search, function (datas) {
            $rootScope.isloadList = false;
            $rootScope.showProcessBar = false;
            vmm=$rootScope[position[2]] = datas;//.getGuideSubsidyDetailList.data;
        });
    };
    //#endregion
}
app.controller('ILoanViewController', function($scope, $filter, $rootScope) {

  $scope.search = {
    year: $filter('date')(new Date(), "yyyy"),
    month: $filter('date')(new Date(), "MM")
  };

	$scope.dateOptions = {
		formatYear: 'yy',
    startingDay: 1
  };

  $scope.loadBasicData = function() {

  };

  $scope.getNewList = function() {

  };

  $scope.showSubContent = function(id) {

  };

  $scope.saveBooking = function(hotelCode, roomCode) {

  };

  $scope.submitBooking = function() {

  };

  $scope.clearData = function() {

  };

  $scope.cancelBooking = function(order) {

  };

  $scope.refreshPage = function() {

  };

});
﻿/**
 * 订单预付款撤回列表 控制器
 */
angular.module("HY").controller("IncomeSettlementOAdvanceRevokeController", IncomeSettlementOAdvanceRevokeController);

function IncomeSettlementOAdvanceRevokeController(getIncomeSettlementlist, setReturnRevoke, showWarningBox, $scope, $rootScope, $filter, closeSubView, SaveBillData, SaveUnBillData, $timeout) {
    var vm = this;
    vm.page = 1;
    vm.pageSize = 20;
    //vm.navTabType='AdvanceRevoke';//nav类型
    //console.log("qq"+vm.RType);
    //$rootScope.mainData.navTabType = 'AdvanceRevoke';//nav类型
    vm.RType = $rootScope.mainData.RType;//撤销类型
    vm.editLink = "financeCenter/IncomeSettlementOAdvanceRevoke/detail"; //订单预付款撤回详细信息

    vm.template = {};
    vm.templateBasicUrl = "/public/angularView/finances/business/";
    vm.template.BusinessNavTab = "/public/angularView/finances/business/IncomeSettlement/IncomeSettlementNavTab.html"; //撤销列表的搜索条件
    vm.template.RevokeList = vm.templateBasicUrl + "IncomeSettlement/OFRevokeList.html"; //撤销列表框(订单预约款撤回，订单暂借款撤回)
    vm.template.GrideRevokeList = vm.templateBasicUrl + "IncomeSettlement/OFGrideRevokeList.html"; //撤销列表框(导游预领撤回)
    vm.template.RevokeBaseInfo = vm.templateBasicUrl + "IncomeSettlement/OAdvanceBaseInfo.html"; //撤销详情页的预付款信息
    vm.template.WriteOffInfo = vm.templateBasicUrl + "IncomeSettlement/OAdvanceWriteOffInfo.html"; //撤销详情页的核销信息
    vm.searchList = searchList;
    vm.returnRevoke = returnRevoke;//撤销退回
    //vm.fetch = fetch;
    vm.searchSubmit = searchSubmit;
    //vm.filter = {
    //    ConditionField: "PayPrice"
    //};
   // vm.filter = Getfiter(); //关键字，时间搜索，撤销状态，部门

    $timeout(function () {
        vm.filter = Getfiter();
    });

    vm.Departments = $rootScope.Departments; //部门

    vm.datepickerOptions = {
        playStartTime: {
            minDate: Date.now()
        },
        playEndTime: {
            minDate: Date.now()
        }
    };


    /*弹框 开始*/
    $scope.detailData.template = {};
    $scope.detailData.template.baseUrl = "/public/angularView/finances/business/IncomeSettlement/";
    $scope.detailData.template = {
        Popover: ($scope.detailData.template.baseUrl + 'OAdvanceRevoke_determine.html'),
        CancelPopover: ($scope.detailData.template.baseUrl + 'OAdvanceRevoke_cancel.html')
    };

    $scope.detailData.popStatus = {
        IsShowPop: false,
        IsShowCancelPop: false
    };

    vm.changeStatus = changeStatus;
    vm.changePayMode = changePayMode;
    vm.changePayBank = changePayBank;
    vm.submitApply = submitApply;
    vm.cancelApply = cancelApply;
    vm.removeApply = removeApply;
    vm.deleteApply = deleteApply;

    //$scope.detailData.btnIsdisable = false;

    $scope.detailData.edits = {};
    $scope.detailData.edits.GCOMP = {};
    $scope.detailData.verification= {
        payModeStatus: false,
        payBankStatus: false,
        moneyStatus: false
    };

    $scope.detailData.detailTipInfo = "";
    $scope.detailData.detailTipInfoType = "";

    function changeStatus(type) {
        $scope.detailData.verification[type] = false;
    }

    //切换收款方式时，进行数据对象的绑定
    function changePayMode() {
        var PayModeObjectIndex = _.findIndex($rootScope.FinancesType.paymodeList, function (item) {
            return item._id == $scope.detailData.edits.PayModeValue;
        });
        $scope.detailData.edits.PayMode = $rootScope.FinancesType.paymodeList[PayModeObjectIndex];
    }

    //切换支付银行时，进行数据对象的绑定
    function changePayBank() {
        var PayBankObjectIndex = _.findIndex($rootScope.FinancesType.bankList, function (item) {
            return item._id == $scope.detailData.edits.PayBankValue;
        });
        $scope.detailData.edits.PayBank = $rootScope.FinancesType.bankList[PayBankObjectIndex];
    }

    function submitApply(val) {
        var sFunName = 'submitApply_orderadvancepayment('+val+')';
        $scope.$eval(sFunName);
    }

    //提交结算确认--其他收入
    $scope.submitApply_orderadvancepayment = function (val) {

        if (checkInput()) {
            console.log("FinanceID:" + val);
            var pars = {
                FinanceID: val,
                BillMoney: $scope.detailData.edits.BillMoney
            };
            if ($scope.detailData.edits.PayMode) {
                pars.PayModeID = $scope.detailData.edits.PayMode._id;
            }

            if ($scope.detailData.edits.PayBank) {
                pars.PayBankID = $scope.detailData.edits.PayBank._id;
            }

            if ($scope.detailData.edits.GCOMP) {
                pars.GCOMPID = $scope.detailData.edits.GCOMP.ID;
            }

            //$scope.detailData.btnIsdisable = true;
            $scope.detailData.popStatus.IsShowPop = false;
            SaveBillData(pars, refreshPage_orderadvancepayment);
        }

        function checkInput() {
            $scope.detailData.detailTipInfo = "";
            $scope.detailData.detailTipInfoType = "";
            $scope.detailData.verification.moneyTypeStatus = false;
            $scope.detailData.verification.payModeStatus = false;
            $scope.detailData.verification.moneyStatus = false;

            if (!$scope.detailData.edits.BillMoney) {
                $scope.detailData.detailTipInfo = "付款金额为空";
                $scope.detailData.detailTipInfoType = "error";
                $scope.detailData.verification.moneyStatus = true;
                return false;
            }

            if (!_.isNumber($scope.detailData.edits.BillMoney)) {
                $scope.detailData.detailTipInfo = "付款金额格式错误";
                $scope.detailData.detailTipInfoType = "error";
                $scope.detailData.verification.moneyStatus = true;
                return false;
            }

            if ($scope.detailData.edits.BillMoney <= 0) {
                $scope.detailData.detailTipInfo = "付款金额不能小于等于0";
                $scope.detailData.detailTipInfoType = "error";
                $scope.detailData.verification.moneyStatus = true;
                return false;
            }

            if (!$scope.detailData.edits.PayMode) {
                $scope.detailData.detailTipInfo = "未选择支付方式";
                $scope.detailData.detailTipInfoType = "error";
                $scope.detailData.verification.payModeStatus = true;
                return false;
            } else {
                if (!$scope.detailData.edits.PayMode._id) {
                    $scope.detailData.detailTipInfo = "未选择支付方式";
                    $scope.detailData.detailTipInfoType = "error";
                    $scope.detailData.verification.payModeStatus = true;
                    return false;
                }
            }
            return true;
        }
    };

    //刷新界面并关闭当前的Pop界面--其他收入
    function refreshPage_orderadvancepayment(data) {
        if ($scope.detailData.edits.PayMode) {
            $scope.detailData.PayMode = $scope.detailData.edits.PayMode.Name;
        }
        if ($scope.detailData.edits.GCOMP) {
            $scope.detailData.GCOMPName = $scope.detailData.edits.GCOMP.Name;
        }
        $scope.detailData.PayStatus = 2;
        $scope.detailData.WaitVerificationMoney += $scope.detailData.edits.BillMoney;
        //$scope.detailData.btnIsdisable = false;
        initStatus();
        reflashorderadvancepaymentList();
    }

    function reflashorderadvancepaymentList() {
        $rootScope[position[1]].isLoading = true;
        $rootScope[position[1]].filters.search.iPageIndex = 1;
        $rootScope[position[1]].filters.search.iPageSize = $rootScope.pageLimit;
        //getFinanceOrderAdvanceList($rootScope[position[1]].filters.search.orderadvancepayment, function (response) {
        //    $rootScope[position[1]].isLoading = false;
        //    $rootScope[position[1]].orderadvancepayment.list = response.list;
        //});
    }

    $scope.removeApply_orderadvancepayment = function (val) {
        var pars = {
            FinanceID: val,
            Notes: $scope.detailData.edits.CancelNotes
        };
        //$scope.detailData.btnIsdisable = true;
        $scope.detailData.popStatus.IsShowCancelPop = false;
        SaveUnBillData(pars, removeRefreshPage_orderadvancepayment);
    };

    function removeRefreshPage_orderadvancepayment() {
        $scope.detailData.PayStatus = 1;
        $scope.detailData.WaitVerificationMoney = 0;
        $scope.detailData.edits.CancelNotes = '';
        //$scope.detailData.btnIsdisable = false;
        $scope.closeSubView();
        reflashorderadvancepaymentList();
    }

    //取消收款确认
    $scope.cancelApply_orderadvancepayment = function () {
        $scope.detailData.popStatus.IsShowPop = false;
        initStatus();
    };

    function reflashordertemporaryloanList() {
        $rootScope[position[1]].isLoading = true;
        $rootScope[position[1]].filters.search.iPageIndex = 1;
        $rootScope[position[1]].filters.search.iPageSize = $rootScope.pageLimit;
        //getFinanceOrderAdvanceList($rootScope[position[1]].filters.search.orderadvancepayment, function (response) {
        //    $rootScope[position[1]].isLoading = false;
        //    $rootScope[position[1]].orderadvancepayment.list = response.list;
        //});
    }

    $scope.removeApply_ordertemporaryloan = function () {
        var pars = {
            FinanceID: $scope.detailData.edits.Finance_id,
            Notes: $scope.detailData.edits.CancelNotes
        };
        //$scope.detailData.btnIsdisable = true;
        $scope.detailData.popStatus.IsShowCancelPop = false;
        SaveUnBillData(pars, removeRefreshPage_ordertemporaryloan);
    };

    function removeRefreshPage_ordertemporaryloan() {
        $scope.detailData.PayStatus = 1;
        $scope.detailData.WaitVerificationMoney = 0;
        $scope.detailData.edits.CancelNotes = '';
        //$scope.detailData.btnIsdisable = false;
        $scope.closeSubView();
        reflashordertemporaryloanList();
    }

    //取消收款确认
    $scope.cancelApply_orderadvancepayment = function () {
        $scope.detailData.popStatus.IsShowPop = false;
        $scope.detailData.popStatus.IsShowCancelPop = false;
        initStatus();
    };

    //初始化数据状态
    function initStatus() {
        $scope.detailData.detailTipInfo = "";
        $scope.detailData.detailTipInfoType = "";
    }

    //取消收款确认
    function cancelApply() {
        var sFunName = 'cancelApply_orderadvancepayment()';
        $scope.$eval(sFunName);
    }

    //删除收款确认
    function removeApply(val) {
        var sFunName = 'removeApply_orderadvancepayment('+val+')';
        $scope.$eval(sFunName);
    }

    function deleteApply() {
        showWarningBox("是否删除收款记录", function () {
            delOrderFinanceRecord($scope.detailData.RecordID, deleteRefreshPage);
        });
    }

    function deleteRefreshPage() {
        initStatus();
        $scope.closeSubView();
    }

    /*弹框 结束*/



    getNavTabType();

    function getNavTabType() {
        console.log("changeid:" + $rootScope.mainData.RType);
        if ($rootScope.mainData.RType) {
            switch ($rootScope.mainData.RType) {
                case 'Advance': {
                    $rootScope.mainData.navTabType = 'AdvanceRevoke';
                    //vm.navTabType='AdvanceRevoke';
                    vm.RType = 'Advance';
                   // vm.filter = $rootScope.mainData.AdvanceY;
                    break;
                }
                case 'Temporary': {
                    $rootScope.mainData.navTabType = 'TemporaryRevoke';
                    //vm.navTabType='TemporaryRevoke';
                    vm.RType = 'Temporary';
                    //vm.filter = $rootScope.mainData.TemporaryY;
                    break;
                }
                default: {
                    $rootScope.mainData.navTabType = 'GridePreCollarRevoke';
                    //vm.navTabType='GridePreCollarRevoke';
                    vm.RType = 'GridePreCollar';
                    //vm.filter = $rootScope.mainData.GridePreCollarY;
                    break;
                }
            }
        }

        //else {
        //    $rootScope.mainData.navTabType = 'AdvanceRevoke';
        //    //vm.navTabType='AdvanceRevoke';//nav类型
        //    vm.RType = $rootScope.mainData.RType = 'Advance';//撤销类型
        //}

    }

    function Getfiter()
    {
        if($rootScope.mainData.RType)
        {
            if($rootScope.mainData.RType=="Advance")
            {
                if (!$rootScope.mainData.AdvanceY)
                {
                    $rootScope.mainData.AdvanceY = filter = { ConditionField: "PayPrice" };
                }
                return $rootScope.mainData.AdvanceY;
            }
            else if ($rootScope.mainData.RType == "Temporary")
            {
                if (!$rootScope.mainData.TemporaryY) {
                    $rootScope.mainData.TemporaryY = filter = { ConditionField: "PayPrice" };
                }
                return $rootScope.mainData.TemporaryY;
            }else if($rootScope.mainData.RType == "GridePreCollar")
            {
                if (!$rootScope.mainData.GridePreCollarY) {
                    $rootScope.mainData.GridePreCollarY = filter = { ConditionField: "PayPrice" };
                }
                return $rootScope.mainData.GridePreCollarY;
            } else {
                vm.filter = {
                    ConditionField: "PayPrice"
                };
                return vm.filter;
            }
        } else {
                vm.filter={ ConditionField: "PayPrice"};
            return vm.filter;
        }
    }

    /*搜索列表*/
    function searchList(scrolling) {

        if ($scope.mainData.allPageCount === undefined) {
            $scope.mainData.allPageCount = $scope.mainData.pageCount;
        }

        vm.listLoading = true;
        if (scrolling === undefined) {
            vm.page = 1;
            vm.listMax = false;
            /*$rootScope.isloadList = true;
            $rootScope.showProcessBar = true;*/
            $scope.mainData.list = [];
        } else {
            if ($scope.mainData.allPageCount == 1 || vm.page == $scope.mainData.allPageCount) {
                vm.listLoading = false;
                vm.listMax = true;
                $rootScope.isloadList = false;
                $rootScope.showProcessBar = false;
                return;
            }
            vm.page += 1;
        }

        var search = getInput(vm.filter);
        if (!vm.listMax) {
            getIncomeSettlementlist(search, changeScope);
        } else {
            vm.listLoading = false;
            $rootScope.isloadList = false;
            $rootScope.showProcessBar = false;
            /* if ($scope.mainData.allPageCount == 1) {
               vm.listLoading = false;
               $rootScope.isloadList = false;
               $rootScope.showProcessBar = false;
             }*/

        }

        /*组合搜索条件*/
        function getInput(filter) {
            /*
             * iPageIndex 第几页；iPageSize 每页显示的数量
             * FinanceType 撤销类型 28 预付款；29 暂借款
             * SearchInfo 搜索关键词
             * STime 撤销时间搜索开始
             * ETime 撤销时间搜索结束
             * ErificationStatus 撤销状态
             * DeptId 部门id
             * */
            var data = {
                iPageIndex: vm.page,
                iPageSize: vm.pageSize,
                RType: vm.RType
            };
            console.log("预付款查询：" + JSON.stringify(filter));

            if (JSON.stringify(filter) !== undefined) {
                //alert(JSON.stringify(filter));
                //关键词
                if (filter.keyword) {
                    data.SearchInfo = filter.keyword;
                }
                //撤销时间搜索开始
                if (filter.startDate) {
                    data.STime = $filter("date")(filter.startDate, "yyyy-MM-dd");
                }
                //撤销时间搜索结束
                if (filter.endDate) {
                    data.ETime = $filter("date")(filter.endDate, "yyyy-MM-dd");
                }
                //搜索条件字段类型
                if (filter.ConditionField) {
                  data.Field = filter.ConditionField;
                } else {
                    data.Field = "PayPrice";
                }
                //时间搜索类型
                if (filter.TimeType) {
                  data.TimeType = filter.TimeType;
                }
                //撤销状态
                //if (filter.ErificationStatus) {
                //    data.ErificationStatus = filter.ErificationStatus;
                //}
                data.ErificationStatus = 0;
                if (filter.ErificationStatus) {
                    data.PayStatus = filter.ErificationStatus;
                }
                //部门id
                if (filter.DeptId) {
                    data.DeptId = filter.DeptId;
                }
                //结算类型
                if (filter.FinanceDeptInOutTypeid) {
                    data.PayType = filter.FinanceDeptInOutTypeid;
                }
                // console.log(JSON.stringify(data));
            }

            if ($rootScope.mainData.RType) {
                switch ($rootScope.mainData.RType) {
                    case 'Advance': {
                        $rootScope.mainData.AdvanceY = filter;
                        break;
                    }
                    case 'Temporary': {
                        $rootScope.mainData.TemporaryY = filter;
                        break;
                    }
                    default: {

                        $rootScope.mainData.GridePreCollarY = filter;
                        break;
                    }
                }
            }

            return data;
        }

        function changeScope(data) {
            $scope.mainData.list = _.union($scope.mainData.list, data.list);
            $scope.mainData.allPageCount = data.pageCount;
            if (vm.page == $scope.mainData.allPageCount) {
                vm.listMax = true;
            }
            vm.listLoading = false;
            $rootScope.isloadList = false;
            $rootScope.showProcessBar = false;
        }
    }

    /*输入框内容按下回车*/
    function searchSubmit(keyEvent) {
        if (keyEvent.which === 13) {
            vm.searchList();
        }
    }

    //订单预付款，订单暂借款撤销退回
    function returnRevoke(revokeID) {
        var showTitle = vm.RType == 'Advance' ? '是否确定退回订单预付款撤回' : (vm.RType == 'Temporary' ? '是否确定退回订单暂借款撤回' : '是否确定退回预约详情');
        showWarningBox(showTitle, function () {
            var param = {
                RType: vm.RType,
                id: revokeID
            };
            setReturnRevoke(param, function (response) {
                console.log("退回："+response);
                if (response.code >= 700 && response.code < 800) {
                    vm.detailTipInfo = "退回成功";
                    changeScope();
                    closeSubView();
                } else {
                    vm.detailTipInfo = "退回失败";
                    vm.detailTipInfoType = "error";
                }
            });
        });

        function changeScope() {
            var item = _.filter($scope.mainData.list, function (i) {
                return i._id == revokeID;
            });
            $scope.mainData.list = _.without($scope.mainData.list, item[0]);
        }
    }

    /*枚举状态（撤回状态）*/
    vm.RevokeStates = [{
        'value': 1,
        'name': '未撤回'
    }, {
        'value': 2,
        'name': '已撤回'
    }];

    /*枚举状态(收款状态)*/
    vm.SKStates = [{
        'value': 1,
        'name': '未确认'
    }, {
        'value': 2,
        'name': '已确认'
    }];

}

//其他收入
angular.module("HY").controller("OtherSrController", OtherSrController);

function OtherSrController(getotherSRlist, setReturnRevoke, showWarningBox, $scope, $rootScope, $filter,
  closeSubView, getFinanceDeptInOutTypeAllSRlist, SaveBillData, SaveUnBillData,$timeout) {
    var vm = this;
    vm.page = 1;
    vm.pageSize = 20;
    $rootScope.mainData.navTabType = "SR";
    vm.template = {};
    vm.templateBasicUrl = "/public/angularView/finances/business/IncomeSettlement/";
    vm.template.BusinessNavTab = "/public/angularView/finances/business/IncomeSettlement/IncomeSettlementNavTab.html"; //导航搜索条件
    vm.template.RevokeList = vm.templateBasicUrl + "OtherSRlist.html"; //其他收入列表框
    vm.searchSubmit = searchSubmit;
    vm.filter = {}; //关键字，时间搜索，撤销状态，部门
    $timeout(function(){
      vm.filter = $rootScope.mainData.SR;
    });
    vm.searchList = searchList;


    /*弹框 开始*/
    $scope.detailData.template = {};
    $scope.detailData.template.baseUrl = "/public/angularView/finances/business/IncomeSettlement/";
    $scope.detailData.template = {
        Popover: ($scope.detailData.template.baseUrl + 'SR_determine.html'),
        CancelPopover: ($scope.detailData.template.baseUrl + 'SR_cancel.html')
    };

    $scope.detailData.popStatus = {
        IsShowPop: false,
        IsShowCancelPop: false
    };

    vm.changeStatus = changeStatus;
    vm.changePayMode = changePayMode;
    vm.changePayBank = changePayBank;
    vm.submitApply = submitApply;
    vm.cancelApply = cancelApply;
    vm.removeApply = removeApply;
    vm.deleteApply = deleteApply;

    //vm.getBillMoney = getBillMoney;
    //function getBillMoney() {
    //    alert($scope.detailData.popStatus.IsShowPop);
    //    if ($scope.detailData.popStatus.IsShowPop == true) {
    //        $scope.detailData.edits.BillMoney = $scope.detailData.PayPrice;
    //    }
    //    alert($scope.detailData.PayPrice);
    //}
    //$scope.detailData.btnIsdisable = false;

    $scope.detailData.edits = {};
    $scope.detailData.edits.GCOMP = {};
    $scope.detailData.verification= {
        payModeStatus: false,
        payBankStatus: false,
        moneyStatus: false
    };

    $scope.detailData.detailTipInfo = "";
    $scope.detailData.detailTipInfoType = "";

    function changeStatus(type) {
        $scope.detailData.verification[type] = false;
    }

    //切换收款方式时，进行数据对象的绑定
    function changePayMode() {
        var PayModeObjectIndex = _.findIndex($rootScope.FinancesType.paymodeList, function (item) {
            return item._id == $scope.detailData.edits.PayModeValue;

        });
        $scope.detailData.edits.PayMode = $rootScope.FinancesType.paymodeList[PayModeObjectIndex];


    }

    //切换支付银行时，进行数据对象的绑定
    function changePayBank() {
        var PayBankObjectIndex = _.findIndex($rootScope.FinancesType.bankList, function (item) {
            return item._id == $scope.detailData.edits.PayBankValue;
        });
        $scope.detailData.edits.PayBank = $rootScope.FinancesType.bankList[PayBankObjectIndex];
    }

    function submitApply(val) {
        var sFunName = 'submitApply_orderadvancepayment('+val+')';
        $scope.$eval(sFunName);
    }

    //提交结算确认--其他收入
    $scope.submitApply_orderadvancepayment = function (val) {

        if (checkInput()) {
            console.log("FinanceID:" + val);
            var pars = {
                FinanceID: val,
                BillMoney: $scope.detailData.edits.BillMoney
            };
            if ($scope.detailData.edits.PayMode) {
                pars.PayModeID = $scope.detailData.edits.PayMode._id;
            }

            if ($scope.detailData.edits.PayBank) {
                pars.PayBankID = $scope.detailData.edits.PayBank._id;
            }

            if ($scope.detailData.edits.GCOMP) {
                pars.GCOMPID = $scope.detailData.edits.GCOMP.ID;
            }

            //$scope.detailData.btnIsdisable = true;
            $scope.detailData.popStatus.IsShowPop = false;
            SaveBillData(pars, refreshPage_orderadvancepayment);
        }

        function checkInput() {
            $scope.detailData.detailTipInfo = "";
            $scope.detailData.detailTipInfoType = "";
            $scope.detailData.verification.moneyTypeStatus = false;
            $scope.detailData.verification.payModeStatus = false;
            $scope.detailData.verification.moneyStatus = false;

            if (!$scope.detailData.edits.BillMoney) {
                $scope.detailData.detailTipInfo = "付款金额为空";
                $scope.detailData.detailTipInfoType = "error";
                $scope.detailData.verification.moneyStatus = true;
                return false;
            }

            if (!_.isNumber($scope.detailData.edits.BillMoney)) {
                $scope.detailData.detailTipInfo = "付款金额格式错误";
                $scope.detailData.detailTipInfoType = "error";
                $scope.detailData.verification.moneyStatus = true;
                return false;
            }

            if ($scope.detailData.edits.BillMoney <= 0) {
                $scope.detailData.detailTipInfo = "付款金额不能小于等于0";
                $scope.detailData.detailTipInfoType = "error";
                $scope.detailData.verification.moneyStatus = true;
                return false;
            }

            if ($scope.detailData.edits.BillMoney != $scope.detailData.PayPrice) {
                $scope.detailData.detailTipInfo = "付款金额必须等于结算金额";
                $scope.detailData.detailTipInfoType = "error";
                $scope.detailData.verification.moneyStatus = true;
                return false;
            }

            if (!$scope.detailData.edits.PayMode) {
                $scope.detailData.detailTipInfo = "未选择支付方式";
                $scope.detailData.detailTipInfoType = "error";
                $scope.detailData.verification.payModeStatus = true;
                return false;
            } else {
                if (!$scope.detailData.edits.PayMode._id) {
                    $scope.detailData.detailTipInfo = "未选择支付方式";
                    $scope.detailData.detailTipInfoType = "error";
                    $scope.detailData.verification.payModeStatus = true;
                    return false;
                }
            }
            return true;
        }
    };

    //刷新界面并关闭当前的Pop界面--其他收入
    function refreshPage_orderadvancepayment(data) {
        if ($scope.detailData.edits.PayMode) {
            $scope.detailData.PayMode = $scope.detailData.edits.PayMode.Name;
        }
        if ($scope.detailData.edits.GCOMP) {
            $scope.detailData.GCOMPName = $scope.detailData.edits.GCOMP.Name;
        }
        $scope.detailData.PayStatus = 2;
        $scope.detailData.WaitVerificationMoney += $scope.detailData.edits.BillMoney;
       // $scope.detailData.btnIsdisable = false;
        initStatus();
        reflashorderadvancepaymentList();
    }

    function reflashorderadvancepaymentList() {
        $rootScope[position[1]].isLoading = true;
       // $rootScope[position[1]].filters.search.iPageIndex = 1;
       // $rootScope[position[1]].filters.search.iPageSize = $rootScope.pageLimit;
        //getFinanceOrderAdvanceList($rootScope[position[1]].filters.search.orderadvancepayment, function (response) {
        //    $rootScope[position[1]].isLoading = false;
        //    $rootScope[position[1]].orderadvancepayment.list = response.list;
        //});
        vm.searchList();
    }

    $scope.removeApply_orderadvancepayment = function (val) {
        var pars = {
            FinanceID: val,
            Notes: $scope.detailData.edits.CancelNotes
        };
        //$scope.detailData.btnIsdisable = true;
        $scope.detailData.popStatus.IsShowCancelPop = false;
        SaveUnBillData(pars, removeRefreshPage_orderadvancepayment);
    };

    function removeRefreshPage_orderadvancepayment() {
        $scope.detailData.PayStatus = 1;
        $scope.detailData.WaitVerificationMoney = 0;
        $scope.detailData.edits.CancelNotes = '';
        //$scope.detailData.btnIsdisable = false;
        //$scope.closeSubView();
        reflashorderadvancepaymentList();
    }

    //取消收款确认
    $scope.cancelApply_orderadvancepayment = function () {
        $scope.detailData.popStatus.IsShowPop = false;
        $scope.detailData.popStatus.IsShowCancelPop = false;
        initStatus();
    };



    function reflashordertemporaryloanList() {
        $rootScope[position[1]].isLoading = true;
        $rootScope[position[1]].filters.search.iPageIndex = 1;
        $rootScope[position[1]].filters.search.iPageSize = $rootScope.pageLimit;
        //getFinanceOrderAdvanceList($rootScope[position[1]].filters.search.orderadvancepayment, function (response) {
        //    $rootScope[position[1]].isLoading = false;
        //    $rootScope[position[1]].orderadvancepayment.list = response.list;
        //});
    }

    $scope.removeApply_ordertemporaryloan = function () {
        var pars = {
            FinanceID: $scope.detailData.edits.Finance_id,
            Notes: $scope.detailData.edits.CancelNotes
        };
        //$scope.detailData.btnIsdisable = true;
        $scope.detailData.popStatus.IsShowCancelPop = false;
        SaveUnBillData(pars, removeRefreshPage_ordertemporaryloan);
    };

    function removeRefreshPage_ordertemporaryloan() {
        $scope.detailData.PayStatus = 1;
        $scope.detailData.WaitVerificationMoney = 0;
        $scope.detailData.edits.CancelNotes = '';
       // $scope.detailData.btnIsdisable = false;
        $scope.closeSubView();
        reflashordertemporaryloanList();
    }

    //取消收款确认
    $scope.cancelApply_ordertemporaryloan = function () {
        $scope.detailData.popStatus.IsShowPop = false;
        initStatus();
    };

    //初始化数据状态
    function initStatus() {
        $scope.detailData.detailTipInfo = "";
        $scope.detailData.detailTipInfoType = "";
    }

    //取消收款确认
    function cancelApply() {
        var sFunName = 'cancelApply_orderadvancepayment()';
        $scope.$eval(sFunName);
    }

    //删除收款确认
    function removeApply(val) {
        var sFunName = 'removeApply_orderadvancepayment('+val+')';
        $scope.$eval(sFunName);
    }

    function deleteApply() {
        showWarningBox("是否删除收款记录", function () {
            delOrderFinanceRecord($scope.detailData.RecordID, deleteRefreshPage);
        });
    }

    function deleteRefreshPage() {
        initStatus();
        $scope.closeSubView();
    }

    /*弹框 结束*/

    /*搜索列表*/
    function searchList(scrolling) {

        if ($scope.mainData.allPageCount === undefined) {
            $scope.mainData.allPageCount = $scope.mainData.pageCount;
        }

        vm.listLoading = true;
        if (scrolling === undefined) {
            vm.page = 1;
            vm.listMax = false;
            /*$rootScope.isloadList = true;
            $rootScope.showProcessBar = true;*/
            $scope.mainData.list = [];
        } else {
            if ($scope.mainData.allPageCount == 1 || vm.page == $scope.mainData.allPageCount) {
                vm.listLoading = false;
                vm.listMax = true;
                $rootScope.isloadList = false;
                $rootScope.showProcessBar = false;
                return;
            }
            vm.page += 1;
        }

        var search = getInput(vm.filter);
        if (!vm.listMax) {
            getotherSRlist(search, changeScope);
        } else {
            vm.listLoading = false;
            $rootScope.isloadList = false;
            $rootScope.showProcessBar = false;
            /* if ($scope.mainData.allPageCount == 1) {
               vm.listLoading = false;
               $rootScope.isloadList = false;
               $rootScope.showProcessBar = false;
             }*/

        }

        /*组合搜索条件*/
        function getInput(filter) {
            /*
             * iPageIndex 第几页；iPageSize 每页显示的数量
             * FinanceType 撤销类型 28 预付款；29 暂借款
             * SearchInfo 搜索关键词
             * STime 撤销时间搜索开始
             * ETime 撤销时间搜索结束
             * ErificationStatus 撤销状态
             * DeptId 部门id
             * */
            var data = {
                PageIndex: vm.page,
                PageSize: vm.pageSize,
                RType: vm.RType
            };
            console.log(JSON.stringify(filter));
            if (filter !== undefined) {
                //关键词
                if (filter.keyword) {
                    data.SearchInfo = filter.keyword;
                }
                //撤销时间搜索开始
                if (filter.startDate) {
                    data.StartTime = $filter("date")(filter.startDate, "yyyy-MM-dd");
                }
                //撤销时间搜索结束
                if (filter.endDate) {
                    data.EndTime = $filter("date")(filter.endDate, "yyyy-MM-dd");
                }
                //支付状态
                if (filter.PayType) {
                    data.PayStatus = filter.PayType;
                }
                //部门id
                if (filter.EmployeeDepartmentID) {
                    data.DepartmentID = filter.EmployeeDepartmentID;
                }
                //结算类型
                if (filter.FinanceDeptInOutTypeids) {
                    data.FinanciaType = filter.FinanceDeptInOutTypeids;
                }
                $rootScope.mainData.SR = filter;
            }
            // console.log(JSON.stringify(data));
            return data;
        }

        function changeScope(data) {
            $scope.mainData.list = _.union($scope.mainData.list, data.list);
            $scope.mainData.allPageCount = data.pageCount;
            if (vm.page == $scope.mainData.allPageCount) {
                vm.listMax = true;
            }
            vm.listLoading = false;
            $rootScope.isloadList = false;
            $rootScope.showProcessBar = false;
        }
    }


    /*输入框内容按下回车*/
    function searchSubmit(keyEvent) {
        if (keyEvent.which === 13) {
            vm.searchList();
        }
    }

    function changeScope() {
        var item = _.filter($scope.mainData.list, function (i) {
            return i._id == revokeID;
        });
        $scope.mainData.list = _.without($scope.mainData.list, item[0]);
    }

    //vm.changePayMode = changePayMode;
    //function changePayMode() {
    //    var PayModeObjectIndex = _.findIndex($rootScope.FinancesType.FinanceDeptInOutType, function (item) {
    //        return item._id == $scope.mainData.filters.search.PayModeValue;
    //    });
    //    $scope.mainData.filters.search.PayMode = $rootScope.FinancesType.FinanceDeptInOutType[PayModeObjectIndex];
    //}
    //function changePayMode() {
    //    var PayModeObjectIndex = _.findIndex($rootScope.FinancesType.FinanceDeptInOutType, function (item) {
    //        return item._id == $scope.mainData.filters.search.PayModeValue;
    //    });
    //    $scope.mainData.filters.search.PayMode = $rootScope.FinancesType.FinanceDeptInOutType[PayModeObjectIndex];
    //}

    /*枚举状态*/
    vm.EPayStatusPayment = [{
        'value': 1,
        'name': '未确认'
    }, {
        'value': 2,
        'name': '已确认'
    }];

}



//会员卡退款
angular.module("HY").controller("CardRefundController", CardRefundController);

function CardRefundController(getCardRefundlist, setReturnRevoke, showWarningBox, $scope, $rootScope, $filter, closeSubView, getFinanceDeptInOutTypeAllSRlist, SaveBillData, SaveUnBillData) {
    var vm = this;
    vm.page = 1;
    vm.pageSize = 20;
    $rootScope.mainData.navTabType = "CD";
    vm.template = {};
    vm.templateBasicUrl = "/public/angularView/finances/business/IncomeSettlement/";
    vm.template.BusinessNavTab = "/public/angularView/finances/business/IncomeSettlement/IncomeSettlementNavTab.html"; //导航搜索条件
    vm.template.RevokeList = vm.templateBasicUrl + "CardRefundlist.html"; //会员卡退款列表框public/angularView/finances/business/IncomeSettlement/CardRefundlist.html
    vm.searchSubmit = searchSubmit;
    vm.filter = {}; //关键字，时间搜索，撤销状态，部门
    vm.searchList = searchList;


    /*弹框 开始*/
    $scope.detailData.template = {};
    $scope.detailData.template.baseUrl = "/public/angularView/finances/business/IncomeSettlement/";
    $scope.detailData.template = {
        Popover: ($scope.detailData.template.baseUrl + 'SR_determine.html'),
        CancelPopover: ($scope.detailData.template.baseUrl + 'SR_cancel.html')
    };

    $scope.detailData.popStatus = {
        IsShowPop: false,
        IsShowCancelPop: false
    };

    vm.changeStatus = changeStatus;
    vm.changePayMode = changePayMode;
    vm.changePayBank = changePayBank;
    vm.submitApply = submitApply;
    vm.cancelApply = cancelApply;
    vm.removeApply = removeApply;
    vm.deleteApply = deleteApply;

    //$scope.detailData.btnIsdisable = false;

    $scope.detailData.edits = {};
    $scope.detailData.edits.GCOMP = {};
    $scope.detailData.verification = {
        payModeStatus: false,
        payBankStatus: false,
        moneyStatus: false
    };

    $scope.detailData.detailTipInfo = "";
    $scope.detailData.detailTipInfoType = "";

    function changeStatus(type) {
        $scope.detailData.verification[type] = false;
    }

    //切换收款方式时，进行数据对象的绑定
    function changePayMode() {
        var PayModeObjectIndex = _.findIndex($rootScope.FinancesType.paymodeList, function (item) {
            return item._id == $scope.detailData.edits.PayModeValue;
        });
        $scope.detailData.edits.PayMode = $rootScope.FinancesType.paymodeList[PayModeObjectIndex];
    }

    //切换支付银行时，进行数据对象的绑定
    function changePayBank() {
        var PayBankObjectIndex = _.findIndex($rootScope.FinancesType.bankList, function (item) {
            return item._id == $scope.detailData.edits.PayBankValue;
        });
        $scope.detailData.edits.PayBank = $rootScope.FinancesType.bankList[PayBankObjectIndex];
    }

    function submitApply(val) {
        var sFunName = 'submitApply_orderadvancepayment(' + val + ')';
        $scope.$eval(sFunName);
    }

    //提交结算确认--其他收入
    $scope.submitApply_orderadvancepayment = function (val) {

        if (checkInput()) {
            console.log("FinanceID:" + val);
            var pars = {
                FinanceID: val,
                BillMoney: $scope.detailData.edits.BillMoney
            };
            if ($scope.detailData.edits.PayMode) {
                pars.PayModeID = $scope.detailData.edits.PayMode._id;
            }

            if ($scope.detailData.edits.PayBank) {
                pars.PayBankID = $scope.detailData.edits.PayBank._id;
            }

            if ($scope.detailData.edits.GCOMP) {
                pars.GCOMPID = $scope.detailData.edits.GCOMP.ID;
            }

            //$scope.detailData.btnIsdisable = true;
            $scope.detailData.popStatus.IsShowPop = false;
            SaveBillData(pars, refreshPage_orderadvancepayment);
        }

        function checkInput() {
            $scope.detailData.detailTipInfo = "";
            $scope.detailData.detailTipInfoType = "";
            $scope.detailData.verification.moneyTypeStatus = false;
            $scope.detailData.verification.payModeStatus = false;
            $scope.detailData.verification.moneyStatus = false;

            if (!$scope.detailData.edits.BillMoney) {
                $scope.detailData.detailTipInfo = "付款金额为空";
                $scope.detailData.detailTipInfoType = "error";
                $scope.detailData.verification.moneyStatus = true;
                return false;
            }

            if (!_.isNumber($scope.detailData.edits.BillMoney)) {
                $scope.detailData.detailTipInfo = "付款金额格式错误";
                $scope.detailData.detailTipInfoType = "error";
                $scope.detailData.verification.moneyStatus = true;
                return false;
            }

            if ($scope.detailData.edits.BillMoney <= 0) {
                $scope.detailData.detailTipInfo = "付款金额不能小于等于0";
                $scope.detailData.detailTipInfoType = "error";
                $scope.detailData.verification.moneyStatus = true;
                return false;
            }

            if ($scope.detailData.edits.BillMoney != $scope.detailData.PayPrice) {
                $scope.detailData.detailTipInfo = "付款金额必须等于结算金额";
                $scope.detailData.detailTipInfoType = "error";
                $scope.detailData.verification.moneyStatus = true;
                return false;
            }

            if (!$scope.detailData.edits.PayMode) {
                $scope.detailData.detailTipInfo = "未选择支付方式";
                $scope.detailData.detailTipInfoType = "error";
                $scope.detailData.verification.payModeStatus = true;
                return false;
            } else {
                if (!$scope.detailData.edits.PayMode._id) {
                    $scope.detailData.detailTipInfo = "未选择支付方式";
                    $scope.detailData.detailTipInfoType = "error";
                    $scope.detailData.verification.payModeStatus = true;
                    return false;
                }
            }
            return true;
        }
    };

    //刷新界面并关闭当前的Pop界面--其他收入
    function refreshPage_orderadvancepayment(data) {
        if ($scope.detailData.edits.PayMode) {
            $scope.detailData.PayMode = $scope.detailData.edits.PayMode.Name;
        }
        if ($scope.detailData.edits.GCOMP) {
            $scope.detailData.GCOMPName = $scope.detailData.edits.GCOMP.Name;
        }
        $scope.detailData.PayStatus = 2;
        $scope.detailData.WaitVerificationMoney += $scope.detailData.edits.BillMoney;
        //$scope.detailData.btnIsdisable = false;
        initStatus();
        reflashorderadvancepaymentList();
    }

    function reflashorderadvancepaymentList() {
        $rootScope[position[1]].isLoading = true;
        $rootScope[position[1]].filters.search.iPageIndex = 1;
        $rootScope[position[1]].filters.search.iPageSize = $rootScope.pageLimit;
        //getFinanceOrderAdvanceList($rootScope[position[1]].filters.search.orderadvancepayment, function (response) {
        //    $rootScope[position[1]].isLoading = false;
        //    $rootScope[position[1]].orderadvancepayment.list = response.list;
        //});
    }

    $scope.removeApply_orderadvancepayment = function (val) {
        var pars = {
            FinanceID: val,
            Notes: $scope.detailData.edits.CancelNotes
        };
        //$scope.detailData.btnIsdisable = true;
        $scope.detailData.popStatus.IsShowCancelPop = false;
        SaveUnBillData(pars, removeRefreshPage_orderadvancepayment);
    };

    function removeRefreshPage_orderadvancepayment() {
        $scope.detailData.PayStatus = 1;
        $scope.detailData.WaitVerificationMoney = 0;
        $scope.detailData.edits.CancelNotes = '';
        //$scope.detailData.btnIsdisable = false;
        $scope.closeSubView();
        reflashorderadvancepaymentList();
    }

    //取消收款确认
    $scope.cancelApply_orderadvancepayment = function () {
        $scope.detailData.popStatus.IsShowPop = false;
        initStatus();
    };



    function reflashordertemporaryloanList() {
        $rootScope[position[1]].isLoading = true;
        $rootScope[position[1]].filters.search.iPageIndex = 1;
        $rootScope[position[1]].filters.search.iPageSize = $rootScope.pageLimit;
        //getFinanceOrderAdvanceList($rootScope[position[1]].filters.search.orderadvancepayment, function (response) {
        //    $rootScope[position[1]].isLoading = false;
        //    $rootScope[position[1]].orderadvancepayment.list = response.list;
        //});
    }

    $scope.removeApply_ordertemporaryloan = function () {
        var pars = {
            FinanceID: $scope.detailData.edits.Finance_id,
            Notes: $scope.detailData.edits.CancelNotes
        };
        //$scope.detailData.btnIsdisable = true;
        $scope.detailData.popStatus.IsShowCancelPop = false;
        SaveUnBillData(pars, removeRefreshPage_ordertemporaryloan);
    };

    function removeRefreshPage_ordertemporaryloan() {
        $scope.detailData.PayStatus = 1;
        $scope.detailData.WaitVerificationMoney = 0;
        $scope.detailData.edits.CancelNotes = '';
        //$scope.detailData.btnIsdisable = false;
        $scope.closeSubView();
        reflashordertemporaryloanList();
    }

    //取消收款确认
    $scope.cancelApply_ordertemporaryloan = function () {
        $scope.detailData.popStatus.IsShowPop = false;
        initStatus();
    };

    //初始化数据状态
    function initStatus() {
        $scope.detailData.detailTipInfo = "";
        $scope.detailData.detailTipInfoType = "";
    }

    //取消收款确认
    function cancelApply() {
        var sFunName = 'cancelApply_orderadvancepayment()';
        $scope.$eval(sFunName);
    }

    //删除收款确认
    function removeApply(val) {
        var sFunName = 'removeApply_orderadvancepayment(' + val + ')';
        $scope.$eval(sFunName);
    }

    function deleteApply() {
        showWarningBox("是否删除收款记录", function () {
            delOrderFinanceRecord($scope.detailData.RecordID, deleteRefreshPage);
        });
    }

    function deleteRefreshPage() {
        initStatus();
        $scope.closeSubView();
    }

    /*弹框 结束*/

    /*搜索列表*/
    function searchList(scrolling) {

        if ($scope.mainData.allPageCount === undefined) {
            $scope.mainData.allPageCount = $scope.mainData.pageCount;
        }

        vm.listLoading = true;
        if (scrolling === undefined) {
            vm.page = 1;
            vm.listMax = false;
            /*$rootScope.isloadList = true;
            $rootScope.showProcessBar = true;*/
            $scope.mainData.list = [];
        } else {
            if ($scope.mainData.allPageCount == 1 || vm.page == $scope.mainData.allPageCount) {
                vm.listLoading = false;
                vm.listMax = true;
                $rootScope.isloadList = false;
                $rootScope.showProcessBar = false;
                return;
            }
            vm.page += 1;
        }

        var search = getInput(vm.filter);
        if (!vm.listMax) {
            getCardRefundlist(search, changeScope);
        } else {
            vm.listLoading = false;
            $rootScope.isloadList = false;
            $rootScope.showProcessBar = false;
            /* if ($scope.mainData.allPageCount == 1) {
               vm.listLoading = false;
               $rootScope.isloadList = false;
               $rootScope.showProcessBar = false;
             }*/

        }

        /*组合搜索条件*/
        function getInput(filter) {
            /*
             * iPageIndex 第几页；iPageSize 每页显示的数量
             * FinanceType 撤销类型 28 预付款；29 暂借款
             * SearchInfo 搜索关键词
             * STime 撤销时间搜索开始
             * ETime 撤销时间搜索结束
             * ErificationStatus 撤销状态
             * DeptId 部门id
             * */
            var data = {
                iPageIndex: vm.page,
                iPageSize: vm.pageSize,
                RType: vm.RType
            };
            console.log(JSON.stringify(filter));
            //关键词
            if (filter.keyword) {
                data.SearchInfo = filter.keyword;
            }
            //撤销时间搜索开始
            if (filter.startDate) {
                data.STime = $filter("date")(filter.startDate, "yyyy-MM-dd");
            }
            //撤销时间搜索结束
            if (filter.endDate) {
                data.ETime = $filter("date")(filter.endDate, "yyyy-MM-dd");
            }
            //结算状态（会员卡退款需要）
            if (filter.PayType) {
                data.PayState = filter.PayType;
            }
            //部门id
            if (filter.EmployeeDepartmentID) {
                data.DepartmentID = filter.EmployeeDepartmentID;
            }
            //结算类型
            if (filter.FinanceDeptInOutTypeid) {
                data.FinanciaType = filter.FinanceDeptInOutTypeid;
            }
            // console.log(JSON.stringify(data));
            return data;
        }

        function changeScope(data) {
            $scope.mainData.list = _.union($scope.mainData.list, data.list);
            $scope.mainData.allPageCount = data.pageCount;
            if (vm.page == $scope.mainData.allPageCount) {
                vm.listMax = true;
            }
            vm.listLoading = false;
            $rootScope.isloadList = false;
            $rootScope.showProcessBar = false;
        }
    }


    /*输入框内容按下回车*/
    function searchSubmit(keyEvent) {
        if (keyEvent.which === 13) {
            vm.searchList();
        }
    }

    function changeScope() {
        var item = _.filter($scope.mainData.list, function (i) {
            return i._id == revokeID;
        });
        $scope.mainData.list = _.without($scope.mainData.list, item[0]);
    }

    //vm.changePayMode = changePayMode;
    //function changePayMode() {
    //    var PayModeObjectIndex = _.findIndex($rootScope.FinancesType.FinanceDeptInOutType, function (item) {
    //        return item._id == $scope.mainData.filters.search.PayModeValue;
    //    });
    //    $scope.mainData.filters.search.PayMode = $rootScope.FinancesType.FinanceDeptInOutType[PayModeObjectIndex];
    //}
    //function changePayMode() {
    //    var PayModeObjectIndex = _.findIndex($rootScope.FinancesType.FinanceDeptInOutType, function (item) {
    //        return item._id == $scope.mainData.filters.search.PayModeValue;
    //    });
    //    $scope.mainData.filters.search.PayMode = $rootScope.FinancesType.FinanceDeptInOutType[PayModeObjectIndex];
    //}

    /*枚举状态*/
    vm.EPayStatusPayment = [{
        'value': 1,
        'name': '未确认'
    }, {
        'value': 2,
        'name': '已确认'
    }];

}
﻿ //汇款认领
app.controller("RemittanceOrderListCtrl", RemittanceOrderListCtrl);

function RemittanceOrderListCtrl($scope, $rootScope, $filter, getRemittanceOrderList) {
    var ctrl = this;
    var vm = $rootScope[position[1]].RemittanceOrderList;
    vm.listData.search.ClaimState = 1
        //var vmm = $rootScope[position[2]];
    vm.RemittanceOrderWindows = {};
    ctrl.searchList = function() {
        $rootScope.showProcessBar = true;
        vm.listData.search.iPageIndex = 1;

        getRemittanceOrderList(vm.listData.search, function(data) {
            $rootScope.isloadList = false;
            $rootScope.showProcessBar = false;
            vm.listData.list = data.RemittanceOrderList.listData.list;
        });
    };

    ctrl.loadList = function() {
        $rootScope.showProcessBar = true;
        vm.listData.search.iPageIndex += 1;
        getRemittanceOrderList(vm.listData.search, function(data) {
            $rootScope.isloadList = false;
            $rootScope.showProcessBar = false;
            vm.listData.list.push.apply(vm.listData.list, data.RemittanceOrderList.listData.list);
        });
    };

    $scope.closeRemittanceOrderDialog = function(name) {
        vm.RemittanceOrderWindows.isRemittanceOrder = false;
        if (name == "openRemittanceOrder") {
            vm.RemittanceOrderWindows.isRemittanceOrder = true;
        }
    };

    ctrl.openRemittanceOrder = function() {
        $scope.closeRemittanceOrderDialog();
    };
}
// app.controller('ILoanOperateController', function($scope, $filter, $rootScope) {
//
//   $scope.search = {
//     year: $filter('date')(new Date(), "yyyy"),
//     month: $filter('date')(new Date(), "MM")
//   };
//
// 	$scope.dateOptions = {
// 		formatYear: 'yy',
//     startingDay: 1
//   };
//
//   $scope.loadBasicData = function() {
//
//   };
//
//   $scope.getNewList = function() {
//
//   };
//
//   $scope.showSubContent = function(id) {
//
//   };
//
//   $scope.saveBooking = function(hotelCode, roomCode) {
//
//   };
//
//   $scope.submitBooking = function() {
//
//   };
//
//   $scope.clearData = function() {
//
//   };
//
//   $scope.cancelBooking = function(order) {
//
//   };
//
//   $scope.refreshPage = function() {
//
//   };
//
// });
app.controller("CensusDetailController", CensusDetailController);


function CensusDetailController($scope, $rootScope, $http,
	showErrorInfo, $filter, getCensusPlanDetail, getCensusOrderList, getCensusPurchaseList,
	getCensusGuideList, getCensusSaleCommissionList, getCensusOtherCostList, getCensusPurchaseVerificationList,
	saveCensusPurchase, addRefreshPageByID, getCensusPurchaseData, inputCheckEmpty,
	inputCheckPositivenumber, delCensusPurchase, showWarningBox, getFinanceOrderAdvanceInfo,
	saveCensusDeductionDiscount, saveCensusPercentage, saveCensusOhterCost, delCensusOtherCost,
	getCensusOrderInsureList, getCensusOrderPaymentList, getCensusOrderGiftList,
	getCensusList, submitCensusInfo, getPersonnel, transferCensus, openWindowTab, delCensusInfo,
	saveCensusNotReceivableReason, auditCensusInfo, backCensusInfo, getCensusDetail) {
	var vm = $rootScope[position[2]];
	vm.CensusPurchase = {
		VerificationList: []
	};
	//$rootScope.OPtype
	vm.dreamFlyUrl = dreamFlyUrl;
	vm.CensusCommission = {};
	vm.CensusOtherCost = {};
	vm.PurchaseAdvanceInfo = {};
	vm.PurchaseInfo = {};
	vm.CensusOrderInsureList = {};
	vm.CensusOrderPaymentList = {};
	vm.CensusOrderGiftList = {};
	vm.CensusTransfer = {
		Personnel: vm.reportInfo.Belong.ForeignKeyID,
		Department: vm.reportInfo.Belong.EmployeeDepartmentID
	};
	vm.AuditBack = {};
	vm.NotReceivableReason = {};
	$scope.addData = {
		GCOMP: {}
	};
	$scope.SumbitBut = true;
	vm.VerificationList = {};
	vm.VerificationList.FinanceType = "2";
	vm.VerificationList.UserType = "1";
	vm.VerificationList.ErificationStatus = 1;
	vm.VerificationList.PayStatus = 2;
	vm.VerificationList.iPageIndex = 1;
	vm.VerificationList.iPageSize = 999;
	vm.VerificationList.list = [];


	$scope.$watch('addData.GCOMP', function(value) {
		console.log(value);
		if (value !== undefined) {
			vm.VerificationList.GCOMPID = $scope.addData.GCOMP.ID;
			$scope.searchVerificationList();
		}
	}, true);

	$scope.searchVerificationList = function() {
		if (vm.CensusPurchase.PayTypeID == 1) {
			getCensusPurchaseVerificationList(vm.VerificationList, function(data) {
				vm.VerificationList.list = data.list;
				vm.VerificationList.list.forEach(function(item) {
					item.VeriMoney = 0;
					vm.CensusPurchase.VerificationList.forEach(function(member) {
						if (member.OriginalInfo !== undefined && member.OriginalInfo.SourceID === item._id) {
							item.VerificationID = member._id;
							item.VeriMoney = member.Money;
							item.WaitVerificationMoney = item.WaitVerificationMoney + member.Money;
							return;
						}
					});
				});
			});
		}
	};

	$scope.closeCensusDialog = function(name) {
		vm.CensusPurchase.isOpen = false; //添加成本弹框
		vm.CensusOtherCost.isOpen = false; //添加其他成本弹框
		vm.CensusTransfer.isTransferOpen = false; //转让弹框
		vm.AuditBack.isAuditBackOpen = false; //审核退回弹框
		vm.purchaseList.list.forEach(function(item) {
			item.isEditOpen = false; //编辑成本弹框
			item.isViewOpen = false;
			if (item.VerificationInfo instanceof Array) {
				item.VerificationInfo.forEach(function(data) {
					data.isViewVerificationOpen = false; //查看核销明细弹框
				});
			}
		});

		vm.otherCostList.list.forEach(function(item) {
			item.isEditOpen = false;
			item.isViewOpen = false;
		});

		vm.saleCommissionList.list.forEach(function(item) {
			item.isDeductionOpen = false;
			item.isPercentageOpen = false;
		});

		vm.orderList.list.forEach(function(item) {
			item.isInsureViewOpen = false;
			item.isPaymentViewOpen = false;
			item.isGiftViewOpen = false;
			item.isNotReceivableReasonOpen = false;
		});

		if (name === "addPurchase") { //添加成本弹框
			vm.CensusPurchase.isOpen = true;
		}
		if (name === "editPurchase") { //编辑成本弹框
			vm.purchaseList.list.forEach(function(item) {
				item.isEditOpen = true;
			});
		}
		if (name === "editDeductionDiscount") { //编辑扣除优惠
			vm.saleCommissionList.list.forEach(function(item) {
				item.isDeductionOpen = true;
			});
		}
		if (name === "editPercentage") { //编辑提成比例
			vm.saleCommissionList.list.forEach(function(item) {
				item.isPercentageOpen = true;
			});
		}
		if (name === "viewPurchaseAdvanceInfo") { //查看核销明细弹框
			vm.purchaseList.list.forEach(function(item) {
				if (item.VerificationInfo instanceof Array) {
					item.VerificationInfo.forEach(function(data) {
						data.isViewVerificationOpen = true;
					});
				}
			});
		}
	};

	$scope.viewPurchaseAdvanceInfo = function(item) {
		var param = {
			id: item.SourceID
		};
		$scope.closeCensusDialog();
		getFinanceOrderAdvanceInfo(param, function(data) {
			vm.PurchaseAdvanceInfo = data;
		});
	};


	$scope.viewPurchase = function(data) {
		vm.PurchaseInfo = data;
		$scope.closeCensusDialog();
	};

	$scope.addPurchase = function() {
		vm.CensusPurchase = {
			PayTypeID: '1',
			VerificationList: []
		};
		$scope.addData = {
			GCOMP: {}
		};
		$scope.closeCensusDialog();
	};

	$scope.editPurchase = function(item) {
		if (!item.isEditOpen) {
			$scope.closeCensusDialog();
			var param = {
				PurchaseID: item.PurchaseID
			};
			getCensusPurchaseData(param, function(data) {
				vm.CensusPurchase.PurchaseID = data.Purchase._id;
				vm.CensusPurchase.QuoteTypeID = data.Purchase.QuoteType.ForeignKeyID;
				vm.CensusPurchase.Title = data.Purchase.Title;
				vm.CensusPurchase.PayModeID = data.Purchase.PayMode.ForeignKeyID;
				vm.CensusPurchase.PayTypeID = data.Purchase.PayType.ID.toString();
				vm.CensusPurchase.PayPrice = data.Purchase.PayPrice;
				vm.CensusPurchase.Notes = data.Purchase.Notes;
				vm.CensusPurchase.VerificationList = data.VerificationList;
				vm.CensusPurchase.GCOMPID = data.Purchase.GCOMP.ForeignKeyID;
				vm.CensusPurchase.GCOMPAccountID = data.Purchase.GCOMPAccount.ForeignKeyID;
				vm.VerificationList.GCOMPID = data.Purchase.GCOMP.ForeignKeyID;
				item.isEditOpen = !item.isEditOpen;
			});
		} else {
			item.isEditOpen = !item.isEditOpen;
		}
	};

	$scope.delPurchase = function(data) {
		showWarningBox("是否删除成本", function() {
			var param = {
				PurchaseID: data.PurchaseID
			};
			data.isDel = true;
			delCensusPurchase(param, function(data) {
				$scope.detailTipInfo = "删除成功";
				$scope.detailTipInfoType = "success";
				$scope.toggleMask(true);
				getCensusDetail({
					ID: vm.reportInfo.CensusID
				}, function(data) {
					vm = angular.extend(vm, data);
					$scope.toggleMask(false);
				});
				//var viewId = $rootScope[switchType[2]].id;
				//addRefreshPageByID(viewId);
				//$scope.fetch("financeCenter/Census/Detail?ID=" + vm.reportInfo.CensusID, vm.reportInfo.CensusID);
			});
		}, function() {
			data.isDel = false;
		});

	};
	$scope.saveVerification = function(data) {
		if (data.VeriMoney > data.WaitVerificationMoney) {
			$scope.detailTipInfo = "数据核销金额大于可核销金额";
			$scope.detailTipInfoType = "error";
			return;
		} else {
			data.edit = false;
		}
		vm.CensusPurchase.Notes = data.Notes;
		var VeriMoney = 0;
		vm.VerificationList.list.forEach(function(item) {
			VeriMoney = VeriMoney + parseFloat(item.VeriMoney);
		});
		if (vm.CensusPurchase.PayPrice === undefined || vm.CensusPurchase.PayPrice < VeriMoney) {
			vm.CensusPurchase.PayPrice = VeriMoney;
		}
		vm.CensusPurchase.Title = data.FinanceTtile;
	};

	$scope.savePurchase = function() {
		// var form = $scope.$parent.$$childTail.$$childTail;
		var GCOMPAccountID = "";
		if ($scope.addData.GCOMP.AccountInfo instanceof Array && $scope.addData.GCOMP.AccountInfo.length > 0) {
			GCOMPAccountID = $scope.addData.GCOMP.AccountInfo[0].ForeignKeyID;
		}
		var PurchaseVerificationList = [];
		if (vm.CensusPurchase.PayTypeID == 1) {
			vm.VerificationList.list.forEach(function(item) {
				if (item.VeriMoney > 0) {
					var purchaseVerification = {
						VerificationID: item.VerificationID,
						SourceID: item._id,
						VerificationMoney: item.VeriMoney,
						VerificationNote: item.Notes
					};
					PurchaseVerificationList.push(purchaseVerification);
				}
			});
		}

		var param = {
			PurchaseID: vm.CensusPurchase.PurchaseID,
			CensusID: vm.reportInfo.CensusID,
			QuoteTypeID: vm.CensusPurchase.QuoteTypeID,
			Title: vm.CensusPurchase.Title,
			GCOMPID: $scope.addData.GCOMP.ID,
			GCOMPAccountID: GCOMPAccountID,
			PayModeID: vm.CensusPurchase.PayModeID,
			PayTypeID: vm.CensusPurchase.PayTypeID,
			PayPrice: vm.CensusPurchase.PayPrice,
			Notes: vm.CensusPurchase.Notes,
			PurchaseVerificationList: PurchaseVerificationList
		};

		var data = {
			"RequestData": JSON.stringify(param)
		};

		if (checkInput()) {
			$scope.SumbitBut = false;
			saveCensusPurchase(data, function(data) {
				$scope.detailTipInfo = "采购成本保存成功";
				$scope.detailTipInfoType = "success";
				$scope.SumbitBut = true;
				$scope.closeCensusDialog();
				$scope.toggleMask(true);
				getCensusDetail({
					ID: vm.reportInfo.CensusID
				}, function(data) {
					vm = angular.extend(vm, data);
					$scope.toggleMask(false);
				});
				// var viewId = $rootScope[switchType[2]].id;
				// addRefreshPageByID(viewId);
				//$scope.fetch("financeCenter/Census/Detail?ID=" + vm.reportInfo.CensusID, vm.reportInfo.CensusID);
			});
		}

		function checkInput() {
			var flag = true;
			var requiredList = ["QuoteTypeID", "Title", "PayModeID", "PayPrice"];
			for (var item in requiredList) {
				flag = inputCheckEmpty(param[requiredList[item]]);
				if (flag === false) {
					if (requiredList[item] === "QuoteTypeID") {
						$scope.detailTipInfo = "请选择成本类型";
					} else if (requiredList[item] === "Title") {
						$scope.detailTipInfo = "请输入成本名称";
					} else if (requiredList[item] === "PayModeID") {
						$scope.detailTipInfo = "请选择结算通道";
					} else if (requiredList[item] === "PayPrice") {
						$scope.detailTipInfo = "请输入成本金额";
					}
					$scope.detailTipInfoType = "error";
					break;
				}
			}



			if (!inputCheckPositivenumber(param.PayPrice)) {
				$scope.detailTipInfo = "请输入正确成本金额";
				$scope.detailTipInfoType = "error";
				flag = false;
			}

			if (!inputCheckEmpty(param.GCOMPID) || !inputCheckEmpty(param.GCOMPAccountID)) {
				$scope.detailTipInfo = "请选择结算单位";
				$scope.detailTipInfoType = "error";
				flag = false;
			}

			var VeriMoney = 0;
			vm.VerificationList.list.forEach(function(item) {
				VeriMoney = VeriMoney + parseFloat(item.VeriMoney);
				if (item.edit !== undefined && item.edit) {
					$scope.detailTipInfo = "请保存核销数据";
					$scope.detailTipInfoType = "error";
					flag = false;
					return;
				}
			});
			if (VeriMoney > param.PayPrice) {
				$scope.detailTipInfo = "请输入成本金额小于核销金额";
				$scope.detailTipInfoType = "error";
				flag = false;
			}
			return flag;
		}


		// function checkEmpty(item) {
		//   if (item === undefined || item === null || item === "" || item === "000000000000000000000000") {
		//     return false;
		//   } else {
		//     return true;
		//   }
		// }
	};


	$scope.editDeductionDiscount = function(item) {
		vm.CensusCommission.DiscountDeduct = item.DiscountDeduct;
		vm.CensusCommission.DiscountDeductNotes = item.DiscountDeductNotes;
		vm.CensusCommission.OrderID = item.OrderID;
		vm.CensusCommission.CommissionID = item.CommissionID;
		vm.CensusCommission.PerCapitaGrossProfitTax = item.PerCapitaGrossProfitTax;
		$scope.closeCensusDialog();
	};

	$scope.saveDeductionDiscount = function() {
		var param = {
			CensusID: vm.reportInfo.CensusID,
			OrderID: vm.CensusCommission.OrderID,
			SaleCommissionID: vm.CensusCommission.CommissionID,
			PerCapitaGrossProfitTax: vm.CensusCommission.PerCapitaGrossProfitTax,
			DiscountDeductMoney: vm.CensusCommission.DiscountDeduct,
			Notes: vm.CensusCommission.DiscountDeductNotes
		};
		if (checkInput()) {
			$scope.SumbitBut = false;
			saveCensusDeductionDiscount(param, function() {
				$scope.detailTipInfo = "扣除优惠保存成功";
				$scope.detailTipInfoType = "success";
				$scope.SumbitBut = true;
				$scope.closeCensusDialog();
				$scope.toggleMask(true);
				getCensusDetail({
					ID: vm.reportInfo.CensusID
				}, function(data) {
					vm = angular.extend(vm, data);
					$scope.toggleMask(false);
				});
				// var viewId = $rootScope[switchType[2]].id;
				// addRefreshPageByID(viewId);
				// $scope.fetch("financeCenter/Census/Detail?ID=" + vm.reportInfo.CensusID, vm.reportInfo.CensusID);
			});
		}

		function checkInput() {
			var flag = true;
			var requiredList = ["DiscountDeductMoney"];
			for (var item in requiredList) {
				flag = inputCheckEmpty(param[requiredList[item]]);
				if (flag === false) {
					if (requiredList[item] === "DiscountDeductMoney") {
						$scope.detailTipInfo = "请输入扣除优惠金额";

					}
					$scope.detailTipInfoType = "error";
				}
				break;
			}
			if (!inputCheckPositivenumber(param.DiscountDeductMoney)) {
				$scope.detailTipInfo = "请输入正确扣除优惠金额";
				$scope.detailTipInfoType = "error";
				flag = false;
			}
			return flag;
		}
	};

	$scope.editPercentage = function(item) {
		vm.CensusCommission.OrderID = item.OrderID;
		vm.CensusCommission.CommissionID = item.CommissionID;
		vm.CensusCommission.PerCapitaGrossProfitTax = item.PerCapitaGrossProfitTax;
		vm.CensusCommission.Percentage = item.Percentage;
		$scope.closeCensusDialog();
	};


	$scope.savePercentage = function() {
		var param = {
			CensusID: vm.reportInfo.CensusID,
			OrderID: vm.CensusCommission.OrderID,
			SaleCommissionID: vm.CensusCommission.CommissionID,
			PerCapitaGrossProfitTax: vm.CensusCommission.PerCapitaGrossProfitTax,
			Percentage: vm.CensusCommission.Percentage
		};
		if (checkInput()) {
			$scope.SumbitBut = false;
			saveCensusPercentage(param, function() {
				$scope.detailTipInfo = "提成比例保存成功";
				$scope.detailTipInfoType = "success";
				$scope.SumbitBut = true;
				$scope.closeCensusDialog();
				$scope.toggleMask(true);
				getCensusDetail({
					ID: vm.reportInfo.CensusID
				}, function(data) {
					vm = angular.extend(vm, data);
					$scope.toggleMask(false);
				});
				// var viewId = $rootScope[switchType[2]].id;
				// addRefreshPageByID(viewId);
				// $scope.fetch("financeCenter/Census/Detail?ID=" + vm.reportInfo.CensusID, vm.reportInfo.CensusID);
			});
		}

		function checkInput() {
			var flag = true;
			var requiredList = ["Percentage"];
			for (var item in requiredList) {
				flag = inputCheckEmpty(param[requiredList[item]]);
				if (flag === false) {
					if (requiredList[item] === "Percentage") {
						$scope.detailTipInfo = "请输入提成比例";

					}
					$scope.detailTipInfoType = "error";
				}
				break;
			}
			if (!inputCheckPositivenumber(param.Percentage)) {
				$scope.detailTipInfo = "请输入正确提成比例";
				$scope.detailTipInfoType = "error";
				flag = false;
			}
			return flag;
		}
	};


	$scope.addOtherCost = function() {
		$scope.closeCensusDialog();
		vm.CensusOtherCost = {
			PayTypeID: '1'
		};
		$scope.addData = {
			GCOMP: {}
		};
	};

	$scope.editOtherCost = function(item) {
		if (!item.isEditOpen) {
			$scope.closeCensusDialog();
			vm.CensusOtherCost.OtherCostID = item.OtherCostID;
			vm.CensusOtherCost.QuoteTypeID = item.QuoteTypeID;
			vm.CensusOtherCost.Title = item.Title;
			vm.CensusOtherCost.PayModeID = item.PayModeID;
			vm.CensusOtherCost.PayTypeID = item.PayTypeID;
			vm.CensusOtherCost.PayPrice = item.PayPrice;
			vm.CensusOtherCost.Notes = item.Notes;
			vm.CensusOtherCost.GCOMPID = item.GCOMPID;
			vm.CensusOtherCost.GCOMPAccountID = item.GCOMPAccountID;
			item.isEditOpen = !item.isEditOpen;
		}
		vm.isEditOpen = !item.isEditOpen;
	};


	$scope.delOtherCost = function(data) {
		showWarningBox("是否删除其他损失成本", function() {
			var param = {
				OtherCostID: data.OtherCostID
			};
			data.isDel = true;
			delCensusOtherCost(param, function(data) {
				$scope.detailTipInfo = "删除成功";
				$scope.detailTipInfoType = "success";
				$scope.toggleMask(true);
				getCensusDetail({
					ID: vm.reportInfo.CensusID
				}, function(data) {
					vm = angular.extend(vm, data);
					$scope.toggleMask(false);
				});
				// var viewId = $rootScope[switchType[2]].id;
				// addRefreshPageByID(viewId);
				// $scope.fetch("financeCenter/Census/Detail?ID=" + vm.reportInfo.CensusID, vm.reportInfo.CensusID);
			});
		}, function() {
			data.isDel = false;
		});

	};
	$scope.saveOtherCost = function() {
		var GCOMPAccountID = "";
		if ($scope.addData.GCOMP.AccountInfo instanceof Array && $scope.addData.GCOMP.AccountInfo.length > 0) {
			GCOMPAccountID = $scope.addData.GCOMP.AccountInfo[0].ForeignKeyID;
		}

		var param = {
			OtherCostID: vm.CensusOtherCost.OtherCostID,
			CensusID: vm.reportInfo.CensusID,
			QuoteTypeID: vm.CensusOtherCost.QuoteTypeID,
			Title: vm.CensusOtherCost.Title,
			GCOMPID: $scope.addData.GCOMP.ID,
			GCOMPAccountID: GCOMPAccountID,
			PayModeID: vm.CensusOtherCost.PayModeID,
			PayTypeID: vm.CensusOtherCost.PayTypeID,
			PayPrice: vm.CensusOtherCost.PayPrice,
			Notes: vm.CensusOtherCost.Notes
		};

		var data = {
			"RequestData": JSON.stringify(param)
		};

		if (checkInput()) {
			$scope.SumbitBut = false;
			saveCensusOhterCost(data, function(data) {
				$scope.detailTipInfo = "其他成本保存成功";
				$scope.detailTipInfoType = "success";
				$scope.SumbitBut = true;
				$scope.closeCensusDialog();
				$scope.toggleMask(true);
				getCensusDetail({
					ID: vm.reportInfo.CensusID
				}, function(data) {
					vm = angular.extend(vm, data);
					$scope.toggleMask(false);
				});
				// var viewId = $rootScope[switchType[2]].id;
				// addRefreshPageByID(viewId);
				// $scope.fetch("financeCenter/Census/Detail?ID=" + vm.reportInfo.CensusID, vm.reportInfo.CensusID);
			});
		}

		function checkInput() {
			var flag = true;
			var requiredList = ["QuoteTypeID", "Title", "PayModeID", "PayPrice"];
			for (var item in requiredList) {
				flag = inputCheckEmpty(param[requiredList[item]]);
				if (flag === false) {
					if (requiredList[item] === "QuoteTypeID") {
						$scope.detailTipInfo = "请选择其他成本类型";
					} else if (requiredList[item] === "Title") {
						$scope.detailTipInfo = "请输入其他成本名称";
					} else if (requiredList[item] === "PayModeID") {
						$scope.detailTipInfo = "请选择结算通道";
					} else if (requiredList[item] === "PayPrice") {
						$scope.detailTipInfo = "请输入其他成本金额";
					}
					$scope.detailTipInfoType = "error";
					break;
				}
			}

			if (!inputCheckPositivenumber(param.PayPrice)) {
				$scope.detailTipInfo = "请输入正确其他成本金额";
				$scope.detailTipInfoType = "error";
				flag = false;
			}

			if (!inputCheckEmpty(param.GCOMPID) || !inputCheckEmpty(param.GCOMPAccountID)) {
				$scope.detailTipInfo = "请选择结算单位";
				$scope.detailTipInfoType = "error";
				flag = false;
			}
			return flag;
		}
	};


	$scope.viewOrderInsureList = function(item) {
		$scope.closeCensusDialog();
		var param = {
			OrderID: item.OrderID
		};
		getCensusOrderInsureList(param, function(data) {
			vm.CensusOrderInsureList = data;
		});
	};

	$scope.viewOrderPaymentList = function(item) {
		$scope.closeCensusDialog();
		var param = {
			OrderID: item.OrderID
		};
		getCensusOrderPaymentList(param, function(data) {
			vm.CensusOrderPaymentList = data;
		});
	};

	$scope.viewOrderGiftList = function(item) {
		$scope.closeCensusDialog();
		var param = {
			OrderID: item.OrderID,
			iPageIndex: 1,
			iPageSize: 999
		};
		getCensusOrderGiftList(param, function(data) {
			vm.CensusOrderGiftList = data.list;
		});
	};
	// $rootScope[position[2]].orderList = {};
	// $scope.isOrderLoading = true;
	// vm.orderList = $rootScope[position[2]].orderList[$rootScope[position[2]].CensusID];
	$scope.getCensusPlanDetail = function() {
		var param = {
			CensusID: $rootScope[position[2]].CensusID
		};
		getCensusPlanDetail(param, function(detail) {
			$rootScope[position[2]].planDetail = detail;
			console.log(detail);
		});
	};

	$scope.getCensusOrderList = function() {
		var param = {
			CensusID: $rootScope[position[2]].CensusID
		};
		getCensusOrderList(param, function(detail) {
			// $rootScope[position[2]].orderList[param.CensusID] = detail;
			// vm.orderList = $rootScope[position[2]].orderList[param.CensusID];
			// $scope.isOrderLoading = false;
			// console.log(detail);
		});
	};



	$scope.getCensusPurchaseList = function() {
		var param = {
			CensusID: $rootScope[position[2]].CensusID
		};
		getCensusPurchaseList(param, function(detail) {
			$rootScope[position[2]].purchaseList = detail;
			console.log(detail);
		});
	};

	$scope.getCensusGuideList = function() {
		var param = {
			CensusID: $rootScope[position[2]].CensusID
		};
		getCensusGuideList(param, function(detail) {
			$rootScope[position[2]].guideList = detail;
			console.log(detail);
		});
	};

	$scope.getCensusSaleCommissionList = function() {
		var param = {
			CensusID: $rootScope[position[2]].CensusID
		};
		getCensusSaleCommissionList(param, function(detail) {
			$rootScope[position[2]].saleCommissionList = detail;
			console.log(detail);
		});
	};
	$scope.getCensusOtherCostList = function() {
		var param = {
			CensusID: $rootScope[position[2]].CensusID
		};
		getCensusOtherCostList(param, function(detail) {
			$rootScope[position[2]].otherCostList = detail;
			console.log(detail);
		});
	};

	$scope.editTransfer = function() {
		$scope.closeCensusDialog();
	};

	$scope.saveTransfer = function() {
		var param = {
			CensusID: vm.reportInfo.CensusID,
			PersonnelID: vm.CensusTransfer.Personnel,
			DeptID: vm.CensusTransfer.Department
		};
		transferCensus(param, function(data) {
			$scope.detailTipInfo = "转让成功";
			$scope.detailTipInfoType = "success";
			$scope.SumbitBut = true;
			$scope.closeCensusDialog();
			getCensusDetail({
				ID: vm.reportInfo.CensusID
			}, function(data) {
				vm = angular.extend(vm, data);
				$scope.toggleMask(false);
			});
			// var viewId = $rootScope[switchType[2]].id;
			// addRefreshPageByID(viewId);
			// $scope.fetch("financeCenter/Census/Detail?ID=" + vm.reportInfo.CensusID, vm.reportInfo.CensusID);

			$rootScope[position[1]].CensusList.listData.search.iPageIndex = 1;
			$rootScope[position[1]].CensusList.listData.search.StartTime = $filter('date')($rootScope[position[1]].CensusList.listData.search.StartTimeDate, "yyyy-MM-dd");
			$rootScope[position[1]].CensusList.listData.search.EndTime = $filter('date')($rootScope[position[1]].CensusList.listData.search.EndTimeDate, "yyyy-MM-dd");
			getCensusList($rootScope[position[1]].CensusList.listData.search, function(data) {
				$rootScope.isloadList = false;
				$rootScope.showProcessBar = false;
				$rootScope[position[1]].CensusList.listData.list = data.CensusList.listData.list;
			});
		});
	};

	$scope.submitCensus = function() {
		showWarningBox("是否提交三清单,下一步流程(" + vm.nextStepName + ")", function() {
			var param = {
				CensusID: vm.reportInfo.CensusID,
				Notes: vm.reportInfo.CensusNote
			};
			$scope.detailTipInfo = "三清单提交中。。。";
			$scope.detailTipInfoType = "warning";
			submitCensusInfo(param, function(detail) {
				var viewId = $rootScope[switchType[2]].id;
				addRefreshPageByID(viewId);
				$scope.detailTipInfo = "三清单提交成功";
				$scope.detailTipInfoType = "success";
				$rootScope.showSubView = false;
				$rootScope.showProcessBar = true;
				openWindowTab(dreamFlyUrl + "Print/CensusPrint.aspx?CensusID=" + vm.reportInfo.CensusID); //url 是你得到的连接
				if ($scope.OPtype == 'Audit') {
					var audit = _.find($rootScope[position[1]].list, function(item) {
						if (item.detail.businessID == param.CensusID && item.subType == vm.subType && item.targetId == vm.targetID && item._id.$id == vm.itemID)
							return true;
					});
					audit.isHandled = true;
				} else {
					$rootScope[position[1]].CensusList.listData.search.iPageIndex = 1;
					$rootScope[position[1]].CensusList.listData.search.StartTime = $filter('date')($rootScope[position[1]].CensusList.listData.search.StartTimeDate, "yyyy-MM-dd");
					$rootScope[position[1]].CensusList.listData.search.EndTime = $filter('date')($rootScope[position[1]].CensusList.listData.search.EndTimeDate, "yyyy-MM-dd");
					getCensusList($rootScope[position[1]].CensusList.listData.search, function(data) {
						$rootScope.isloadList = false;
						$rootScope.showProcessBar = false;
						$rootScope[position[1]].CensusList.listData.list = data.CensusList.listData.list;
					});
				}
			});
		});
	};

	$scope.delCensus = function() {
		showWarningBox("是否删除三清单", function() {
			var param = {
				CensusID: vm.reportInfo.CensusID,
			};
			$scope.detailTipInfo = "三清单删除中。。。";
			$scope.detailTipInfoType = "warning";
			delCensusInfo(param, function(detail) {
				var viewId = $rootScope[switchType[2]].id;
				addRefreshPageByID(viewId);
				$scope.detailTipInfo = "三清单删除成功";
				$scope.detailTipInfoType = "success";
				$rootScope.showSubView = false;
				$rootScope.showProcessBar = true;
				$rootScope[position[1]].CensusList.listData.search.iPageIndex = 1;
				$rootScope[position[1]].CensusList.listData.search.StartTime = $filter('date')($rootScope[position[1]].CensusList.listData.search.StartTimeDate, "yyyy-MM-dd");
				$rootScope[position[1]].CensusList.listData.search.EndTime = $filter('date')($rootScope[position[1]].CensusList.listData.search.EndTimeDate, "yyyy-MM-dd");
				getCensusList($rootScope[position[1]].CensusList.listData.search, function(data) {
					$rootScope.isloadList = false;
					$rootScope.showProcessBar = false;
					$rootScope[position[1]].CensusList.listData.list = data.CensusList.listData.list;
				});
			});
		});
	};

	$scope.auditCensus = function() {
		showWarningBox("是否审核通过三清单,下一步流程(" + vm.nextStepName + ")", function() {
			var param = {
				CensusID: vm.reportInfo.CensusID
			};
			$scope.detailTipInfo = "三清单通过审核中。。。";
			$scope.detailTipInfoType = "warning";
			$rootScope.showProcessBar = true;
			auditCensusInfo(param, function(detail) {
				var viewId = $rootScope[switchType[2]].id;
				addRefreshPageByID(viewId);
				$scope.detailTipInfo = "三清单通过审核成功";
				$scope.detailTipInfoType = "success";
				$rootScope.showSubView = false;
				$rootScope.showProcessBar = false;
				var audit = _.find($rootScope[position[1]].list, function(item) {
					if (item.detail.businessID == param.CensusID && item.subType == vm.subType && item.targetId == vm.targetID && item._id.$id == vm.itemID)
						return true;
				});
				audit.isHandled = true;
			});
		});
	};

	$scope.openBackCensus = function() {
		vm.AuditBack.BussinessID = vm.reportInfo.CensusID;
		vm.AuditBack.User = vm.reportInfo.Belong;
		vm.AuditBack.Title = "三清单";
		vm.AuditBack.Notes = "";
		$scope.closeCensusDialog();
	};

	$scope.backAudit = function() {
		showWarningBox("是否退回三清单", function() {
			var param = {
				CensusID: vm.AuditBack.BussinessID,
				Notes: vm.AuditBack.Notes
			};
			$scope.detailTipInfo = "三清单退回中。。。";
			$scope.detailTipInfoType = "warning";
			$rootScope.showProcessBar = true;
			backCensusInfo(param, function(detail) {
				var viewId = $rootScope[switchType[2]].id;
				addRefreshPageByID(viewId);
				$scope.detailTipInfo = "三清单退回成功";
				$scope.detailTipInfoType = "success";
				$rootScope.showSubView = false;
				$rootScope.showProcessBar = false;
				var audit = _.find($rootScope[position[1]].list, function(item) {
					if (item.detail.businessID == param.CensusID && item.subType == vm.subType && item.targetId == vm.targetID && item._id.$id == vm.itemID)
						return true;
				});
				audit.isHandled = true;
			});
		});
	};

	$scope.openNotReceivableReason = function(order) {
		vm.NotReceivableReason.Notes = order.NotReceivableReason;
		vm.NotReceivableReason.OrderID = order.OrderID;
		$scope.closeCensusDialog();
	};

	$scope.saveNotReceivableReason = function() {
		var param = {
			OrderID: vm.NotReceivableReason.OrderID,
			Notes: vm.NotReceivableReason.Notes
		};
		$scope.SumbitBut = false;
		saveCensusNotReceivableReason(param, function(detail) {
			$scope.detailTipInfo = "未收原因保存成功";
			$scope.detailTipInfoType = "success";
			$scope.closeCensusDialog();
			$scope.SumbitBut = true;
			$scope.toggleMask(true);
			getCensusDetail({
				ID: vm.reportInfo.CensusID
			}, function(data) {
				vm = angular.extend(vm, data);
				$scope.toggleMask(false);
			});
			// var viewId = $rootScope[switchType[2]].id;
			// addRefreshPageByID(viewId);
			// $scope.fetch("financeCenter/Census/Detail?ID=" + vm.reportInfo.CensusID, vm.reportInfo.CensusID);
		});
	};
}
﻿angular.module("HY").controller("IncomeSettlementCtrl", IncomeSettlementCtrl);

function IncomeSettlementCtrl(getFinanceOrderAdvanceList, getFinanceOrderAdvanceInfo, getFOrderThreeSingleList, financeAdvanceAdd,
    deleteFOrderAdvance, getManagerPersonnel, $scope, $rootScope, $filter, ngDialog, Pagination, openSubView,
    showWarningBox, closeSubView, addRefreshPageByID, financeAdvanceRetract) {
    var vm = this;
    vm.page = 1;
    vm.pageSize = 20;
    vm.threePage = 1;
    vm.threePageSize = 5;
    //$rootScope.mainData.navTabType = "SR"; //默认第一个active
    vm.editLink = "financeCenter/financeOrderAdvance/financeOrderAdvanceInfo"; //订单预付款 暂借款详情
    vm.RevokeList = "/public/angularView/finances/business/IncomeSettlement/OFRevokeList.html";
    vm.template = {};
    vm.templateBasicUrl = "/public/angularView/finances/FinanceOrderAdvance/";
    vm.template.BusinessNavTab = "/public/angularView/finances/business/IncomeSettlement/IncomeSettlementNavTab.html"; //导航切换
    vm.template.OrderAdvanceList = vm.templateBasicUrl + "FinanceOrderAdvanceList.html"; //订单预付款
    vm.template.OrderBorrowList = vm.templateBasicUrl + "FinanceOrderBorrowList.html"; //订单暂借款
    vm.addOrderBorrowAddUrl = "financeCenter/financeOrderAdvance/financeOrderBorrowAdd"; //添加订单暂借款url
    vm.searchList = searchList;
    vm.searchSubmit = searchSubmit;
    vm.choseThreeSingle = choseThreeSingle; //选择三清单
    vm.searchThreeSingle = searchThreeSingle; //搜索三清单
    vm.searchThreeSingleSubmit = searchThreeSingleSubmit;
    vm.page = 1;
    vm.filter = {};
    vm.filter.TimeType = 1;
    vm.threeSingleFilter = {}; //选择三清单条件
    vm.showAddDiv = showAddDiv;
    vm.closeOrderAddDiv = closeOrderAddDiv;
    vm.submitOrderAdvanceAdd = submitOrderAdvanceAdd;
    vm.deleteOrderAdvanceFun = deleteOrderAdvanceFun; //删除订单预付款，删除订单暂借款
    vm.add = {}; //添加订单预付款、订单暂借款信息
    vm.Withdraw = {
        popoverIsOpen: false
    }; //订单撤回信息
    vm.getManagerPersonnelFun = getManagerPersonnelFun; //获取人员
    vm.fAdvanceRetract = fAdvanceRetract; //提交撤回信息
    vm.datepickerOptions = {
        playStartTime: {
            minDate: Date.now()
        },
        playEndTime: {
            minDate: Date.now()
        }
    };

    vm.add.GCOMP = {};
    $scope.arrowConf = {
        left: 140,
        useArrow: true
    };
    $scope.popConf = {
        left: 20,
        position: "bottom"
    };

    getNavTabType();


    if ($rootScope[position[2]].operationMode == 'show') {
        showFinanceOrderInfo();
    } else if ($rootScope[position[2]].operationMode == 'add') {
        defaultAddInfo();
    }

    function getNavTabType() {
        $rootScope.mainData.navTabType = "SR";
        //if ($rootScope.mainData.FinanceType == 2) { //订单预付款
        //    $rootScope.mainData.navTabType = 'OrderAdvance';
        //} else { //订单暂借款
        //    $rootScope.mainData.navTabType = 'OrderBorrow';
        //}
    }

    //添加的时候默认设置
    function defaultAddInfo() {
        if ($rootScope.detailData.CensusID !== undefined) {
            vm.add.CensusID = $rootScope.detailData.CensusID;
        }
        if ($rootScope.detailData.ProjectTime !== undefined) {
            vm.add.ProjectTime = new Date(Date.parse($rootScope.detailData.ProjectTime.replace(/-/g, "/")));
        }
        if ($scope.detailData.FinanceType !== undefined) {
            vm.add.FinanceType = $scope.detailData.FinanceType;
        }
    }

    //显示基本信息的时候，初始化
    function showFinanceOrderInfo() {
        /*财务类型，28为订单预付款撤回，29订单暂借款撤回*/
        vm.Withdraw.financeTypeID = $scope.detailData.FinanceType.ID == 2 ? 28 : 29;

        var surplusRevokeMoney = $scope.detailData.WaitVerificationMoney - $scope.detailData.WaitRevokeMoney;
        if ($scope.detailData.PayStatus == 2 && surplusRevokeMoney > 0) {
            vm.Withdraw.showRetract = true;
        }
    }

    /*搜索列表*/
    function searchList(scrolling) {
        /*if (vm.listMax) {
            return;
        }*/
        if ($scope.mainData.allPageCount === undefined) {
            $scope.mainData.allPageCount = $scope.mainData.pageCount;
        }

        vm.listLoading = true;
        if (scrolling === undefined) {
            vm.page = 1;
            vm.listMax = false;
            /*$rootScope.isloadList = true;
            $rootScope.showProcessBar = true;*/
            $scope.mainData.list = [];
        } else {
            if ($scope.mainData.allPageCount == 1 || vm.page == $scope.mainData.allPageCount) {
                vm.listLoading = false;
                $rootScope.isloadList = false;
                $rootScope.showProcessBar = false;
                return;
            }
            vm.page += 1;
        }

        var search = getInput(vm.filter);
        if (!vm.listMax) {
            getFinanceOrderAdvanceList(search, changeScopte);
        } else {
            vm.listLoading = false;
            $rootScope.isloadList = false;
            $rootScope.showProcessBar = false;
        }

        function getInput(filter) {
            /*
             * SearchInfo 关键词搜索
             * FinanceType 财务款项类型 订单预付款 = 2,订单暂借款 = 3
             * TimeType 时间搜索类型 0添加时间1审核时间2支付时间
             * STime 搜索开始时间，ETime 搜索结束时间
             * PayStatus 支付状态 1未确认，2已确认
             * AuditStatus 审核状态 发起审核 = 1,审核处理中 = 2,审核通过 = 3,审核退回 = 4,审核失败 = 5,流程取消 = 6
             * ErificationStatus 核销状态 1未核销，2已核销
             * DeptId 部门id
             * */
            var data = {
                iPageIndex: vm.page,
                iPageSize: vm.pageSize,
                FinanceType: $rootScope.mainData.FinanceType
            };
            //关键词
            if (filter.SearchInfo) {
                data.SearchInfo = filter.SearchInfo;
            }
            //时间搜索类型
            if (filter.TimeType) {
                data.TimeType = filter.TimeType;
            }
            //搜索开始时间
            if (filter.STime) {
                data.STime = filter.STime;
            }
            //搜索结束时间
            if (filter.ETime) {
                data.ETime = filter.ETime;
            }
            //支付状态
            if (filter.PayStatus) {
                data.PayStatus = filter.PayStatus;
            }
            //审核状态
            if (filter.AuditStatus) {
                data.AuditStatus = filter.AuditStatus;
            }
            //核销状态
            if (filter.ErificationStatus) {
                data.ErificationStatus = filter.ErificationStatus;
            }
            //部门id
            if (filter.DeptId) {
                data.DeptId = filter.DeptId;
            }
            return data;
        }

        function changeScopte(data) {
            $scope.mainData.list = _.union($scope.mainData.list, data.list);
            $scope.mainData.allPageCount = data.pageCount;
            if (vm.page == $scope.mainData.allPageCount) {
                vm.listMax = true;
            }
            vm.listLoading = false;
            $rootScope.isloadList = false;
            $rootScope.showProcessBar = false;
        }
    }

    /*输入框内容按下回车*/
    function searchSubmit(keyEvent) {
        if (keyEvent.which == 13) {
            vm.searchList();
        }
    }

    /*选择三清单*/
    function choseThreeSingle() {
        searchThreeSingle();
        ngDialog.open({
            id: 'fOrderThreeSingleList',
            className: 'big',
            template: '/public/angularView/finances/FinanceOrderAdvance/FinanceOrderThreeSingle.html?' + Math.random(),
            data: {}
        });
    }

    /*搜索三清单*/
    function searchThreeSingle(page) {
        if (page === undefined) {
            vm.threePage = 1;
        } else {
            vm.threePage = page;
        }
        var search = getThreeInput(vm.threeSingleFilter);

        getFOrderThreeSingleList(search, changeScopteFilter);

        function getThreeInput(threeSingleFilter) {
            var data = {
                iPageIndex: vm.threePage,
                iPageSize: vm.threePageSize
            };
            //关键词
            if (threeSingleFilter.SearchInfo) {
                data.SearchInfo = threeSingleFilter.SearchInfo;
            }
            //搜索开始时间
            if (threeSingleFilter.StartTime) {
                data.StartTime = threeSingleFilter.StartTime;
            }
            //搜索结束时间
            if (threeSingleFilter.EndTime) {
                data.EndTime = threeSingleFilter.EndTime;
            }
            //三清单类型
            if (threeSingleFilter.CensusType) {
                data.CensusType = threeSingleFilter.CensusType;
            }
            //提交状态
            if (threeSingleFilter.GenderStatus) {
                data.GenderStatus = threeSingleFilter.GenderStatus;
            }
            //审核状态
            if (threeSingleFilter.CensusStatus) {
                data.CensusStatus = threeSingleFilter.CensusStatus;
            }
            //选择部门
            if (threeSingleFilter.DepartmentID) {
                data.DepartmentID = threeSingleFilter.DepartmentID;
            }
            return data;
        }

        function changeScopteFilter(data) {
            $scope.mainData.threeSingleList = data.list;
            $scope.mainData.threeSingleHotel = new Pagination(
                data.count, vm.threePage
            );
        }
    }

    /*输入框内容按下回车,三清单*/
    function searchThreeSingleSubmit(keyEvent) {
        if (keyEvent.which == 13) {
            vm.searchThreeSingle(1);
        }
    }

    //跳转到添加页面
    function showAddDiv(CensusID, CensusTime) {
        var censusTime = $filter("date")(CensusTime, "yyyy-MM-dd");
        $scope.fetch('financeCenter/financeOrderAdvance/financeOrderAdvanceAdd?CensusID=' + CensusID + '&ProjectTime=' + censusTime);
        openSubView();
    }

    //关闭添加页面
    function closeOrderAddDiv() {
        var requiredList = [];
        if (vm.add.FinanceType == 2) {
            requiredList = ['Title', 'PayPrice', 'PayModeID', 'ProjectTime', 'Notes'];
        } else {
            requiredList = ['Title', 'PayPrice', 'PayModeID', 'BelongID', 'Notes'];
        }
        vm.add.Title = null;
        vm.add.PayPrice = null;
        vm.add.CensusID = null;
        vm.add.GCOMP = {};
        vm.add.PayModeID = null;
        vm.add.ProjectTime = null;
        vm.add.InvoiceNo = null;
        vm.add.BelongID = null;
        vm.add.Notes = null;
        vm.detailTipInfo = "";
        vm.detailTipInfoType = "";
        //addRefreshPageByID(($rootScope[switchType[2]].id));
        closeSubView();
    }

    /*保存订单预付款*/
    function submitOrderAdvanceAdd() {
        if (checkInput()) {
            var _finance = {
                "RequestData": JSON.stringify({
                    "FinanceTypeID": vm.add.FinanceType,
                    "Title": vm.add.Title,
                    "PayPrice": vm.add.PayPrice,
                    "CensusID": vm.add.CensusID,
                    "GCOMPID": vm.add.GCOMP.ID,
                    "GCOMPAccountID": vm.add.GCOMP.AccountInfo[0].ForeignKeyID,
                    "PayModeID": vm.add.PayModeID,
                    "ProjectTime": vm.add.ProjectTime,
                    "InvoiceNo": vm.add.InvoiceNo,
                    "BelongID": vm.add.BelongID,
                    "Notes": vm.add.Notes
                })
            };
            vm.detailTipInfo = "正在保存订单预付款...";
            vm.detailTipInfoType = "info";
            financeAdvanceAdd(_finance, function (response) {
                vm.detailTipInfo = "已经保存订单预付款";
                vm.detailTipInfoType = "success";
                savaToScope(response);
                // fetch("financeCenter/financeOrderAdvance/financeOrderAdvanceList");
                closeSubView();
            });
        }

        function savaToScope(response) {
            var financeData = {
                "_id": response._id,
                "AddTime": response.CreateTime,
                "FinanceAdvanceNo": response.FinanceNo,
                "FinanceTtile": response.Title,
                "PayPrice": response.PayPrice,
                "VerificationMoney": response.VerificationMoney,
                "WaitVerificationMoney": response.WaitVerificationMoney,
                "AuditStatus": "",
                "FinancialTime": response.FinancialTime, //财务支付时间
                "VerificationStatus": "", //核销状态
                "AddInfo": response.CreateUser
            };
            if (vm.add.FinanceType == 2) { //订单预付款  三清单编号
                financeData.CensusNo = response.CensusInfo.CensusNo;
            }
            var _auditStatus = _.filter($rootScope.FinancesType.AuditStatusList, function (elem) {
                return elem.Value == response.AuditStatus;
            });
            financeData.AuditStatus = _auditStatus.length > 0 ? _auditStatus[0].Text : "";
            var _VerificationStatus;
            if (response.PayStatus == 2 && response.WaitVerificationMoney === 0) {
                _VerificationStatus = _.filter(vm.EVerification, function (elem) {
                    return elem.value == 2;
                });
            } else {
                _VerificationStatus = _.filter(vm.EVerification, function (elem) {
                    return elem.value == 1;
                });
            }
            financeData.VerificationStatus = _VerificationStatus.length > 0 ? _VerificationStatus[0].name : "";
            $scope.mainData.list.unshift(financeData);
        }

        function checkInput() {
            var flag = true;
            var requiredList = [];
            if (vm.add.FinanceType == 2) {
                requiredList = ['Title', 'PayPrice', 'PayModeID', 'ProjectTime', 'Notes'];
            } else {
                requiredList = ['Title', 'PayPrice', 'PayModeID', 'BelongID', 'Notes'];
            }
            for (var item in requiredList) {
                flag = checkEmptyList(requiredList[item]);
                if (flag === false) {
                    vm.detailTipInfo = "订单预付款需求填写不完整";
                    vm.detailTipInfoType = "error";
                    break;
                }
            }
            if (typeof (vm.add.GCOMP) === undefined || angular.equals(vm.add.GCOMP, {})) {
                flag = false;
                vm.detailTipInfo = "请选择合作单位";
                vm.detailTipInfoType = "error";
            }
            return flag;
        }

        function checkEmptyList(item) {
            console.log(item);
            if ($scope.fOrderAdvanceAdd[item].$error.required) {
                return false;
            } else {
                return true;
            }
        }
    }

    /*删除订单预付款，订单暂借款*/
    function deleteOrderAdvanceFun() {
        var financeID = $scope.detailData._id;
        showWarningBox("确定要删除此订单预付款？", activate);

        function activate() {
            deleteFOrderAdvance(financeID, function (response) {
                console.log(response);
                if (response.code >= 700 && response.code < 800) {
                    vm.detailTipInfo = "删除成功";
                    changeScope();
                    closeSubView();
                } else {
                    vm.detailTipInfo = "删除失败";
                    vm.detailTipInfoType = "error";
                }
            });
        }

        function changeScope() {
            var item = _.filter($scope.mainData.list, function (i) {
                return i._id == financeID;
            });
            $scope.mainData.list = _.without($scope.mainData.list, item[0]);
        }
    }

    /*提交撤回信息*/
    function fAdvanceRetract() {
        console.log($scope.detailData._id);
        if (checkInput()) {
            var param = {
                "RequestData": JSON.stringify({
                    "FinanceId": $scope.detailData._id,
                    "RetractPrice": vm.Withdraw.RetractPrice,
                    "RetractTypeID": vm.Withdraw.RetractTypeID,
                    "RetractTitle": vm.Withdraw.RetractTitle,
                    "Notes": vm.Withdraw.Notes,
                    "FinanceTypeID": vm.Withdraw.financeTypeID
                })
            };
            vm.detailTipInfo = "正在保存撤回信息...";
            vm.detailTipInfoType = "info";
            financeAdvanceRetract(param, function (response) {
                vm.detailTipInfo = "已经保存撤回信息";
                vm.detailTipInfoType = "success";
                savaToScope(response.data);
                vm.Withdraw.popoverIsOpen = false;
            });
        }

        function checkInput() {
            var flag = true;
            var requiredList = ['RetractPrice', 'RetractTypeID', 'RetractTitle', 'Notes'];
            for (var item in requiredList) {
                console.log(requiredList[item]);
                flag = checkEmptyList(requiredList[item]);
                if (flag === false) {
                    vm.detailTipInfo = "申请撤回需求填写不完整";
                    vm.detailTipInfoType = "error";
                    break;
                }
            }
            return flag;
        }

        function checkEmptyList(item) {
            if (vm.fOrderWithdraw[item].$error.required) {
                return false;
            } else {
                return true;
            }
        }

        function savaToScope(response) {
            var _financeBack = {
                "_id": response._id,
                "FinanceNo": response.FinanceNo,
                "Title": response.Title,
                "PayPrice": response.PayPrice,
                "PayModeName": response.PayMode,
                "Notes": response.Notes,
                "CreateUser": response.CreateUser,
                "PayStatus": "",
                "FinancialStaff": response.FinancialStaff,
                "FinancialTime": response.FinancialTime
            }
            //退回状态
            var _payStatusBack = _.filter(vm.EPayStatusBack, function (elem) {
                return elem.value == response.PayStatus;
            });
            _financeBack.PayStatus = _payStatusBack.length > 0 ? _payStatusBack[0].name : "";
            $scope.detailData.FinanceBackList.push(_financeBack);
        }
    }

    /*获取当前账号所在部门的员工信息*/
    function getManagerPersonnelFun() {
        getManagerPersonnel(function (data) {
            vm.mPersonnelList = data.list;
        });
    }

    /*财务确认状态 支付状态*/
    vm.EPayStatus = [{
        'value': 1,
        'name': '未确认'
    }, {
        'value': 2,
        'name': '已确认'
    }];

    /*审核状态*/
    vm.EAuditStatus = [{
        'value': 1,
        'name': '发起审核'
    }, {
        'value': 2,
        'name': '审核处理中'
    }, {
        'value': 3,
        'name': '审核通过'
    }, {
        'value': 4,
        'name': '审核退回'
    }, {
        'value': 5,
        'name': '审核失败'
    }, {
        'value': 6,
        'name': '流程取消'
    }];

    /*核销状态*/
    vm.EVerification = [{
        'value': 1,
        'name': '未核销'
    }, {
        'value': 2,
        'name': '已核销'
    }];

    vm.ETimeType = [{
        'value': 1,
        'name': '审核时间'
    }, {
        'value': 2,
        'name': '支付时间'
    }];

    /*三清单类型*/
    vm.ECensusType = [{
        'value': 1,
        'name': '跟团游'
    }, {
        'value': 2,
        'name': '签证'
    }, {
        'value': 3,
        'name': '景区'
    }, {
        'value': 12,
        'name': '自由行'
    }, {
        'value': 13,
        'name': '自驾游'
    }, {
        'value': 17,
        'name': '定制游'
    }, {
        'value': 18,
        'name': '邮轮专线'
    }, {
        'value': 23,
        'name': '一团一议'
    }, {
        'value': 24,
        'name': '机票订单'
    }, {
        'value': 9,
        'name': '地接'
    }];

    /*三清单提交状态*/
    vm.EGenderStatus = [{
        'value': 1,
        'name': '未提交'
    }, {
        'value': 2,
        'name': '已提交'
    }];

    /*退回状态(订单预付款暂借款撤回列表)*/
    vm.EPayStatusBack = [{
        'value': 1,
        'name': '未撤回'
    }, {
        'value': 2,
        'name': '已撤回'
    }]
}

﻿//订单开票
angular.module("HY").controller("OrderBillingController", OrderBillingController);
app.controller("CensusListCtrl", CensusListCtrl);
function OrderBillingController(_, getBillingOrderList, setReturnRevoke, showWarningBox, $scope, $rootScope, $filter, closeSubView, getFinanceDeptInOutTypeAllSRlist, SaveBillData, SaveUnBillData, ngDialog, showErrorInfo, SaveBillingOrder, delOrderBilling, $timeout) {
    var vm = this;
    vm.page = 1;
    vm.pageSize = 20;
    vm.template = {};
    vm.templateBasicUrl = "/public/angularView/finances/OrderBilling/";
    vm.template.RevokeList = vm.templateBasicUrl + "OrderBillingList.html";
    vm.searchSubmit = searchSubmit;
    vm.filter = {}; //关键字，时间搜索，撤销状态，部门
    $timeout(function () {
        vm.filter = $rootScope.mainData.OB;
    });
    vm.searchList = searchList;
    //vm.changeScope = changeScope;
    /*搜索列表*/
    function searchList(scrolling) {

        if ($scope.mainData.allPageCount == undefined) {
            $scope.mainData.allPageCount = $scope.mainData.pageCount;
        }

        vm.listLoading = true;
        if (scrolling === undefined) {
            vm.page = 1;
            vm.listMax = false;
            /*$rootScope.isloadList = true;
            $rootScope.showProcessBar = true;*/
            $scope.mainData.list = [];
        } else {
            if ($scope.mainData.allPageCount == 1 || vm.page == $scope.mainData.allPageCount) {
                vm.listLoading = false;
                vm.listMax = true;
                $rootScope.isloadList = false;
                $rootScope.showProcessBar = false;
                return;
            }
            vm.page += 1;
        }

        var search = getInput(vm.filter);
        if (!vm.listMax) {
            getBillingOrderList(search, changeScope);
        } else {
            vm.listLoading = false;
            $rootScope.isloadList = false;
            $rootScope.showProcessBar = false;
            /* if ($scope.mainData.allPageCount == 1) {
               vm.listLoading = false;
               $rootScope.isloadList = false;
               $rootScope.showProcessBar = false;
             }*/

        }

        /*组合搜索条件*/
        function getInput(filter) {
            /*
             * iPageIndex 第几页；iPageSize 每页显示的数量
             * FinanceType 撤销类型 28 预付款；29 暂借款
             * SearchInfo 搜索关键词
             * STime 撤销时间搜索开始
             * ETime 撤销时间搜索结束
             * ErificationStatus 撤销状态
             * DeptId 部门id
             * */
            var data = {
                iPageIndex: vm.page,
                iPageSize: vm.pageSize
            };
            //console.log(JSON.stringify(filter));
            if (filter !== undefined) {
                //关键词
                if (filter.keyword) {
                    data.SearchInfo = filter.keyword;
                }
                //撤销时间搜索开始
                if (filter.startDate) {
                    data.StartTime = $filter("date")(filter.startDate, "yyyy-MM-dd");
                }
                //撤销时间搜索结束
                if (filter.endDate) {
                    data.EndTime = $filter("date")(filter.endDate, "yyyy-MM-dd");
                }
                //支付状态
                if (filter.PayType) {
                    data.BillingStatus = filter.PayType;
                }
                //部门id
                if (filter.EmployeeDepartmentID) {
                    data.DepartmentID = filter.EmployeeDepartmentID;
                }
                //产品类型
                if (filter.CensusType) {
                    data.OrderType = filter.CensusType;
                }
                 console.log("nt"+JSON.stringify(data));
                $rootScope.mainData.OB = filter;
            }
            return data;
        }

        function changeScope(data) {

            $scope.mainData.list = _.union($scope.mainData.list, data.list);
            $scope.mainData.allPageCount = data.pageCount;
            if (vm.page == $scope.mainData.allPageCount) {
                vm.listMax = true;
            }
            vm.listLoading = false;
            $rootScope.isloadList = false;
            $rootScope.showProcessBar = false;

            //console.log("控制器：" + data);
        }
    }


    /*输入框内容按下回车*/
    function searchSubmit(keyEvent) {
        if (keyEvent.which === 13) {
            //vm.searchList();
        }
    }

    //function changeScope() {
    //    var item = _.filter($scope.mainData.list, function (i) {
    //        return i._id == revokeID;
    //    });
    //    $scope.mainData.list = _.without($scope.mainData.list, item[0]);
    //}



    /**
 * 全选
 * @return {[type]} [description]
 */
    vm.checkAll = function () {
        if (vm.listData.checkAll) {
            $scope.mainData.list.forEach(function (member, key) {
                member.isSelected = true;
            });
        } else {
            $scope.mainData.list.forEach(function (member, key) {
                member.isSelected = false;
            });
        }
    };

    //多条数据开票的  新增弹框
    vm.GenerateInfo = {};
    vm.cur = -1;
    vm.curViewUrl = "";
    var vOrderNo = "";
    var vEmployeeName = "";
    var vOrderBillingMoney = 0;
    vm.buildCensus = function () {
        vOrderNo = "";
        vEmployeeName = "";
        vOrderBillingMoney = 0;
        var ProductPlanList = [];
        $scope.mainData.list.forEach(function (member, key) {
            console.log("开票选择"+member);
            if (member.isSelected) {
                vOrderNo = member.OrderNo + "," + vOrderNo;
                vEmployeeName = member.OwnUser.EmployeeName + "," + vEmployeeName;
                vOrderBillingMoney = parseInt(vOrderBillingMoney) + parseInt(member.OrderMoney);
                ProductPlanList.push(member.ID);
            }
        });

        if (ProductPlanList.length === 0) {
            showErrorInfo("请选择计划记录");
            return;
        }
        ngDialog.open({
            template: "/public/angularView/finances/OrderBilling/AddOrderBilling.html",
            className: "w-500",
            controller: function ($scope, SaveBillingOrder) {
                $scope.OrderNo = vOrderNo;
                $scope.EmployeeName = vEmployeeName;
                $scope.OrderBillingMoney = vOrderBillingMoney;
                $scope.InvoiceNo = "";
                $scope.InvoiceMoney = "";
                $scope.InvoiceNotes = "";

                vOrderBillingMoney = 0;
                vm.GenerateInfo.OrderIDList = JSON.stringify(ProductPlanList);

                $scope.SumbitBut = true;
                $scope.saveGenerate = function () {
                vm.GenerateInfo.BillingID = "";
                vm.GenerateInfo.InvoiceNo = $scope.InvoiceNo;
                vm.GenerateInfo.InvoiceNotes = $scope.InvoiceNotes;
                vm.GenerateInfo.InvoiceMoney = $scope.InvoiceMoney;

                    $scope.SumbitBut = false;
                    SaveBillingOrder(vm.GenerateInfo, function (data) {
                        $scope.closeThisDialog('value');
                        vm.searchList();
                    });
                };
            }
        });
    };

    //新增编辑订单开票
    vm.EditBillingdata = {};
    var orderidList = [];
  
    vm.EditBilling = function EditBilling(dataBillingID, orderid, InvoiceNo, InvoiceMoney, InvoiceNotes, type, OrderNos) {
        orderidList.push(orderid);
        ngDialog.open({
            template: "/public/angularView/finances/OrderBilling/EditOrderBilling.html",
            className: "w-500",
            controller: function ($scope, SaveBillingOrder) {
                vm.EditBillingdata.BillingID = dataBillingID;
                
                $scope.InvoiceNo = InvoiceNo;
                $scope.InvoiceMoney = InvoiceMoney;
                $scope.InvoiceNotes = InvoiceNotes;


                $scope.SumbitBut = true;
                $scope.saveGenerate = function () {
                    vm.EditBillingdata.OrderIDList = JSON.stringify(orderidList);
                    vm.EditBillingdata.InvoiceNo = $scope.InvoiceNo;
                    vm.EditBillingdata.InvoiceNotes = $scope.InvoiceNotes;
                    vm.EditBillingdata.InvoiceMoney = $scope.InvoiceMoney;
                    
                    //$scope.SumbitBut = false;
                    if ($scope.InvoiceNo != '' && $scope.InvoiceMoney != '') {
                        SaveBillingOrder(vm.EditBillingdata, function (data) {
                            console.log("daab:" + data);
                            //ADD
                            if (type == 1) {
                                if (data != null) {
                                    var lOrderNos = [];//订单号
                                    lOrderNos.push(OrderNos);
                                    vm.EditBillingdata.OrderInfo = JSON.stringify(lOrderNos);
                                    vm.EditBillingdata.CreateTime = data.CreateTime;
                                    $rootScope[position[2]].list.push(data);
                                }
                            }
                            if (type == 2) {
                                for (var i = 0; i < $rootScope[position[2]].list.length; i++) {
                                    if ($rootScope[position[2]].list[i]._id == dataBillingID) {
                                        vm.EditBillingdata = $rootScope[position[2]].list[i];
                                        vm.EditBillingdata.InvoiceNo = $scope.InvoiceNo;
                                        vm.EditBillingdata.InvoiceNotes = $scope.InvoiceNotes;
                                        vm.EditBillingdata.InvoiceMoney = $scope.InvoiceMoney;
                                        $rootScope[position[2]].list[i] = vm.EditBillingdata;
                                    }
                                }


                            }

                            vm.EditBillingdata = {};
                            orderidList = [];
                            $scope.closeThisDialog('value');
                            vm.searchList();
                        });

                    }
            };
            }
        });

    };

    vm.DelBilling = function DelBilling(datas) {

        showWarningBox('确定要删除？', function () {
            var deldata = {};
            deldata.BillingID = datas;
            delOrderBilling(deldata, function () {
              var target = _.find($rootScope[position[2]].list, function(item){
                return item._id === datas;//获取到某个数组的值
              });
              if(undefined !== target){
                $rootScope[position[2]].list = _.without($rootScope[position[2]].list, target);
              }
              vm.searchList();
            });
        });

    };


    /*枚举状态*/
    vm.EPayStatusPayment = [{
        'value': 1,
        'name': '未开票'
    }, {
        'value': 2,
        'name': '已开票'
    }];

    vm.viewLists = [{
        "title": "组团",
        "CensusType": "000000000000000000000001",
        "template": "PlanList",
        "detail": "PlanInfo",
        "status": ""
    }, {
        "title": "邮轮",
        "CensusType": "000000000000000000000018",
        "template": "PlanList",
        "detail": "PlanInfo",
        "status": ""
    }, {
        "title": "自由行",
        "CensusType": "12",
        "template": "OrderList",
        "detail": "OrderInfo",
        "status": ""
    }, {
        "title": "一团一议",
        "CensusType": "23",
        "template": "OrderList",
        "detail": "OrderInfo",
        "status": ""
    }, {
        "title": "自驾游",
        "CensusType": "13",
        "template": "OrderList",
        "detail": "OrderInfo",
        "status": ""
    }, {
        "title": "定制游",
        "CensusType": "27",
        "template": "OrderList",
        "detail": "OrderInfo",
        "status": ""
    }, {
        "title": "签证",
        "CensusType": "2",
        "template": "OrderList",
        "detail": "OrderInfo",
        "status": ""
    }, {
        "title": "门票",
        "CensusType": "3",
        "template": "OrderList",
        "detail": "OrderInfo",
        "status": ""
    }, {
        "title": "机票",
        "CensusType": "24",
        "template": "OrderList",
        "detail": "OrderInfo",
        "status": ""
    }, {
        "title": "地接",
        "CensusType": "9",
        "template": "OrderList",
        "detail": "OrderInfo",
        "status": ""
    }];
}
/**
 * Created by a on 2016/5/3.
 * 三清单成本结算
 */
angular.module("HY").controller("PurchaseBillController", PurchaseBillController);

function PurchaseBillController(getPurchaseBillList, closeSubView, GetPurchaseList, DelPurchaseBillData, SavePurchaseBillData,
                                getFinanceOrderAdvanceList, SavePurchaseVerification, $scope, $rootScope, $filter, showWarningBox, Pagination,auditFinance,addRefreshPageByID,backAuditFinance) {
    var vm = this;
    var dataInfo=$rootScope[position[2]];
    vm.template = {};
    vm.template.BusinessNavTab = "/public/angularView/finances/business/OBusinessNavTab.html"; //导航切换
    var filter =$rootScope[position[1]].filter;
    if(typeof filter == "undefined"){
        $rootScope[position[1]].filter = {
            TimeType: 1,
            ConditionField: "PayPrice"
        };
    }
    vm.ETimeType = [{
      'value': 1,
      'name': '申请日期'
    }, {
      'value': 2,
      'name': '结算日期'
    }];

    /*vm.filter = {};
    vm.filter.TimeType = 1;*/
    vm.page = 1;
    vm.pageSize = 20;
    vm.searchList = searchList; //三清单成本结算搜索
    vm.searchSubmit = searchSubmit; //三清单成本结算搜索

    vm.searchPurchaseList = searchPurchaseList; //三清单成本搜索
    vm.searchPurchaseSubmit = searchPurchaseSubmit; //三清单成本搜索

    vm.chooseFinanceBillPurchase = chooseFinanceBillPurchase; //选择三清单成本
    $scope.detailData.submitPurchaseBill = submitPurchaseBill;//提交三清单成本
    $scope.detailData.saveFinanceBillPurchase = saveFinanceBillPurchase; //保存三清单成本结算
    vm.deletePurchaseBill = deletePurchaseBill; //删除三清单成本结算
    //点击重新开始
    $scope.detailData.showOnePurchaseBill = showOnePurchaseBill;//点击重新开始显示本条成本结算信息
    $scope.detailData.searchPurchaseListEdit = searchPurchaseListEdit;//在三清单成本结算重新开始的情况下，筛选成本列表
    $scope.detailData.searchPurchaseListEditSubmit = searchPurchaseListEditSubmit;//
    $scope.detailData.cancelPurchaseByEditFun = cancelPurchaseByEditFun;//结算明细中取消成本
    $scope.detailData.choosePurchaseByEditFun = choosePurchaseByEditFun;//选择三清单成本

    //核销
    $scope.detailData.WriteOffBegining = WriteOffBegining; //点击核销按钮，核销信息重置化
    vm.addOneWriteOffFun = addOneWriteOffFun; //添加核销信息
    vm.saveOneWriteOffFun = saveOneWriteOffFun; //保存单条核销
    vm.cancelOneWriteOffFun = cancelOneWriteOffFun; //取消保存单条核销
    vm.deleteOneWriteOffFun = deleteOneWriteOffFun; //删除单条核销
    $scope.detailData.saveWriteOffListFun = saveWriteOffListFun;//保存提交核销单子
    $scope.detailData.WriteOffEditInfo = {}; //所对应单挑修改核销信息

    //选择项目
    vm.ProjectPage = 1;
    vm.ProjectPageSize = 5;
    vm.searchProject = searchProject; //搜索项目
    vm.searchProjectSubmit = searchProjectSubmit; //按键搜索项目
    vm.ProjectFilter = {
        FinanceType: 2,
        UserType: 1
    }; //搜索项目条件
    $scope.detailData.chooseProject = chooseProject; //选择项目
    //在结算信息重新开始的情况下，重新选择成本列表
    vm.editPurchasePage = 1;//成本列表第几页数
    vm.editPurchasePageSize = 5;//成本列表每页显示条数

    $scope.mainData.navTabType = 'PurchaseBill';
    $scope.detailData.Purchase = {};

    if ($rootScope[position[2]].operationMode == 'add') {
        vm.Purchasefilter = {};
        vm.Purchase = {
            page: $rootScope[position[2]].page,
            pageSize: 20
        };
        vm.purchaseBill = {
            GCOMP: {},
            PayPrice: 0,
            DetailList: []
        };
        $scope.detailData.WriteOffList = []; //核销列表
        $scope.detailData.FinanceDetailEdit = [];//所选中的成本列表
    } else if ($rootScope[position[2]].operationMode == 'show') {
        if ($scope.detailData.Finances.PayStatus != 2 && ($scope.detailData.Finances.AuditStatus == 1 || $scope.detailData.Finances.AuditStatus == 4 ||
            $scope.detailData.Finances.AuditStatus == 5 || $scope.detailData.Finances.AuditStatus == 6)) {
            $scope.detailData.showDelete = true;
        }
        //showOnePurchaseBill();
    }

    /*点击编辑，把当前数据显示编辑框中，成本结算信息*/
    function showOnePurchaseBill() {
        var _finances = $scope.detailData.Finances;
        vm.purchaseBill = {
            BillID: _finances._id,
            Title: _finances.Title,//标题
            GCOMP: _finances.GCOMP,//结算单位
            GCOMPID: _finances.GCOMP.ForeignKeyID,//结算单位id
            GCOMPIDs: [],
            GCOMPAccountID: _finances.GCOMPAccount.ForeignKeyID,//结算账户id
            PayPrice: $scope.detailData.Finances.PayType.ID == 1 ? $scope.detailData.Finances.PayPrice : -$scope.detailData.Finances.PayPrice,
            PayModeID: _finances.PayMode.ForeignKeyID,//结算方式
            InvoiceNo: _finances.FinanceNo,//发票编号
            Notes: _finances.Notes,//备注
            DepartmentID: _finances.Belong.EmployeeDepartmentID,//计调部门id
            PayTypeID: _finances.PayType.ID,//结算类型，收入还是支出
            DetailList: []//成本id列表
        };
        $scope.detailData.FinanceDetailEdit = angular.copy($scope.detailData.FinanceDetail);
        /*for (var i = 0; i < $scope.detailData.FinanceDetailEdit.length; i++) {
         vm.purchaseBill.DetailList.push($scope.detailData.FinanceDetailEdit[i]._id);
         }*/
        vm.editPurchasefilter = {};//成本搜索条件
        searchPurchaseListEdit();
    }

    //搜索三清单结算列表
    function searchList(scrolling) {
        if ($scope.mainData.allPageCount === undefined) {
            $scope.mainData.allPageCount = $scope.mainData.pageCount;
        }

        vm.listLoading = true;
        if (scrolling === undefined) {
            vm.page = 1;
            vm.listMax = false;
            $scope.mainData.list = [];
        } else {
            if ($scope.mainData.allPageCount == 1 || vm.page == $scope.mainData.allPageCount) {
                vm.listLoading = false;
                $rootScope.isloadList = false;
                $rootScope.showProcessBar = false;
                return;
            }
            vm.page += 1;
        }
        var search = getInput($rootScope[position[1]].filter);
        if (!vm.listMax) {
            getPurchaseBillList(search, changeScopte);
        } else {
            vm.listLoading = false;
            $rootScope.isloadList = false;
            $rootScope.showProcessBar = false;
        }

        function getInput(filter) {
            /*
             * SearchInfo 关键词搜索
             * Field 搜索条件字段类型 PayPrice = 结算金额，FinanceCompanyName = 结算单位，BelongUser = 申请人（计调），FinanceNo = 结算编号
             * TimeType 时间搜索类型 0添加时间1审核时间2支付时间
             * StartTime 搜索开始时间，EndTime 搜索结束时间
             * AuditStatus 审核状态 发起审核 = 1,审核处理中 = 2,审核通过 = 3,审核退回 = 4,审核失败 = 5,流程取消 = 6
             * PayStatus 支付状态 1未确认，2已确认
             * DeptId 部门id
             * */
            var data = {
                iPageIndex: vm.page,
                iPageSize: vm.pageSize
            };
            //关键词
            if (filter.SearchInfo) {
                data.SearchInfo = filter.SearchInfo;
            }
            //搜索条件字段类型
      			if (filter.ConditionField) {
      				data.Field = filter.ConditionField;
      			}
            //时间搜索类型
      			if (filter.TimeType) {
      				data.TimeType = filter.TimeType;
      			}
            //搜索开始时间
            if (filter.StartTime) {
                data.StartTime = $filter("date")(filter.StartTime, "yyyy-MM-dd");
            }
            //搜索结束时间
            if (filter.EndTime) {
                data.EndTime = $filter("date")(filter.EndTime, "yyyy-MM-dd");
            }
            //支付类型
            if (filter.PayType) {
                data.PayType = filter.PayType;
            }
            //审核状态
            if (filter.AuditStatus) {
                data.AuditStatus = filter.AuditStatus;
            }
            //支付状态
            if (filter.PayStatus) {
                data.PayStatus = filter.PayStatus;
            }
            //部门id
            if (filter.DeptId) {
                data.DeptId = filter.DeptId;
            }
            return data;
        }

        function changeScopte(data) {
            $scope.mainData.list = _.union($scope.mainData.list, data.list);
            $scope.mainData.allPageCount = data.pageCount;
            if (vm.page == $scope.mainData.allPageCount) {
                vm.listMax = true;
            }
            vm.listLoading = false;
            $rootScope.isloadList = false;
            $rootScope.showProcessBar = false;
        }
    }

    /*输入框内容按下回车 搜索三清单结算成本列表*/
    function searchSubmit(keyEvent) {
        if (keyEvent.which == 13) {
            vm.searchList();
        }
    }

    //三清单成本列表 在添加页面
    function searchPurchaseList(scrolling) {
        if ($scope.detailData.allPageCount === undefined) {
            $scope.detailData.allPageCount = $scope.detailData.pageCount;

            vm.purchaseBill = {
                GCOMP: {},
                PayPrice: 0,
                DetailList: []
            };
            $scope.detailData.WriteOffList = []; //核销列表
        }
        $scope.detailData.Purchase.listLoading = true;

        if (scrolling === undefined) {
            vm.Purchase.page = 1;
            vm.Purchase.listMax = false;
            $scope.detailData.list = [];
        } else {
            if ($scope.detailData.allPageCount == 1 || vm.Purchase.page == $scope.detailData.allPageCount) {
                $scope.detailData.Purchase.listLoading = false;
                $rootScope.isloadList = false;
                $rootScope.showProcessBar = false;
                return;
            }
            vm.Purchase.page += 1;
        }
        var search = getInput(vm.Purchasefilter);
        if (!vm.Purchase.listMax) {
            GetPurchaseList(search, changeScopte);
        } else {
            vm.Purchase.listLoading = false;
            $rootScope.isloadList = false;
            $rootScope.showProcessBar = false;
        }

        function getInput(filter) {
            /*
             * SearchInfo 关键词搜索
             * TimeType 时间搜索类型 0添加时间1审核时间2支付时间
             * StartTime 搜索开始时间，EndTime 搜索结束时间
             * PayType 结算类型 收入 支出
             * CensusStatus 三清单审核状态 发起审核 = 1,审核处理中 = 2,审核通过 = 3,审核退回 = 4,审核失败 = 5,流程取消 = 6
             * PayStatus 支付状态 1未确认，2已确认
             * DeptID 部门id
             * */
            var data = {
                iPageIndex: vm.Purchase.page,
                iPageSize: vm.Purchase.pageSize,
                GCOMPID:"",
                IsRealPrice:0
            };
            //关键词
            if (filter.SearchInfo) {
                data.SearchInfo = filter.SearchInfo;
            }
            //搜索开始时间
            if (filter.StartTime) {
                data.StartTime = $filter("date")(filter.StartTime, "yyyy-MM-dd");
            }
            //搜索结束时间
            if (filter.EndTime) {
                data.EndTime = $filter("date")(filter.EndTime, "yyyy-MM-dd");
            }
            //结算类型
            if (filter.PayType) {
                data.PayType = filter.PayType;
            }
            //三清单审核状态
            if (filter.CensusStatus) {
                data.CensusStatus = filter.CensusStatus;
            }
            //支付状态
            if (filter.PayStatus) {
                data.PayStatus = filter.PayStatus;
            }
            //部门id
            if (filter.DeptID) {
                data.DeptID = filter.DeptID;
            }
            return data;
        }

        function changeScopte(data) {
            $scope.detailData.list = _.union($scope.detailData.list, data.list);
            $scope.detailData.allPageCount = data.pageCount;
            if (vm.Purchase.page == $scope.detailData.allPageCount) {
                vm.Purchase.listMax = true;
            }
            vm.Purchase.listLoading = false;
            $rootScope.isloadList = false;
            $rootScope.showProcessBar = false;
        }
    }

    //在三清单成本结算重新开始的情况下，筛选成本列表
    function searchPurchaseListEdit(page) {
        console.log(vm.purchaseBill.GCOMP);
        if (page === undefined) {
            vm.editPurchasePage = 1;
        } else {
            vm.editPurchasePage = page;
        }
        var search = {
            iPageIndex: vm.editPurchasePage,
            iPageSize: vm.editPurchasePageSize,
            SearchInfo: vm.editPurchasefilter.SearchInfo,
            GCOMPID:vm.purchaseBill.GCOMPID,
            IsRealPrice:1,//结算金额大于0
            PayStatus:1//未提交
        };
        GetPurchaseList(search, changeScopteFilter);
        function changeScopteFilter(data) {
            $scope.detailData.editPurchaseList = data.list;
            data.list.forEach(function (p) {
                var _Purchase = _.filter($scope.detailData.FinanceDetailEdit, function (elem) {
                    return elem._id == p.ID;
                });
                //item.IsSubmit==0&&item.RealPrice>0
                if (_Purchase.length > 0) {
                    p.choose = true;
                }
            });
            $scope.detailData.PurchaseHotel = new Pagination(
                data.count, vm.editPurchasePage
            );
        }
    }

    /*输入框内容按下回车,成本列表,在重新修改的情况下*/
    function searchPurchaseListEditSubmit(keyEvent) {
        if (keyEvent.which == 13) {
            vm.searchPurchaseListEdit();
        }
    }

    //在重新开始之后，取消成本
    function cancelPurchaseByEditFun(onePurchase) {
        if (onePurchase.PayType.ID == 1) { //支出
            vm.purchaseBill.PayPrice += onePurchase.PayPrice;
        } else if (onePurchase.PayType.ID == 2) { //收入
            vm.purchaseBill.PayPrice -= onePurchase.PayPrice;
        }
        //vm.purchaseBill.DetailList = _.without(vm.purchaseBill.DetailList, onePurchase._id);
        //var gindex = _.findIndex(vm.purchaseBill.GCOMPIDs, onePurchase.GCOMP.ForeignKeyID);
        //vm.purchaseBill.GCOMPIDs = _.without(vm.purchaseBill.GCOMPIDs, onePurchase.GCOMP.ForeignKeyID);
        $scope.detailData.FinanceDetailEdit = _.without($scope.detailData.FinanceDetailEdit, onePurchase);

       /* if (vm.purchaseBill.DetailList.length === 0) {
            vm.purchaseBill.GCOMPID = "";
            vm.purchaseBill.GCOMPAccountID = "";
            vm.purchaseBill.DepartmentID = "";
        }*/

        /*  $scope.detailData.FinanceDetailEdit = _.without($scope.detailData.FinanceDetailEdit, onePurchase);
         vm.purchaseBill.DetailList = _.without(vm.detailData.DetailList, onePurchase._id);*/
        for (var i = 0; i < $scope.detailData.editPurchaseList.length; i++) {
            if ($scope.detailData.editPurchaseList[i].ID == onePurchase._id) {
                console.log($scope.detailData.editPurchaseList[i]);
                $scope.detailData.editPurchaseList[i].choose = false;
                break;
            }
        }
        console.log($scope.detailData.FinanceDetailEdit);
    }

    //在重新开始之后，重新选择三清单成本
    function choosePurchaseByEditFun(_purchase) {
        if (!_purchase.choose) {
            if (_purchase.PayType.ID == 1) { //支出
                vm.purchaseBill.PayPrice -= _purchase.PayPrice;
            } else if (_purchase.PayType.ID == 2) { //收入
                vm.purchaseBill.PayPrice += _purchase.PayPrice;
            }
            var _dfd = _.find($scope.detailData.FinanceDetailEdit, function (elem) {
                return elem._id == _purchase.ID;
            });
            $scope.detailData.FinanceDetailEdit = _.without($scope.detailData.FinanceDetailEdit, _dfd);
            _purchase.choose = false;
        } else {
            if (_purchase.PayType.ID == 1) { //支出
                vm.purchaseBill.PayPrice += _purchase.PayPrice;
            } else if (_purchase.PayType.ID == 2) { //收入
                vm.purchaseBill.PayPrice -= _purchase.PayPrice;
            }
            var oneFinanceDetail = {
                _id: _purchase.ID,
                PayType: _purchase.PayType,
                CensusInfo: _purchase.CensusInfo,
                Title: _purchase.Title,
                GCOMP: _purchase.GCOMP,
                GCOMPAccount: _purchase.GCOMPAccount,
                PayPrice: _purchase.PayPrice,
                ChangePrice: _purchase.ChangePrice,
                RealPrice: _purchase.RealPrice
            };
            $scope.detailData.FinanceDetailEdit.push(oneFinanceDetail);
            _purchase.choose = true;

            console.log(_purchase.choose);
        }
        vm.purchaseBill.PayTypeID = vm.purchaseBill.PayPrice >= 0 ? 1 : 2;
        console.log($scope.detailData.FinanceDetailEdit);
    }

    /*输入框内容按下回车*/
    function searchPurchaseSubmit(keyEvent) {
        if (keyEvent.which == 13) {
            vm.searchPurchaseList();
        }
    }

    //选择三清单成本
    function chooseFinanceBillPurchase(_purchase) {
        //vm.purchaseBill.PayPrice=0;
        if (!_purchase.choose) { //原先的状态为选择状态，现取消选择
            if (_purchase.PayType.ID == 1) { //支出
                vm.purchaseBill.PayPrice -= _purchase.PayPrice;
            } else if (_purchase.PayType.ID == 2) { //收入
                vm.purchaseBill.PayPrice += _purchase.PayPrice;
            }
            var _dfd = _.find($scope.detailData.FinanceDetailEdit, function (elem) {
                return elem._id == _purchase.ID;
            });
            $scope.detailData.FinanceDetailEdit = _.without($scope.detailData.FinanceDetailEdit, _dfd);
            _purchase.choose = false;
        } else {
            if (_purchase.PayType.ID == 1) { //支出
                vm.purchaseBill.PayPrice += _purchase.PayPrice;
            } else if (_purchase.PayType.ID == 2) { //收入
                vm.purchaseBill.PayPrice -= _purchase.PayPrice;
            }
            var oneFinanceDetail = {
                _id: _purchase.ID,
                PayType: _purchase.PayType,
                CensusInfo: _purchase.CensusInfo,
                Title: _purchase.Title,
                GCOMP: _purchase.GCOMP,
                GCOMPAccount:_purchase.GCOMPAccount,
                PayPrice: _purchase.PayPrice,
                ChangePrice: _purchase.ChangePrice,
                RealPrice: _purchase.RealPrice
            };
            $scope.detailData.FinanceDetailEdit.push(oneFinanceDetail);
            _purchase.choose = true;
        }
        vm.purchaseBill.PayTypeID = vm.purchaseBill.PayPrice >= 0 ? 1 : 2;
        console.log($scope.detailData.FinanceDetailEdit);
        console.log(_purchase.choose);
    }

    //提交结算，判断是否选择多个结算单位
    function submitPurchaseBill() {
        if ($scope.detailData.FinanceDetailEdit.length > 0) {
            vm.purchaseBill.GCOMPIDs = [];
            $scope.detailData.FinanceDetailEdit.forEach(function (fd) {
                var _index = _.find(vm.purchaseBill.GCOMPIDs, function (GCOMPID) {
                    return GCOMPID == fd.GCOMP.ForeignKeyID;
                });
                if (_index===undefined) {
                    vm.purchaseBill.GCOMPIDs.push(fd.GCOMP.ForeignKeyID);
                    if (vm.purchaseBill.GCOMPID === "" ||vm.purchaseBill.GCOMPID ===undefined) {
                        vm.purchaseBill.GCOMPID = fd.GCOMP.ForeignKeyID;
                        vm.purchaseBill.GCOMPAccountID = fd.GCOMPAccount.ForeignKeyID;
                    }
                }
            });
            if (vm.purchaseBill.GCOMPIDs.length > 1) {
                vm.detailTipInfo = "成本中存在多个结算单位，请重新选择";
                vm.detailTipInfoType = "error";
                vm.purchaseBill.popoverIsOpen=false;
            }
        } else {
            vm.detailTipInfo = "请先选择三清单成本";
            vm.detailTipInfoType = "error";
            vm.purchaseBill.popoverIsOpen=false;
        }
    }

    $scope.$watch("vm.purchaseBill.popoverIsOpen",function(value){
      if(value){
        submitPurchaseBill();
      }
    });

    /*保存三清单成本结算*/
    function saveFinanceBillPurchase() {
        if ($scope.detailData.FinanceDetailEdit.length > 0) {
            vm.detailTipInfo = "正在保存三清单成本结算...";
            vm.detailTipInfoType = "info";
            console.log(vm.detailTipInfo);
            vm.purchaseBill.DetailList=[];
            $scope.detailData.FinanceDetailEdit.forEach(function (fd) {
                vm.purchaseBill.DetailList.push(fd._id);
            });
            var param = {
                "RequestData": JSON.stringify({
                    "BillID": vm.purchaseBill.BillID,
                    "Title": vm.purchaseBill.Title,
                    "GCOMPID": vm.purchaseBill.GCOMPID,
                    "GCOMPAccountID": vm.purchaseBill.GCOMPAccountID,
                    "PayModeID": vm.purchaseBill.PayModeID,
                    "PayTypeID": vm.purchaseBill.PayTypeID,
                    "Notes": vm.purchaseBill.Notes,
                    "InvoiceNo": vm.purchaseBill.InvoiceNo,
                    "DetailList": vm.purchaseBill.DetailList
                })
            };
            SavePurchaseBillData(param, function (response) {
                vm.detailTipInfo = "已经保存三清单成本结算";
                vm.detailTipInfoType = "success";
                console.log(vm.detailTipInfo);
                if(dataInfo.OPtype=="Audit"){
                  var audit = _.find($rootScope[position[1]].list, function(item) {
                    if (item.detail.businessID == dataInfo.Finances._id && item.subType == dataInfo.subType && item.targetId == dataInfo.targetID && item._id.$id == dataInfo.itemID)
                      return true;
                  });
                  audit.isHandled = true;
                }
                else {
                  saveToScope(response);
                }
                closeSubView();
            });
        } else {
            vm.detailTipInfo = "请先选择三清单成本";
            vm.detailTipInfoType = "error";
        }

        function saveToScope(response) {
            var _finance = _.find($rootScope[position[1]].list, function (item) {
                if (item.ID == response.Finances._id)
                    return true;
            });
            if (_finance === undefined) {
                _finance = {
                    "ID": response.Finances._id,
                    "FinanceNo": response.Finances.FinanceNo,
                    "PayTypeName": "",
                    "Title": response.Finances.Title,
                    "AuditStatus": "",
                    "PayStatus": response.Finances.PayStatus,
                    "PayPrice": response.Finances.PayPrice,
                    "ChangePrice": response.Finances.ChangePrice,
                    "RealPrice": response.Finances.RealPrice,
                    "Belong": response.Finances.Belong,
                    "CreateUser": response.Finances.CreateUser,
                    "FinancialTime": response.Finances.FinancialTime,
                    "PayStatusName": ""
                };
                //结算类型
                var _payTypes = _.filter($rootScope.FinancesType.FinancePayTypesList, function (elem) {
                    return elem.Value == response.Finances.PayType.ID;
                });
                _finance.PayTypeName = _payTypes.length > 0 ? _payTypes[0].Text : "";
                //审核状态
                var _auditStatus = _.filter($rootScope.FinancesType.AuditStatusList, function (elem) {
                    return elem.Value == response.Finances.AuditStatus;
                });
                _finance.AuditStatus = _auditStatus.length > 0 ? _auditStatus[0].Text : "";
                $scope.mainData.list.unshift(_finance);
            } else {
                _finance.Title = response.Finances.Title;
                _finance.PayStatus = response.Finances.PayStatus;
                _finance.PayPrice = response.Finances.PayPrice;
                _finance.ChangePrice = response.Finances.ChangePrice;
                _finance.RealPrice = response.Finances.RealPrice;
                _finance.Belong = response.Finances.Belong;
                $scope.detailData.Finances=response.Finances;
                $scope.detailData.FinanceDetail=response.FinanceDetail;
                var _payTypes = _.filter($rootScope.FinancesType.FinancePayTypesList, function (elem) {
                    return elem.Value == response.Finances.PayType.ID;
                });
                _finance.PayTypeName = _payTypes.length > 0 ? _payTypes[0].Text : "";
                //审核状态
                var _auditStatus = _.filter($rootScope.FinancesType.AuditStatusList, function (elem) {
                    return elem.Value == response.Finances.AuditStatus;
                });
                _finance.AuditStatus = _auditStatus.length > 0 ? _auditStatus[0].Text : "";
            }
        }
    }

    //删除三清单成本结算
    function deletePurchaseBill(financeID) {
        showWarningBox("确定要删除此三清单成本结算？", activate);

        function activate() {
            DelPurchaseBillData(financeID, function (response) {
                if (response.code >= 700 && response.code < 800) {
                    vm.detailTipInfo = "删除成功";
                    changeScope();
                    closeSubView();
                } else {
                    vm.detailTipInfo = "删除失败";
                    vm.detailTipInfoType = "error";
                }
            });
        }

        function changeScope() {
            var item = _.filter($scope.mainData.list, function (i) {
                return i.ID == financeID;
            });
            $scope.mainData.list = _.without($scope.mainData.list, item[0]);
        }
    }

    //点击核销，核销信息重置
    function WriteOffBegining(GCOMPID) {
        $scope.detailData.WriteOffEditInfo = {}; //所对应单挑修改核销信息
        $scope.detailData.WriteOffList = [];
        vm.ProjectFilter.GCOMPID = GCOMPID;
        searchProject();
    }

    //添加或编辑核销
    function addOneWriteOffFun(item) {
        if (item === undefined) {
            var _oneWriteOff = {
                SourceID: "",
                VerificationTitle: "",
                VerificationMoney: "",
                maxVerificationMoney: 0,
                FinanceTypeName: "",
                VerificationNote: "",
                pageStatus: "add"
            };
            $scope.detailData.WriteOffEditInfo = angular.copy(_oneWriteOff);
            $scope.detailData.WriteOffList.push(_oneWriteOff);
        } else {
            item.pageStatus = "eidt";
            $scope.detailData.WriteOffEditInfo = angular.copy(item);
        }
    }

    //保存单条核销
    function saveOneWriteOffFun(item) {
        item = angular.extend(item, $scope.detailData.WriteOffEditInfo);
        if ($scope.detailData.WriteOffEditInfo.pageStatus == "add") {//是在添加的情况下

        } else if ($scope.detailData.WriteOffEditInfo.pageStatus == "eidt") {//是在修改的情况下

        }
        $scope.detailData.WriteOffEditInfo = {};
        item.pageStatus = "show";
    }

    //取消保存单条核销
    function cancelOneWriteOffFun(item) {
        if (item.pageStatus == "add") {
            $scope.detailData.WriteOffList = _.without($scope.detailData.WriteOffList, item);
            for (var i = 0; i < $scope.detailData.ProjectList.length; i++) {
                if ($scope.detailData.ProjectList[i]._id == item.SourceID) {
                    $scope.detailData.ProjectList[i].isChoose = false;
                    break;
                }
            }
        } else if (item.pageStatus == "eidt") {
            item.pageStatus = "show";
        }
        //item.pageStatus = "show";
        //$scope.detailData.WriteOffEditInfo = {};
    }

    //删除单条核销
    function deleteOneWriteOffFun(_oneWriteOff) {
        $scope.detailData.WriteOffList = _.without($scope.detailData.WriteOffList, _oneWriteOff);
        //判断项目是否选中
        for (var i = 0; i < $scope.detailData.ProjectList.length; i++) {
            if ($scope.detailData.ProjectList[i]._id == _oneWriteOff.SourceID) {
                $scope.detailData.ProjectList[i].isChoose = false;
                break;
            }
        }
    }

    //保存提交核销列表
    function saveWriteOffListFun(Purchase) {
        if ($scope.detailData.WriteOffList && $scope.detailData.WriteOffList.length > 0) {
            vm.detailTipInfo = "正在保存核销明细信息...";
            vm.detailTipInfoType = "info";

            var _vList = [];
            $scope.detailData.WriteOffList.forEach(function (e) {
                var one = {
                    "SourceID": e.SourceID,
                    "VerificationTitle": e.VerificationTitle,
                    "VerificationMoney": e.VerificationMoney,
                    "VerificationNote": e.VerificationNote
                };
                _vList.push(one);
            });
            var param = {
                PurchaseID: Purchase.ID,
                VerificationList: JSON.stringify(_vList)
            };
            SavePurchaseVerification(param, function (response) {
                vm.detailTipInfo = "已经保存核销明细信息";
                vm.detailTipInfoType = "success";

                Purchase.ChangePrice = response.ChangePrice;
                Purchase.RealPrice = response.RealPrice;
                Purchase.VerificationMoney = response.VerificationMoney;
                Purchase.PayStatus = response.PayStatus == 2 ? "已确认" : (response.IsSubmit === 0 ? "未提交" : "已提交");
                Purchase.popoverIsOpen = false;
                $scope.detailData.WriteOffList = [];
                //saveToScope(response);
                //closeSubView();
            });
        } else {
            vm.detailTipInfo = "请先添加核销明细";
            vm.detailTipInfoType = "error";
        }
    }

    /*搜索项目列表*/
    function searchProject(page) {
        if (page === undefined) {
            vm.ProjectPage = 1;
        } else {
            vm.ProjectPage = page;
        }
        var search = getProjectInput(vm.ProjectFilter);
        //console.log(JSON.stringify(search));
        getFinanceOrderAdvanceList(search, changeScopteFilter);

        function getProjectInput(ProjectFilter) {
            var data = {
                iPageIndex: vm.ProjectPage,
                iPageSize: vm.ProjectPageSize,
                ErificationStatus: 1,
                GCOMPID: ProjectFilter.GCOMPID
            };
            //关键词
            if (ProjectFilter.SearchInfo) {
                data.SearchInfo = ProjectFilter.SearchInfo;
            }
            //是否订单暂借款 订单预付款
            if (ProjectFilter.FinanceType) {
                data.FinanceType = ProjectFilter.FinanceType;
            }
            //是否个人还是公司
            if (ProjectFilter.UserType) {
                data.UserType = ProjectFilter.UserType;
            }
            /*if(ProjectFilter.GCOMPID){
             data.GCOMPID = ProjectFilter.GCOMPID;
             }*/
            return data;
        }

        function changeScopteFilter(data) {
            //console.log(data);
            $scope.detailData.ProjectList = data.list;
            $scope.detailData.ProjectHotel = new Pagination(
                data.count, vm.ProjectPage
            );
            for (var i = 0; i < $scope.detailData.ProjectList.length; i++) {
                var _p = $scope.detailData.ProjectList[i];
                for (var j = 0; j < $scope.detailData.WriteOffList.length; j++) {
                    var _w = $scope.detailData.WriteOffList[j];
                    if (_p._id == _w.SourceID) {
                        _p.isChoose = true;
                    }
                }
            }
        }
    }

    function searchProjectSubmit(keyEvent) {
        if (keyEvent.which == 13) {
            vm.searchProject();
        }
    }

    /*选择项目*/
    function chooseProject(oneProject, oneWriteOff) {
        $scope.detailData.WriteOffEditInfo.SourceID = oneProject._id;
        $scope.detailData.WriteOffEditInfo.VerificationTitle = oneProject.FinanceTtile; //标题
        $scope.detailData.WriteOffEditInfo.VerificationMoney = oneProject.WaitVerificationMoney; //待核销金额
        $scope.detailData.WriteOffEditInfo.maxVerificationMoney = oneProject.WaitVerificationMoney; //最大待核销金额
        $scope.detailData.WriteOffEditInfo.FinanceTypeName = oneProject.FinanceTypeName; //项目类型
        $scope.detailData.WriteOffEditInfo.VerificationNote = oneProject.Notes; //备注
        //$scope.detailData.SelectSource[oneProject._id] = true;
        //重新判断项目是否选中

        for (var i = 0; i < $scope.detailData.ProjectList.length; i++) {
            var _p = $scope.detailData.ProjectList[i];
            if (_p._id == oneProject._id) {
                oneProject.isChoose = true;
                //break;
            } else {
                _p.isChoose = false;
                for (var j = 0; j < $scope.detailData.WriteOffList.length; j++) {
                    var _w = $scope.detailData.WriteOffList[j];
                    if (_p._id == _w.SourceID && oneWriteOff.SourceID != _w.SourceID) {
                        _p.isChoose = true;
                    }
                }
            }
        }
        oneWriteOff.popoverIsOpen = false;
    }


    /*审核通过*/
  	$scope.auditFinancePurchaseBill = function() {
  		showWarningBox("通过成本结算下一步流程(" + dataInfo.nextStepName + ")", function() {
  			var param = {
  				FinanceID: dataInfo.Finances._id
  			};
  			vm.detailTipInfo = "成本结算通过审核中。。。";
  			vm.detailTipInfoType = "warning";
  			$rootScope.showProcessBar = true;
  			auditFinance(param, function(detail) {
  				var viewId = $rootScope[switchType[2]].id;
  				addRefreshPageByID(viewId);
  				vm.detailTipInfo = "成本结算通过审核成功";
  				vm.detailTipInfoType = "success";
  				$rootScope.showSubView = false;
  				$rootScope.showProcessBar = false;
  				var audit = _.find($rootScope[position[1]].list, function(item) {
  					if (item.detail.businessID == param.FinanceID && item.subType == dataInfo.subType && item.targetId == dataInfo.targetID && item._id.$id == dataInfo.itemID)
  						return true;
  				});
  				audit.isHandled = true;
  			});
  		});
  	};
  	/*审核退回弹框*/
  	$scope.openBackAuditPurchaseBill = function() {
  		dataInfo.AuditBack = {};
  		dataInfo.AuditBack.BussinessID = dataInfo.Finances._id;
  		dataInfo.AuditBack.User = dataInfo.Finances.CreateUser;
  		dataInfo.AuditBack.Title = "成本结算";
  		dataInfo.AuditBack.Notes = "";
  	};
  	/*审核退回*/
  	$scope.backAudit = function() {
  		showWarningBox("是否退回成本结算", function() {
  			var param = {
  				FinanceID: dataInfo.AuditBack.BussinessID,
  				Notes: dataInfo.AuditBack.Notes
  			};
  			vm.detailTipInfo = "成本结算退回中。。。";
  			vm.detailTipInfoType = "warning";
  			$rootScope.showProcessBar = true;
  			backAuditFinance(param, function(detail) {
  				var viewId = $rootScope[switchType[2]].id;
  				addRefreshPageByID(viewId);
  				vm.detailTipInfo = "成本结算退回成功";
  				vm.detailTipInfoType = "success";
  				$rootScope.showSubView = false;
  				$rootScope.showProcessBar = false;
  				var audit = _.find($rootScope[position[1]].list, function(item) {
  					if (item.detail.businessID == param.FinanceID && item.subType == dataInfo.subType && item.targetId == dataInfo.targetID && item._id.$id == dataInfo.itemID)
  						return true;
  				});
  				audit.isHandled = true;
  			});
  		});
  	};

    /*财务确认状态 支付状态*/
    vm.EPayStatus = [{
        'value': 1,
        'name': '未确认'
    }, {
        'value': 2,
        'name': '已确认'
    }];
}
/**
 * Created by chen on 2016/4/15.
 * 导游报账 控制器
 */
angular.module("HY").controller("financeGuideReimController", fGuideReimController);

function fGuideReimController(getFinanceGuideReimList, getReimTeamList, GetGuideReimOrderList, SaveGuideReimData,
  closeSubView, $scope, $rootScope, $filter, ngDialog, Pagination, openSubView, deleteGuideReim, auditFinance, addRefreshPageByID, backAuditFinance,
  showWarningBox) {
  var vm = this;
  var dataInfo = $rootScope[position[2]];
  vm.template = {};
  vm.template.BusinessNavTab = "/public/angularView/finances/business/OBusinessNavTab.html"; //导航切换
  /*vm.filter = {};
  vm.filter.TimeType = 1; //时间搜索类型*/
  var filters = $rootScope[position[1]].filter;
  if (typeof filters == "undefined") {
    //console.log("fdfd");
    $rootScope[position[1]].filter = {
      TimeType: 1, //时间搜索类型
      ConditionField: "PayPrice"
    };
  }
  vm.page = 1;
  vm.pageSize = 20;
  vm.searchList = searchList;
  vm.searchSubmit = searchSubmit;

  vm.teamFilter = {}; //搜索团队条件
  vm.teamPage = 1;
  vm.teamPageSize = 5;
  vm.searchTeam = searchTeam; //搜索团队
  vm.searchTeamSubmit = searchTeamSubmit; //输入关键词搜索团队
  vm.choseTeam = choseTeam; //选择团队
  vm.showAddDiv = showAddDiv;
  vm.saveGuideReim = saveGuideReim; //保存导游报账
  vm.deleteGuideReimFun = deleteGuideReimFun; //删除导游报账


  vm.shrinkFun = shrinkFun; //导游预领明细收缩
  vm.chosePayTypeFun = chosePayTypeFun; //选择结算类型
  vm.choseGuideReimOrder = choseGuideReimOrder; //选择订单之后，修改结算信息中的单数，以及价格
  vm.addOneSettlement = addOneSettlement; //单条结算信息保存到结算列表中
  vm.editOneSettlement = editOneSettlement; //保存所编辑的结算信息到结算列表
  vm.showOneSettlement = showOneSettlement; //点击结算信息，显示到编辑框中
  vm.deleteOneSettlement = deleteOneSettlement; //删除单条结算信息

  //vm.SettlementEditInfo

  $scope.mainData.navTabType = 'GuideReim';

  if ($rootScope[position[2]].operationMode == 'add') {
    vm.Settlement = {};
    $rootScope[position[2]].guideList = $rootScope[position[2]].TeamInfo.TeamFullGuides.concat($rootScope[position[2]].TeamInfo.TeamFlyGuides);
    $rootScope[position[2]].GuideReimDetailList = []; //待保存的导游报账列表
  } else if ($rootScope[position[2]].operationMode == 'show') {
    if ($scope.detailData.finance.PayStatus != 2 && ($scope.detailData.finance.AuditStatus == 1 || $scope.detailData.finance.AuditStatus == 4 ||
        $scope.detailData.finance.AuditStatus == 5 || $scope.detailData.finance.AuditStatus == 6)) {
      console.log($scope.detailData.finance.PayStatus);
      console.log($scope.detailData.finance.AuditStatus);
      $scope.detailData.showDelete = true;
    }
  } else if ($rootScope[position[2]].operationMode == 'edit') {
    $rootScope[position[2]].guideList = $rootScope[position[2]].TeamInfo.TeamFullGuides.concat($rootScope[position[2]].TeamInfo.TeamFlyGuides);
  }

  function searchList(scrolling) {
    if ($scope.mainData.allPageCount === undefined) {
      $scope.mainData.allPageCount = $scope.mainData.pageCount;
    }

    vm.listLoading = true;
    if (scrolling === undefined) {
      vm.page = 1;
      vm.listMax = false;
      $scope.mainData.list = [];
    } else {
      if ($scope.mainData.allPageCount == 1 || vm.page == $scope.mainData.allPageCount) {
        vm.listLoading = false;
        $rootScope.isloadList = false;
        $rootScope.showProcessBar = false;
        return;
      }
      vm.page += 1;
    }
    var search = getInput($rootScope[position[1]].filter);
    if (!vm.listMax) {
      getFinanceGuideReimList(search, changeScopte);
    } else {
      vm.listLoading = false;
      $rootScope.isloadList = false;
      $rootScope.showProcessBar = false;
    }

    function getInput(filter) {
      /*
       * SearchInfo 关键词搜索
       * Field 搜索条件字段类型 PayPrice = 结算金额，TeamNo = 团队编号，BelongUser = 申请人（计调），FinanceTitle = 申请名称
       * TimeType 时间搜索类型 0添加时间1审核时间2支付时间
       * StartTime 搜索开始时间，EndTime 搜索结束时间
       * AuditStatus 审核状态 发起审核 = 1,审核处理中 = 2,审核通过 = 3,审核退回 = 4,审核失败 = 5,流程取消 = 6
       * PayStatus 支付状态 1未确认，2已确认
       * DeptId 部门id
       * */
      var data = {
        iPageIndex: vm.page,
        iPageSize: vm.pageSize
      };
      //关键词
      if (filter.SearchInfo) {
        data.SearchInfo = filter.SearchInfo;
      }
      //搜索条件字段类型
      if (filter.ConditionField) {
        data.Field = filter.ConditionField;
      }
      //时间搜索类型
      if (filter.TimeType) {
        data.TimeType = filter.TimeType;
      }
      //搜索开始时间
      if (filter.StartTime) {
        data.StartTime = $filter("date")(filter.StartTime, "yyyy-MM-dd");
      }
      //搜索结束时间
      if (filter.EndTime) {
        data.EndTime = $filter("date")(filter.EndTime, "yyyy-MM-dd");
      }
      //审核状态
      if (filter.AuditStatus) {
        data.AuditStatus = filter.AuditStatus;
      }
      //支付状态
      if (filter.PayStatus) {
        data.PayStatus = filter.PayStatus;
      }
      //部门id
      if (filter.DeptId) {
        data.DeptId = filter.DeptId;
      }
      return data;
    }

    function changeScopte(data) {
      $scope.mainData.list = _.union($scope.mainData.list, data.list);
      $scope.mainData.allPageCount = data.pageCount;
      if (vm.page == $scope.mainData.allPageCount) {
        vm.listMax = true;
      }
      vm.listLoading = false;
      $rootScope.isloadList = false;
      $rootScope.showProcessBar = false;
    }
  }

  /*输入框内容按下回车*/
  function searchSubmit(keyEvent) {
    if (keyEvent.which == 13) {
      vm.searchList();
    }
  }

  function searchTeam(page) {
    if (page === undefined) {
      vm.teamPage = 1;
    } else {
      vm.teamPage = page;
    }
    var search = getTeamInput(vm.teamFilter);
    getReimTeamList(search, changeScopteFilter);

    function getTeamInput(teamFilter) {
      var data = {
        iPageIndex: vm.teamPage,
        iPageSize: vm.teamPageSize
      };

      //关键词
      if (teamFilter.SearchInfo) {
        data.SearchInfo = teamFilter.SearchInfo;
      }
      //搜索开始时间
      if (teamFilter.StartTime) {
        data.StartTime = $filter("date")(teamFilter.StartTime, "yyyy-MM-dd");
      }
      //搜搜结束时间
      if (teamFilter.EndTime) {
        data.EndTime = $filter("date")(teamFilter.EndTime, "yyyy-MM-dd");
      }
      //结算状态
      // if (teamFilter.CensusStatus) {
      //     data.EndTime = $filter("date")(teamFilter.EndTime, "yyyy-MM-dd");
      // }
      data.CensusStatus = teamFilter.CensusStatus;
      data.ReimStatus = teamFilter.ReimStatus;
      return data;
    }

    function changeScopteFilter(data) {
      $scope.mainData.TeamList = data.list;
      $scope.mainData.TeamHotel = new Pagination(
        data.count, vm.teamPage
      );
    }
  }

  function searchTeamSubmit(keyEvent) {
    if (keyEvent.which == 13) {
      vm.searchTeam();
    }
  }

  function choseTeam() {
    searchTeam();
    ngDialog.open({
      className: 'big',
      template: '/public/angularView/finances/financeGuideReim/guideReimTeam.html?' + Math.random(),
      data: {}
    });
  }

  //跳转到添加页面
  function showAddDiv(teamID) {
    $scope.fetch('financeCenter/financeGuideReim/Add?TeamID=' + teamID);
    openSubView();
  }

  //导游预领明细收缩
  function shrinkFun(financeDetail) {
    if (financeDetail.develop) {
      financeDetail.develop = false;
    } else {
      financeDetail.develop = true;
    }
  }

  //选择结算类型
  function chosePayTypeFun(payTypeID) {
    /*if (vm.Settlement.PayTypeID == 3) {
        vm.Settlement.OrderID = undefined;
        GetGuideReimOrderList($rootScope[position[2]].TeamInfo.TeamID, function (response) {
            $rootScope[position[2]].GuideReimOrderList = response;
        });
    } else {
        $rootScope[position[2]].GuideReimOrderList = [];
    }*/
    if (payTypeID == 3) {
      if ($rootScope[position[2]].operationMode == 'add') {
        vm.Settlement.OrderID = undefined;
      } else if ($rootScope[position[2]].operationMode == 'add') {
        vm.SettlementEditInfo.OrderID = undefined;
      }

      GetGuideReimOrderList($rootScope[position[2]].TeamInfo.TeamID, function(response) {
        $rootScope[position[2]].GuideReimOrderList = response;
      });
    } else {
      $rootScope[position[2]].GuideReimOrderList = [];
    }
  }

  //选择订单之后，修改结算信息中的单数，以及价格
  function choseGuideReimOrder(orderID, unPayMoney) {
    if (orderID !== undefined) {
      vm.Settlement.OrderID = orderID;
      vm.Settlement.SingePrice = unPayMoney;
      vm.Settlement.Numbers = 1;
    }
  }

  //单条结算信息保存到结算列表中
  function addOneSettlement() {
    if (checkInput()) {
      var _oneS = {
        "GuideID": vm.Settlement.GuideID,
        "Title": vm.Settlement.Title,
        "PayTypeID": vm.Settlement.PayTypeID,
        "Numbers": vm.Settlement.Numbers,
        "SingePrice": vm.Settlement.SingePrice,
        "PayPrice": vm.Settlement.Numbers * vm.Settlement.SingePrice,
        "OrderID": vm.Settlement.OrderID,
        "Notes": vm.Settlement.Notes
      };
      $rootScope[position[2]].GuideReimDetailList.push(_oneS);
      vm.Settlement = {};
      $rootScope[position[2]].GuideReimOrderList = [];
      console.log(JSON.stringify(vm.Settlement));
    }

    function checkInput() {
      var flag = true;
      var requiredList = ['GuideID', 'Title', 'PayTypeID', 'SingePrice', 'Numbers', 'Notes'];
      for (var item in requiredList) {
        if (vm.fSettlementAdd[requiredList[item]].$error.required) {
          flag = false;
          vm.detailTipInfo = "结算信息需求填写不完整";
          vm.detailTipInfoType = "error";
          break;
        }
      }
      if (vm.Settlement.PayTypeID !== undefined && vm.Settlement.PayTypeID == 3 && vm.Settlement.OrderID === undefined) {
        flag = false;
        vm.detailTipInfo = "请选择订单";
        vm.detailTipInfoType = "error";
      }
      return flag;
    }
  }

  /*点击编辑，把当前数据显示编辑框中*/
  function showOneSettlement(item) {
    vm.SettlementEditInfo = angular.copy(item);
    //console.log(JSON.stringify(vm.SettlementEditInfo));
    //vm.SettlementEditInfo.GuideID=item.GuideInfo.ForeignKeyID;
  }

  //保存所编辑的结算信息到结算列表
  function editOneSettlement(item) {
    if (checkInput()) {
      item = angular.extend(item, vm.SettlementEditInfo);
      item.popoverIsOpen = false;
      vm.fDetailEditInfo = {};
    }

    function checkInput() {
      var flag = true;
      var requiredList = ['GuideID', 'Title', 'PayTypeID', 'SingePrice', 'Numbers', 'Notes'];
      for (var item in requiredList) {
        if (vm.fSettlementEdit[requiredList[item]].$error.required) {
          flag = false;
          vm.detailTipInfo = "结算信息需求填写不完整";
          vm.detailTipInfoType = "error";
          break;
        }
      }
      if (vm.SettlementEditInfo.PayTypeID !== undefined && vm.SettlementEditInfo.PayTypeID == 3 && vm.SettlementEditInfo.OrderID === undefined) {
        flag = false;
        vm.detailTipInfo = "请选择订单";
        vm.detailTipInfoType = "error";
      }
      return flag;
    }
  }

  //删除单条结算信息
  function deleteOneSettlement(item) {
    $rootScope[position[2]].GuideReimDetailList = _.without($rootScope[position[2]].GuideReimDetailList, item);
  }


  function saveGuideReim() {
    if ($rootScope[position[2]].ReimVerificationMoney === undefined) {
      vm.detailTipInfo = "请输入正确的预领金额";
      vm.detailTipInfoType = "error";
      return;
    }
    if ($rootScope[position[2]].GuideReimDetailList.length > 0) {
      vm.detailTipInfo = "正在保存导游报账信息...";
      vm.detailTipInfoType = "info";
      var param = {
        "RequestData": JSON.stringify({
          "FinanceID": $scope.detailData.FinanceID,
          "TeamID": $scope.detailData.TeamInfo.TeamID,
          "ReimVerificationMoney": $rootScope[position[2]].ReimVerificationMoney,
          "DetailList": $rootScope[position[2]].GuideReimDetailList
        })
      };
      //console.log(JSON.stringify(param));
      SaveGuideReimData(param, function(response) {
        vm.detailTipInfo = "已经保存导游报账信息";
        vm.detailTipInfoType = "success";
        if (dataInfo.OPtype == "Audit") {
          var audit = _.find($rootScope[position[1]].list, function(item) {
            if (item.detail.businessID == $scope.detailData.FinanceID && item.subType == dataInfo.subType && item.targetId == dataInfo.targetID && item._id.$id == dataInfo.itemID)
              return true;
          });
          audit.isHandled = true;
        } else {
          saveToScope(response);
        }
        closeSubView();
      });
    } else {
      vm.detailTipInfo = "请先添加结算信息";
      vm.detailTipInfoType = "error";
    }

    function saveToScope(response) {
      var _finance = _.find($rootScope[position[1]].list, function(item) {
        if (item.FinanceID == response._id)
          return true;
      });
      if (_finance === undefined) {
        _finance = {
          "FinanceID": response._id,
          "FinanceNo": response.FinanceNo,
          "TeamNo": response.TeamInfo.TeamNo,
          "TeamTitle": response.TeamInfo.TeamTitle,
          "TeamStartTime": response.TeamInfo.TeamStartTime,
          "PayStatus": response.PayStatus,
          "ReimVerificationMoney": response.ReimVerificationMoney,
          "RealReimMoney": response.RealReimMoney,
          "PayPrice": response.PayPrice,
          "AuditStatus": response.AuditStatus,
          "AuditStatusName": "",
          "BelongName": response.Belong !== undefined ? response.Belong.EmployeeName : "",
          "Belong": response.Belong,
          "FinancialTime": response.FinancialTime,
          "GuideInfo": response.GuideInfo,
          "PayStatusName": ""
        };
        var _auditStatus = _.filter($rootScope.FinancesType.AuditStatusList, function(elem) {
          return elem.Value == response.AuditStatus;
        });
        _finance.AuditStatusName = _auditStatus.length > 0 ? _auditStatus[0].Text : "";
        var _payStatus = _.filter(vm.EPayStatus, function(elem) {
          return elem.value == response.PayStatus;
        });
        _finance.PayStatusName = _payStatus.length > 0 ? _payStatus[0].name : "";
        $scope.mainData.list.unshift(_finance);

      } else {
        _finance.PayStatus = response.PayStatus;
        _finance.ReimVerificationMoney = response.ReimVerificationMoney;
        _finance.RealReimMoney = response.RealReimMoney;
        _finance.PayPrice = response.PayPrice;
        _finance.AuditStatus = response.AuditStatus;
        _finance.GuideInfo = response.GuideInfo;
        var _auditStatus = _.filter($rootScope.FinancesType.AuditStatusList, function(elem) {
          return elem.Value == response.AuditStatus;
        });
        _finance.AuditStatusName = _auditStatus.length > 0 ? _auditStatus[0].Text : "";
        var _payStatus = _.filter(vm.EPayStatus, function(elem) {
          return elem.value == response.PayStatus;
        });
        _finance.PayStatusName = _payStatus.length > 0 ? _payStatus[0].name : "";
      }
    }
  }

  /*删除导游报账*/
  function deleteGuideReimFun() {
    var financeID = $scope.detailData.finance._id; //导游报账id
    showWarningBox("确定要删除此导游报账？", activate);

    function activate() {
      deleteGuideReim(financeID, function(response) {
        if (response.code >= 700 && response.code < 800) {
          vm.detailTipInfo = "删除成功";
          changeScope();
          closeSubView();
        } else {
          vm.detailTipInfo = "删除失败";
          vm.detailTipInfoType = "error";
        }
      });
    }

    function changeScope() {
      var item = _.filter($scope.mainData.list, function(i) {
        return i.FinanceID == financeID;
      });
      $scope.mainData.list = _.without($scope.mainData.list, item[0]);
    }
  }



  /*审核通过*/
  $scope.auditFinanceGuideReim = function() {
    showWarningBox("是否审核导游报账通过,下一步流程(" + dataInfo.nextStepName + ")", function() {
      var param = {
        FinanceID: dataInfo.finance._id
      };
      vm.detailTipInfo = "导游报账通过审核中。。。";
      vm.detailTipInfoType = "warning";
      $rootScope.showProcessBar = true;
      auditFinance(param, function(detail) {
        var viewId = $rootScope[switchType[2]].id;
        addRefreshPageByID(viewId);
        vm.detailTipInfo = "导游报账通过审核成功";
        vm.detailTipInfoType = "success";
        $rootScope.showSubView = false;
        $rootScope.showProcessBar = false;
        var audit = _.find($rootScope[position[1]].list, function(item) {
          if (item.detail.businessID == param.FinanceID && item.subType == dataInfo.subType && item.targetId == dataInfo.targetID && item._id.$id == dataInfo.itemID)
            return true;
        });
        audit.isHandled = true;
      });
    });
  };
  /*审核退回弹框*/
  $scope.openBackAuditFinanceGuideReim = function() {
    dataInfo.AuditBack = {};
    dataInfo.AuditBack.BussinessID = dataInfo.finance._id;
    dataInfo.AuditBack.User = dataInfo.finance.CreateUser;
    dataInfo.AuditBack.Title = "导游报账";
    dataInfo.AuditBack.Notes = "";
  };
  /*审核退回*/
  $scope.backAudit = function() {
    showWarningBox("是否退回导游报账", function() {
      var param = {
        FinanceID: dataInfo.AuditBack.BussinessID,
        Notes: dataInfo.AuditBack.Notes
      };
      vm.detailTipInfo = "导游报账退回中。。。";
      vm.detailTipInfoType = "warning";
      $rootScope.showProcessBar = true;
      backAuditFinance(param, function(detail) {
        var viewId = $rootScope[switchType[2]].id;
        addRefreshPageByID(viewId);
        vm.detailTipInfo = "导游报账退回成功";
        vm.detailTipInfoType = "success";
        $rootScope.showSubView = false;
        $rootScope.showProcessBar = false;
        var audit = _.find($rootScope[position[1]].list, function(item) {
          if (item.detail.businessID == param.FinanceID && item.subType == dataInfo.subType && item.targetId == dataInfo.targetID && item._id.$id == dataInfo.itemID)
            return true;
        });
        audit.isHandled = true;
      });
    });
  };

  /*财务确认状态 支付状态*/
  vm.EPayStatus = [{
    'value': 1,
    'name': '未确认'
  }, {
    'value': 2,
    'name': '已确认'
  }];

  /*审核状态*/
  vm.EAuditStatus = [{
    'value': 1,
    'name': '发起'
  }, {
    'value': 2,
    'name': '处理中'
  }, {
    'value': 3,
    'name': '通过'
  }, {
    'value': 4,
    'name': '退回'
  }, {
    'value': 5,
    'name': '失败'
  }, {
    'value': 6,
    'name': '取消'
  }];


  /*导游报账时间类型*/
  vm.EGuideReimbursementTimeTypes = [{
    'value': 1,
    'name': '创建时间'
  }, {
    'value': 2,
    'name': '财务时间'
  }, {
    'value': 3,
    'name': '发团时间'
  }];

}
﻿ //汇款认领
app.controller("RemittanceListCtrl", RemittanceListCtrl);
app.controller("RemittanceDetailCtrl", RemittanceDetailCtrl);

//#region  Expanded Region
function RemittanceListCtrl(
	//#region RemittanceListCtrl初始化方法
	$scope,
	$rootScope,
	$filter,
	getRemittanceList, //汇款认领列表
	saveAddRemittance, //保存
	getRemittanceOrderList, //认领订单详情
    addRefreshPageByID
	//#endregion
) {
	//#region  定义参数
	var ctrl = this;
	var vm = $rootScope[position[1]].RemittanceList;
	$scope.addModel = {};
	$scope.SumbitBut = true;
	$scope.addModel.RemitType = {};
	$scope.addModel.RemitType.ID = '1';
	$scope.addModel.RemitterType = '1';
	$scope.addModel.Time = Date.now();
	$scope.addModel.isRemittanceAdd = false;
	$scope.addModel.isOpenOrderMoreIn = false;
	$scope.addModel.IsShowOrderList = false;
	vm.RemittanceOrder = {};
	$scope.addModel.OrderList = [];
	$scope.addModel.OrderLists = [];
	$scope.addModel.search = {};
	$scope.addModel.search.iPageSize = "10";
	$scope.addModel.search.iPageIndex = "";
	$scope.addModel.search.SearchInfo = "";
	$scope.addModel.search.OType = 2;
	//#endregion

	ctrl.searchList = function() {
		$rootScope.showProcessBar = true;
		vm.listData.search.iPageIndex = 1;
		getRemittanceList(vm.listData.search, function(data) {
			$rootScope.isloadList = false;
			$rootScope.showProcessBar = false;
			vm.listData.list = data.RemittanceList.listData.list;
		});
	};

	ctrl.loadList = function() {
		$rootScope.showProcessBar = true;
		vm.listData.search.iPageIndex += 1;
		getRemittanceList(vm.listData.search, function(data) {
			$rootScope.isloadList = false;
			$rootScope.showProcessBar = false;
			vm.listData.list.push.apply(vm.listData.list, data.RemittanceList.listData.list);
		});
	};

	$scope.AddRemittance = function() {
		var data = {
			"RequestData": JSON.stringify($scope.addModel)
		};
		$scope.SumbitBut = false;
		saveAddRemittance(data, function(data) {
			$scope.detailTipInfo = "添加收款信息成功";
			$scope.detailTipInfoType = "success";
			$scope.SumbitBut = true;
			$scope.closeAddRemittance();
			var viewId = $rootScope[switchType[2]].id;
			addRefreshPageByID(viewId);
			ctrl.searchList();
			//$scope.fetch("financeCenter/Remittance/List");
		});
	};

	$scope.closeAddRemittance = function() {
		$scope.addModel.isRemittanceAdd = false;
	};

	$scope.openChangeOrderMoreIn = function() { //添加汇款认领--选择多收转入--选择关联订单--订单列表--自己的订单未收款小于零
		var param = {
			SearchInfo: "",
			StartTime: "",
			Endtime: "",
			iPageIndex: 1,
			iPageSize: 10,
			OType: 2
		};
		getRemittanceOrderList(param, function(data) {
			$scope.addModel.OrderLists.list = data.list;
			$scope.addModel.OrderLists.count = data.count;
			var Maxindex = Math.ceil($scope.addModel.OrderLists.count / 5);
			if (Maxindex > 5) {
				$scope.addModel.Pages = [1, 2, 3, 4, 5];
			} else {
				$scope.addModel.Pages = [];
				for (var i = 1; i <= Maxindex; i++) {
					$scope.addModel.Pages.push(i);
				}
			}
			$scope.addModel.search.iPageSize = 5;
			$scope.addModel.search.iPageIndex = 1;
		});
	};

	$scope.checkAll = function() {
		$scope.addModel.OrderLists.list.forEach(function(item) {
			item.isSelected = !item.isSelected;
		});
	};

	$scope.PageDown = function(type) {
		if (type == 0) {
			if ($scope.addModel.Pages[0] > 1) {
				var indexChange = 5;
				if ($scope.addModel.Pages[0] <= 5) {
					indexChange = $scope.addModel.Pages[0];
				}
				$scope.addModel.Pages.forEach(function(item) {
					item -= indexChange;
				});
			}
		} else if (type == 1) {
			var Maxindex = Math.ceil($scope.addModel.OrderLists.count / $scope.addModel.search.iPageSize);
			if ($scope.addModel.Pages[0] + 5 < Maxindex) {
				var indexChange = 5;
				if ($scope.addModel.Pages[4] + 5 > Maxindex) {
					indexChange = Maxindex - $scope.addModel.Pages[4];
				}
				$scope.addModel.Pages.forEach(function(item) {
					item += indexChange;
				});
			}
		}
		$scope.addModel.search.iPageIndex = $scope.Pages[0];
		$scope.addModel.search.StartTime = $filter('date')($scope.addModel.search.StartTimeDate, "yyyy-MM-dd");
		$scope.addModel.search.EndTime = $filter('date')($scope.addModel.search.EndTimeDate, "yyyy-MM-dd");
		getNotBussinessOtherOrderList($scope.addModel.search, function(data) {
			$scope.addModel.OrderLists.list = data.list;
			$scope.addModel.OrderLists.count = data.count;
		});
	};

	$scope.SetIndex = function(index) {
		$scope.addModel.search.iPageIndex = index;
		$scope.addModel.search.StartTime = $filter('date')($scope.addModel.search.StartTimeDate, "yyyy-MM-dd");
		$scope.addModel.search.EndTime = $filter('date')($scope.addModel.search.EndTimeDate, "yyyy-MM-dd");
		getNotBussinessOtherOrderList($scope.addModel.search, function(data) {
			$scope.addModel.OrderList.count = data.count;
			$scope.addModel.OrderList.list = data.list;
		});
	};

	$scope.searchOrderList = function() {
		$scope.addModel.search.iPageIndex = 1;
		$scope.addModel.search.StartTime = $filter('date')($scope.addModel.search.StartTimeDate, "yyyy-MM-dd");
		$scope.addModel.search.EndTime = $filter('date')($scope.addModel.search.EndTimeDate, "yyyy-MM-dd");
		getRemittanceOrderList($scope.addModel.search, function(data) {
			$scope.addModel.OrderLists.count = data.count;
			$scope.addModel.OrderLists.list = data.list;
			var Maxindex = Math.ceil($scope.addModel.OrderLists.count / $scope.addModel.search.iPageSize);
			if (Maxindex > 5) {
				$scope.addModel.Pages = [1, 2, 3, 4, 5];
			} else {
				$scope.addModel.Pages = [];
				for (var i = 1; i <= Maxindex; i++) {
					$scope.addModel.Pages.push(i);
				}
			}
		});
	};

	$scope.closeChangeOrderMoreIn = function() {
		$scope.addModel.isOpenOrderMoreIn = false;
	};

	$scope.GetChangeOrderMoreIn = function() {
		$scope.addModel.OrderList = [];
		$scope.addModel.OrderLists.list.forEach(function(item) {
			if (item.isSelected) {
				var oneOrder = {
					OrderNo: item.OrderNo,
					OrderTitle: item.ProductTitle,
					UnpaidOutMoney: item.TotalUnPayPrice,
					OrderID: item._id
				};
				$scope.addModel.OrderList.push(oneOrder);
			}
		});
		$scope.SumbitBut = false;
		$scope.addModel.isOpenOrderMoreIn = false;
	};

	$scope.ChangeRemitType = function() {
		if ($scope.addModel.RemitType.ID == '2') {
			$scope.addModel.IsShowOrderList = true;
		} else {
			$scope.addModel.IsShowOrderList = false;
		}
	};
}
//#endregion

//#region  RemittanceDetailCtrl
function RemittanceDetailCtrl(
	//#region RemittanceDetailCtrl初始化方法
	$scope,
	$rootScope,
	$filter,
	delRemittanceInfo, //汇款信息删除
	getRemittanceOrderList, //认领订单详情
    getRemittanceGroundList, //认领地接款列表
	saveRemittanceOrder, //预领订单保存
    saveRemittanceGround,//预领地接款保存
	showWarningBox, //删除弹框
	saveAddRemittance
	//#endregion
) {
	//#region   定义参数
	var ctrl = this;
	var vmm = $rootScope[position[2]];
	vmm.RemittanceClaimWindows = {};
	vmm.RemittanceOrder = {};
	vmm.RemittanceOrder.OrderList = [];

	$scope.updateModel = $rootScope[position[2]];
	$scope.updateModel.isRemittanceUpd = false;
	$scope.updateModel._id = vmm._id;
	$scope.updateModel.RemitType.ID = $rootScope[position[2]].RemitType.ID.toString();
	$scope.updateModel.RemitterType =$rootScope[position[2]].RemitterType.toString();
	//$scope.updateModel.Time = vmm.RemitTime;
	$scope.updateModel.BankId = vmm.Bank != null ? vmm.Bank.ForeignKeyID : "";
		vmm.oType = 0;
	$scope.updateModel.oType = 0;
	$scope.updateModel.isOpenOrderMoreIn = false;
	$scope.updateModel.IsShowOrderList = false;
	//#endregion
	$scope.closeRemittanceClaimDialog = function(name) {
		vmm.RemittanceClaimWindows.isRemittanceClaim = false; //认领选择弹框
		vmm.RemittanceClaimWindows.isOrderRemittanceClaim = false; //订单认领弹框
		vmm.RemittanceClaimWindows.isGroundRemittanceClaim = false; //地接款认领弹框
		vmm.RemittanceClaimWindows.isRemittanceAdd = false; //编辑弹框
		vmm.RemittanceClaimWindows.isRemittanceUpd = false; //编辑弹框
		if (name == "openRemittanceClaim") { //认领选择弹框
			vmm.RemittanceClaimWindows.isRemittanceClaim = true;
		}
		if (name == "openOrderRemittanceClaim") { //订单认领弹框
			vmm.RemittanceClaimWindows.isOrderRemittanceClaim = true;
		}
		if (name == "openGroundRemittanceClaim") { //地接款认领弹框
			vmm.RemittanceClaimWindows.isGroundRemittanceClaim = true;
		}
		if (name == "openRemittanceAdd") {
			vmm.RemittanceClaimWindows.isRemittanceAdd = true; //编辑弹框
		}
		if (name == "openRemittanceUpd") {
			vmm.RemittanceClaimWindows.isRemittanceUpd = true; //编辑弹框
		}
	};

	$scope.closeRemittanceOrder = function () {
	    vmm.RemittanceClaimWindows.isOrderRemittanceClaim = false;
	    $scope.updateModel.isOpenOrderMoreIn = false;
	};
    
    $scope.saveRemittanceLoad = function() {
        $scope.updateModel.OrderList = $rootScope[position[2]].OrderList;
        if ($scope.updateModel.RemitType.ID=="2") {
            $scope.updateModel.IsShowOrderList = true;
        }
    };
    
	ctrl.openRemittanceClaim = function() { //认领选择弹框
		$scope.closeRemittanceClaimDialog();
	};

	ctrl.openGroundRemittanceClaim = function(id) { //地接款认领弹框
		//vm.PostRemittanceClaim.RemittanceId = id;
		$scope.closeRemittanceClaimDialog();
	};

	ctrl.openRemittanceUpd = function() { //编辑
		$scope.closeRemittanceClaimDialog();
	};

	$scope.delRemittance = function(RemitMoney) {
		showWarningBox("是否确定删除此条汇款信息，金额" + RemitMoney, function() {
			var param = {
				id: vmm._id,
			};
			$scope.detailTipInfo = "汇款信息删除中。。。";
			$scope.detailTipInfoType = "warning";
			delRemittanceInfo(param, function(detail) {
				var viewId = $rootScope[switchType[2]].id;
				addRefreshPageByID(viewId);
				$scope.detailTipInfo = "汇款信息删除成功";
				$scope.detailTipInfoType = "success";
				$rootScope.showSubView = false;
				$rootScope.showProcessBar = true;
				$rootScope[position[1]].RemittanceList.listData.search.iPageIndex = 1;
				getCensusList($rootScope[position[1]].RemittanceList.listData.search, function(data) {
					$rootScope.isloadList = false;
					$rootScope.showProcessBar = false;
					$rootScope[position[1]].CensusList.listData.list = data.CensusList.listData.list;
				});
			});
		});
	};

	$scope.OrderList1 = function (oType) { //认领--弹框--订单列表--自己的订单未收款大于零，编辑汇款认领--多收转入--选择未收款小于零的订单
		$scope.updateModel.oType = vmm.oType = oType;
		var param = {
			SearchInfo: "",
			StartTime: "",
			Endtime: "",
			iPageIndex: 1,
			iPageSize: 5,
			OType: oType
		};
		vmm.RemittanceOrder.OrderList.search = {

		};
		getRemittanceOrderList(param, function(data) {
			vmm.RemittanceOrder.OrderList.list = data.list;
			vmm.RemittanceOrder.OrderList.count = data.count;
			var Maxindex = Math.ceil(vmm.RemittanceOrder.OrderList.count / 5);
			if (Maxindex > 5) {
				vmm.RemittanceOrder.OrderList.Pages = [1, 2, 3, 4, 5];
			} else {
				vmm.RemittanceOrder.OrderList.Pages = [];
				for (var i = 1; i <= Maxindex; i++) {
					vmm.RemittanceOrder.OrderList.Pages.push(i);
				}
			}
			vmm.RemittanceOrder.OrderList.search.iPageSize = 5;
			vmm.RemittanceOrder.OrderList.search.iPageIndex = 1;
		});
	};

	$scope.checkAll = function() {
		vmm.RemittanceOrder.OrderList.list.forEach(function(item) {
			item.isSelected = !item.isSelected;
		});
	};

	$scope.PageDown = function(type) {
		if (type == 0) {
			if (vmm.RemittanceOrder.OrderList.Pages[0] > 1) {
				var indexChange = 5;
				if (vmm.RemittanceOrder.OrderList.Pages[0] <= 5) {
					indexChange = vmm.RemittanceOrder.OrderList.Pages[0];
				}
				vmm.RemittanceOrder.OrderList.Pages.forEach(function(item) {
					item -= indexChange;
				});
			}
		} else if (type == 1) {
			var Maxindex = Math.ceil(vmm.RemittanceOrder.OrderList.count / vmm.RemittanceOrder.OrderList.search.iPageSize);
			if (vmm.RemittanceOrder.OrderList.Pages[0] + 5 < Maxindex) {
				var indexChange = 5;
				if (vmm.RemittanceOrder.OrderList.Pages[4] + 5 > Maxindex) {
					indexChange = Maxindex - vmm.RemittanceOrder.OrderList.Pages[4];
				}
				vmm.RemittanceOrder.OrderList.Pages.forEach(function(item) {
					item += indexChange;
				});
			}
		}
		vmm.RemittanceOrder.OrderList.search.iPageIndex = vmm.RemittanceOrder.OrderList.Pages[0];
		vmm.RemittanceOrder.OrderList.search.StartTime = $filter('date')(vmm.RemittanceOrder.OrderList.search.StartTimeDate, "yyyy-MM-dd");
		vmm.RemittanceOrder.OrderList.search.EndTime = $filter('date')(vmm.RemittanceOrder.OrderList.search.EndTimeDate, "yyyy-MM-dd");
		getNotBussinessOtherOrderList(vmm.RemittanceOrder.OrderList.search, function(data) {
			vmm.RemittanceOrder.OrderList.list = data.list;
			vmm.RemittanceOrder.OrderList.count = data.count;
		});
	};

	$scope.SetIndex = function(index) {
		vmm.RemittanceOrder.OrderList.search.iPageIndex = index;
		vmm.RemittanceOrder.OrderList.search.StartTime = $filter('date')(vmm.RemittanceOrder.OrderList.search.StartTimeDate, "yyyy-MM-dd");
		vmm.RemittanceOrder.OrderList.search.EndTime = $filter('date')(vmm.RemittanceOrder.OrderList.search.EndTimeDate, "yyyy-MM-dd");
		getNotBussinessOtherOrderList(vmm.RemittanceOrder.OrderList.search, function(data) {
			vmm.RemittanceOrder.OrderList.count = data.count;
			vmm.RemittanceOrder.OrderList.list = data.list;
		});
	};

	$scope.searchOrderList = function() {
		vmm.RemittanceOrder.OrderList.search.iPageIndex = 1;
		vmm.RemittanceOrder.OrderList.search.StartTime = $filter('date')(vmm.RemittanceOrder.OrderList.search.StartTimeDate, "yyyy-MM-dd");
		vmm.RemittanceOrder.OrderList.search.EndTime = $filter('date')(vmm.RemittanceOrder.OrderList.search.EndTimeDate, "yyyy-MM-dd");
		getRemittanceOrderList(vmm.RemittanceOrder.OrderList.search, function(data) {
			vmm.RemittanceOrder.OrderList.count = data.count;
			vmm.RemittanceOrder.OrderList.list = data.list;
			var Maxindex = Math.ceil(vmm.RemittanceOrder.OrderList.count / vmm.RemittanceOrder.OrderList.search.iPageSize);
			if (Maxindex > 5) {
				vmm.RemittanceOrder.OrderList.Pages = [1, 2, 3, 4, 5];
			} else {
				vmm.RemittanceOrder.OrderList.Pages = [];
				for (var i = 1; i <= Maxindex; i++) {
					vmm.RemittanceOrder.OrderList.Pages.push(i);
				}
			}
		});
	};

	$scope.GetOrderList = function(otype) { //执行认领操作
		var orderids = [];
		$scope.updateModel.OrderList = [];
		var remittanceId = vmm._id;
		vmm.RemittanceOrder.OrderList.list.forEach(function(item) {
			if (item.isSelected) {
			    orderids.push(item._id);
				var oneOrder = {
					OrderNo: item.OrderNo,
					OrderTitle: item.ProductTitle,
					UnpaidOutMoney: item.TotalUnPayPrice,
					OrderID: item._id
				};
			    vmm.SumTotalFinalPrice += item.TotalUnPayPrice;
				$scope.updateModel.OrderList.push(oneOrder);
			}
		});
		var param = {
			orderids: JSON.stringify(orderids),
			remittanceId: remittanceId,
		};
		//存储
		$scope.SumbitBut = false;
		if (otype == 1) { //执行认领
			saveRemittanceOrder(param, function(data) {
				$scope.detailTipInfo = "汇款信息预领成功";
				$scope.detailTipInfoType = "success";
				$scope.SumbitBut = true;
				var viewId = $rootScope[switchType[2]].id;
				addRefreshPageByID(viewId);
				vmm.RemittanceOrder.isOrderRemittanceClaim = false;
				//刷新当前页面
			});

			function ReshPageList(list) {
				list.search.PageIndex = 1;
				list.search.StartTime = $filter('date')(vmm.RemittanceOrder.search.StartTimeDate, "yyyy-MM-dd");
				list.search.EndTime = $filter('date')(vmm.RemittanceOrder.search.EndTimeDate, "yyyy-MM-dd");
				OtherExpensesData(list.search, function(data) {
					$rootScope.showProcessBar = false;
					list.list = data.list;
				});
			}
		} else {
			$scope.updateModel.isOpenOrderMoreIn = false;
		}
	};

	$scope.updateRemittance = function() {
		var data = {
			"RequestData": JSON.stringify($scope.updateModel)
		};
		$scope.SumbitBut = false;
		saveAddRemittance(data, function(data) {
			$scope.detailTipInfo = "编辑信息操作成功";
			$scope.detailTipInfoType = "success";
			$scope.SumbitBut = true;
			$scope.updateModel.isRemittanceUpd = false;
			var viewId = $rootScope[switchType[2]].id;
			addRefreshPageByID(viewId);
			$scope.fetch("financeCenter/Remittance/List");
		});
	};

	$scope.closeUpdateRemittance = function() {
		$scope.updateModel.isRemittanceUpd = false;
	};

	$scope.ChangeRemitType = function() {
		if ($scope.updateModel.RemitType.ID == '2') {
			$scope.updateModel.IsShowOrderList = true;
		} else {
			$scope.updateModel.IsShowOrderList = false;
		}
	};
    
    //#region   地接款
    //#region   定义参数
	vmm.RemittanceGround = {};
	vmm.RemittanceGround.GroundList = [];
    //#endregion
	$scope.GroundList = function () { //认领--弹框--地接款列表--自己的收入成本>0
	    var param = {
	        SearchInfo: "",
	        StartTime: "",
	        Endtime: "",
	        iPageIndex: 1,
	        iPageSize: 5
	    };
	    vmm.RemittanceGround.GroundList.search = {

	    };
	    getRemittanceGroundList(param, function (data) {
	        vmm.RemittanceGround.GroundList.list = data.list;
	        vmm.RemittanceGround.GroundList.count = data.count;
	        var Maxindex = Math.ceil(vmm.RemittanceGround.GroundList.count / 5);
	        if (Maxindex > 5) {
	            vmm.RemittanceGround.GroundList.Pages = [1, 2, 3, 4, 5];
	        } else {
	            vmm.RemittanceGround.GroundList.Pages = [];
	            for (var i = 1; i <= Maxindex; i++) {
	                vmm.RemittanceGround.GroundList.Pages.push(i);
	            }
	        }
	        vmm.RemittanceGround.GroundList.search.iPageSize = 5;
	        vmm.RemittanceGround.GroundList.search.iPageIndex = 1;
	    });
	};
    
    $scope.GetGroundList = function() { //执行认领操作
        var grounds = [];
        var remittanceId = vmm._id;
        vmm.GroundList = [];
        vmm.RemittanceGround.GroundList.list.forEach(function (item) {
            if (item.isSelected) {
                grounds.push(item._id);
                var oneGround = {
                    _id: item._id,
                    Title : item.Title,
                    PayPrice : item.PayPrice,
                    GCOMP: item.GCOMP
                };
                vmm.SumTotalPayPrice += item.PayPrice;
                vmm.GroundList.push(oneGround);
            }
        });
        var param = {
            grounds: JSON.stringify(grounds),
            remittanceId: remittanceId,
        };
        //存储
        $scope.SumbitBut = false;
		$scope.SumbitBut = false; 
		//执行认领
		    saveRemittanceGround(param, function (data) {
		        $scope.detailTipInfo = "汇款信息预领成功";
		        $scope.detailTipInfoType = "success";
		        $scope.SumbitBut = true;
		        var viewId = $rootScope[switchType[2]].id;
		        addRefreshPageByID(viewId);
		        vmm.RemittanceGround.isGroundRemittanceClaim = false;
		        //刷新当前页面
		    });
		    $scope.updateModel.isOpenOrderMoreIn = false;
    };
    
	$scope.closeRemittanceGround = function () {
	    vmm.RemittanceClaimWindows.isGroundRemittanceClaim = false;
	    $scope.updateModel.isOpenOrderMoreIn = false;
	};
    //#endregion

}
//#endregion
app.controller("CensusGenerateCtrl", CensusGenerateCtrl);
app.controller("CensusListCtrl", CensusListCtrl);

function CensusGenerateCtrl($scope, $rootScope, $http, showErrorInfo, $filter, ngDialog, saveGenerateCensus) {
	var vm = $rootScope[position[1]].CensusGenerate;
	var fnc = this;
	if (typeof vm == "undefined") {
		vm = $rootScope[position[1]].CensusGenerate = {};
		//var vm = $rootScope[position[2]].CensusGenerate;
		vm.cur = -1;
		vm.curView = "";
		vm.curViewUrl = "";
		vm.cache = {};
		vm.listData = {};
		vm.showStartDatePicker = 0;
		vm.GenerateInfo = {};

		vm.viewLists = [{
			"title": "团队",
			"CensusType": "000000000000000000000001",
			"template": "PlanList",
			"detail": "PlanInfo",
			"status": ""
		}, {
			"title": "邮轮",
			"CensusType": "000000000000000000000018",
			"template": "PlanList",
			"detail": "PlanInfo",
			"status": ""
		}, {
			"title": "自由行",
			"CensusType": "12",
			"template": "OrderList",
			"detail": "OrderInfo",
			"status": ""
		}, {
			"title": "一团一议",
			"CensusType": "23",
			"template": "OrderList",
			"detail": "OrderInfo",
			"status": ""
		}, {
			"title": "自驾游",
			"CensusType": "13",
			"template": "OrderList",
			"detail": "OrderInfo",
			"status": ""
		}, {
			"title": "定制游",
			"CensusType": "17",
			"template": "OrderList",
			"detail": "OrderInfo",
			"status": ""
		}, {
			"title": "签证",
			"CensusType": "2",
			"template": "OrderList",
			"detail": "OrderInfo",
			"status": ""
		}, {
			"title": "门票",
			"CensusType": "3",
			"template": "OrderList",
			"detail": "OrderInfo",
			"status": ""
		}, {
			"title": "机票",
			"CensusType": "24",
			"template": "OrderList",
			"detail": "OrderInfo",
			"status": ""
		}, {
			"title": "地接",
			"CensusType": "9",
			"template": "OrderList",
			"detail": "OrderInfo",
			"status": ""
		}];
	}


	/**
	 * tab单击事件
	 * @return {[type]} [description]
	 */
	fnc.tab = function(index) {

		if (index == vm.cur || $rootScope.isloadList) return;

		var oldView = "",
			newView = "";

		if (vm.cur >= 0) {
			vm.viewLists[vm.cur].status = "";
			oldView = vm.viewLists[vm.cur].title;
		}

		vm.cur = index;
		vm.viewLists[vm.cur].status = "active";
		vm.CensusType = vm.viewLists[vm.cur].CensusType;
		if (vm.viewLists[vm.cur].template)
			vm.curView = vm.viewLists[vm.cur].template;
		else {
			vm.curView = "";
			vm.curViewUrl = "";
		}

		newView = vm.viewLists[vm.cur].title;
		fnc.switchView(newView, oldView);
	};

	/**
	 * 切换tab
	 * @return {[type]} [description]
	 */
	fnc.switchView = function(newView, oldView) {
		if (!newView) return;

		if (vm.cache[newView]) {
			vm.listData = vm.cache[newView];
		} else {
			vm.cache[newView] = {
				list: {},
				search: {
					"SearchInfo": "",
					"iPageIndex": 1,
					"iPageSize": pageLimit,
					"CensusType": vm.CensusType
				}
			};
			$rootScope.showProcessBar = true;
			vm.listLoading = true;
			vm.listData = vm.cache[newView];
			fnc.getData(function(data) {
				vm.cache[newView].list = data.data.list;
				if (vm.listData.search.iPageIndex >= Math.ceil(data.data.count / vm.listData.search.iPageSize)) {
					vm.listMax = true;
				} else {
					vm.listMax = false;
				}
				$rootScope.isloadList = false;
				vm.listLoading = false;
				$rootScope.showProcessBar = false;
			}, vm.cache[newView].search);
		}
	};

	/**
	 * 滚动加载
	 * @return {[type]} [description]
	 */
	fnc.loadList = function() {
		vm.listData.search.iPageIndex += 1;
		fnc.getData(function(data) {
			$rootScope.isloadList = false;
			if (vm.listData.search.iPageIndex >= Math.ceil(data.data.count / vm.listData.search.iPageSize)) {
				vm.listMax = true;
			} else {
				vm.listMax = false;
			}
			$rootScope.showProcessBar = false;
			vm.listData.list.push.apply(vm.listData.list, data.data.list);
		}, vm.listData.search);
	};

	/**
	 * 查询
	 * @return {[type]} [description]
	 */
	fnc.searchList = function() {
		$rootScope.showProcessBar = true;
		vm.listLoading = true;
		vm.listData.search.iPageIndex = 1;
		vm.listData.search.StartTime = $filter('date')(vm.listData.search.StartTimeDate, "yyyy-MM-dd");
		vm.listData.search.EndTime = $filter('date')(vm.listData.search.EndTimeDate, "yyyy-MM-dd");
		// vm.listData.search.PlanState = vm.listData.search.PlanState === "" ? 0 : vm.listData.search.PlanState;
		// vm.listData.search.IsIncludeOrder = vm.listData.search.IsIncludeOrder === "" ? 0 : vm.listData.search.IsIncludeOrder;
		// vm.listData.search.IsBuild = vm.listData.search.IsBuild === "" ? 0 : vm.listData.search.IsBuild;
		fnc.getData(function(data) {
			if (vm.listData.search.iPageIndex >= Math.ceil(data.data.count / vm.listData.search.iPageSize)) {
				vm.listMax = true;
			} else {
				vm.listMax = false;
			}
			$rootScope.isloadList = false;
			vm.listLoading = false;
			$rootScope.showProcessBar = false;
			vm.listData.list = data.data.list;
		}, vm.listData.search);
	};

	/**
	 * 全选
	 * @return {[type]} [description]
	 */
	fnc.checkAll = function() {
		if (vm.listData.checkAll) {
			vm.listData.list.forEach(function(member, key) {
				member.isSelected = true;
			});
		} else {
			vm.listData.list.forEach(function(member, key) {
				member.isSelected = false;
			});
		}
	};
	/**
	 * 生成三清单弹框
	 * @return {[type]} [description]
	 */
	fnc.buildCensus = function() {
		if (vm.curView == "PlanList") {
			vm.GenerateInfo.curView = "PlanInfo";
			var ProductPlanList = [];
			vm.listData.list.forEach(function(member, key) {
				if (member.isSelected) {
					ProductPlanList.push(member.ID);
					vm.GenerateInfo.Title = member.ProductName;
					vm.GenerateInfo.CensusTime = member.EndTime;
					vm.GenerateInfo.CensusTitle = member.ProductName;
				}
			});
			vm.GenerateInfo.ProductPlanList = JSON.stringify(ProductPlanList);
			if (ProductPlanList.length === 0) {
				showErrorInfo("请选择计划记录");
				return;
			}
		} else if (vm.curView == "OrderList") {
			var OrderList = [];
			vm.GenerateInfo.curView = "OrderInfo";
			vm.listData.list.forEach(function(member, key) {
				if (member.isSelected) {
					OrderList.push(member.ID);
					vm.GenerateInfo.Title = member.ProductTitle;
					vm.GenerateInfo.CensusTime = member.EndTime;
					vm.GenerateInfo.CensusTitle = member.ProductTitle;
				}
			});
			vm.GenerateInfo.OrderList = JSON.stringify(OrderList);
			if (OrderList.length === 0) {
				showErrorInfo("请选择订单记录");
				return;
			}
		}
		vm.GenerateInfo.CensusType = vm.CensusType;
		ngDialog.open({
			template: "/public/angularView/finances/Census/Generate.html",
			className: "w-500",
			controller: function($scope, saveGenerateCensus) {
				$scope.SumbitBut = true;
				$scope.saveGenerate = function() {
					$scope.SumbitBut = false;
					saveGenerateCensus(vm.GenerateInfo, function(data) {
						$scope.closeThisDialog('value');
						fnc.searchList();
					});
				};
			}
		});
	};


	/**
	 * 获取三清单生成计划和订单数据
	 * @return {[type]} [description]
	 */
	fnc.getData = function(callback, param) {
		var data = {};
		if (vm.viewLists[vm.cur].template == "PlanList") {
			data = {
				"SearchInfo": "",
				"iPageIndex": 1,
				"iPageSize": pageLimit,
				"CensusType": "",
				"StartTime": "",
				"EndTime": "",
				"PlanState": "1",
				"IsIncludeOrder": "1",
				"IsBuild": "1"
			};

		} else if (vm.viewLists[vm.cur].template == "OrderList") {
			data = {
				"SearchInfo": "",
				"iPageIndex": 1,
				"iPageSize": pageLimit,
				"CensusType": "",
				"StartTime": "",
				"EndTime": "",
				"IsBuild": "1"
			};
		}

		vm.listData.search = $.extend(data, param);

		HYhttp($http, {
			url: dreamFlyUrl + "Finance/FinanceCensus/GetCensus" + vm.viewLists[vm.cur].template,
			method: "POST",
			data: vm.listData.search
		}).then(function(response) {
			if (response.data.code >= 700 && response.data.code < 800) {
				angular.forEach(response.data.data.list, function(ele) {
					ele.detailUrl = "financeCenter/Census/Generate" + vm.viewLists[vm.cur].detail + "?ID=" + ele.ID;
				});
				callback(response.data);
			} else {
				showErrorInfo(response);
			}
		});
	};

	//默认加载第一个
	fnc.tab(0);
}

function CensusListCtrl($scope, $rootScope, $filter, getCensusList) {
	var ctrl = this;
	var vm = $rootScope[position[1]].CensusList;
	$rootScope.OPtype = '';
	if (vm.listData.search.iPageIndex >= Math.ceil(vm.listData.maxCount / vm.listData.search.iPageSize)) {
		vm.listMax = true;
	} else {
		vm.listMax = false;
	}
	ctrl.searchList = function() {
		$rootScope.showProcessBar = true;
		vm.listLoading = true;
		vm.listData.search.iPageIndex = 1;
		vm.listData.search.StartTime = $filter('date')(vm.listData.search.StartTimeDate, "yyyy-MM-dd");
		vm.listData.search.EndTime = $filter('date')(vm.listData.search.EndTimeDate, "yyyy-MM-dd");
		getCensusList(vm.listData.search, function(data) {
			if (vm.listData.search.iPageIndex >= Math.ceil(data.CensusList.listData.maxCount / vm.listData.search.iPageSize)) {
				vm.listMax = true;
			} else {
				vm.listMax = false;
			}
			vm.listLoading = false;
			$rootScope.isloadList = false;
			$rootScope.showProcessBar = false;
			vm.listData.list = data.CensusList.listData.list;
		});
	};


	ctrl.loadList = function() {
		$rootScope.showProcessBar = true;
		vm.listLoading = true;
		vm.listData.search.iPageIndex += 1;
		getCensusList(vm.listData.search, function(data) {
			if (vm.listData.search.iPageIndex >= Math.ceil(data.CensusList.listData.maxCount / vm.listData.search.iPageSize)) {
				vm.listMax = true;
			} else {
				vm.listMax = false;
			}
			vm.listLoading = false;
			$rootScope.isloadList = false;
			$rootScope.showProcessBar = false;
			vm.listData.list.push.apply(vm.listData.list, data.CensusList.listData.list);
		});
	};
}
/**
 * Created by chen on 2016/3/16.
 * 订单预付款撤回列表 控制器
 */
angular.module("HY").controller("OAdvanceRevokerController", OAdvanceRevokeController);

function OAdvanceRevokeController(getAdvanceRevokeList,setReturnRevoke,showWarningBox, $scope,$rootScope,$filter,closeSubView) {
  var vm = this;

  vm.ETimeType = [{
    'value': 1,
    'name': '申请日期'
  }, {
    'value': 2,
    'name': '收款日期'
  }];

  vm.ETimeTypes = [{
    'value': 1,
    'name': '申请日期'
  }, {
    'value': 2,
    'name': '撤销日期'
  }];

  vm.page = 1;
  vm.pageSize = 20;
  //vm.navTabType='AdvanceRevoke';//nav类型
  $rootScope.mainData.navTabType='AdvanceRevoke';//nav类型
  vm.RType=$rootScope.mainData.RType;//撤销类型
  vm.editLink = "financeCenter/OAdvanceRevoke/detail"; //订单预付款撤回详细信息

  vm.template = {};
  vm.templateBasicUrl = "/public/angularView/finances/business/";
  vm.template.BusinessNavTab = vm.templateBasicUrl + "OBusinessNavTab.html"; //撤销列表的搜索条件
  vm.template.RevokeList = vm.templateBasicUrl + "OFRevokeList.html"; //撤销列表框(订单预约款撤回，订单暂借款撤回)
  vm.template.GrideRevokeList = vm.templateBasicUrl + "OFGrideRevokeList.html"; //撤销列表框(导游预领撤回)
  vm.template.RevokeBaseInfo = vm.templateBasicUrl + "OAdvanceBaseInfo.html"; //撤销详情页的预付款信息
  //vm.template.WriteOffInfo = vm.templateBasicUrl + "OAdvanceWriteOffInfo.html"; //撤销详情页的核销信息
  vm.searchList = searchList;
  vm.returnRevoke=returnRevoke;//撤销退回
  //vm.fetch = fetch;
  vm.searchSubmit = searchSubmit;
  var filters =$rootScope[position[1]].filter;
  if(typeof filters == "undefined"){
    //关键字，时间搜索，撤销状态，部门
    $rootScope[position[1]].filter = {
      TimeType: 1, //时间搜索类型
      ConditionField: "FinanceTitle"
    };
  }

  //vm.filter = {}; //关键字，时间搜索，撤销状态，部门
  vm.Departments = $rootScope.Departments; //部门

  vm.datepickerOptions = {
    playStartTime: {
      minDate: Date.now()
    },
    playEndTime: {
      minDate: Date.now()
    }
  };

  $scope.$watch("mainData.RType",getNavTabType);

  function getNavTabType(){
    console.log(vm.RType);
    if($rootScope.mainData.RType){
      switch ($rootScope.mainData.RType){
        case 'Advance':{
          $rootScope.mainData.navTabType='AdvanceRevoke';
          //vm.navTabType='AdvanceRevoke';
          vm.RType='Advance';
          break;
        }
        case 'Temporary':{
          $rootScope.mainData.navTabType='TemporaryRevoke';
          //vm.navTabType='TemporaryRevoke';
          vm.RType='Temporary';
          break;
        }
        default:{
          $rootScope.mainData.navTabType='GridePreCollarRevoke';
          //vm.navTabType='GridePreCollarRevoke';
          vm.RType='GridePreCollar';
          break;
        }
      }
    }

  }

  /*搜索列表*/
  function searchList(scrolling) {

    if($scope.mainData.allPageCount===undefined){
      $scope.mainData.allPageCount=$scope.mainData.pageCount;
    }

    vm.listLoading = true;
    if (scrolling === undefined) {
      vm.page = 1;
      vm.listMax = false;
      /*$rootScope.isloadList = true;
      $rootScope.showProcessBar = true;*/
      $scope.mainData.list = [];
    } else {
      if ($scope.mainData.allPageCount == 1||vm.page == $scope.mainData.allPageCount) {
        vm.listLoading=false;
        vm.listMax = true;
        $rootScope.isloadList = false;
        $rootScope.showProcessBar = false;
        return;
      }
      vm.page += 1;
    }

    var search = getInput($rootScope[position[1]].filter);
    if (!vm.listMax) {
      getAdvanceRevokeList(search, changeScope);
    } else {
      vm.listLoading = false;
      $rootScope.isloadList = false;
      $rootScope.showProcessBar = false;
     /* if ($scope.mainData.allPageCount == 1) {
        vm.listLoading = false;
        $rootScope.isloadList = false;
        $rootScope.showProcessBar = false;
      }*/

    }

    /*组合搜索条件*/
    function getInput(filter) {
      /*
       * iPageIndex 第几页；iPageSize 每页显示的数量
       * Field 搜索条件字段类型 FinanceTitle = 申请名称，FinanceCompanyName = 结算单位，BelongUser = 申请人（计调），FinanceNo = 申请编号
       * FinanceType 撤销类型 28 预付款；29 暂借款
       * SearchInfo 搜索关键词
       * STime 撤销时间搜索开始
       * ETime 撤销时间搜索结束
       * ErificationStatus 撤销状态
       * DeptId 部门id
       * */
      var data = {
        iPageIndex: vm.page,
        iPageSize: vm.pageSize,
        RType:vm.RType
      };
      //console.log(JSON.stringify(filter));
      //关键词
      if (filter.keyword) {
        data.SearchInfo = filter.keyword;
      }
      //搜索条件字段类型
      if (filter.ConditionField) {
        data.Field = filter.ConditionField;
      }
      //时间搜索类型
      if (filter.TimeType) {
        data.TimeType = filter.TimeType;
      }
      //撤销时间搜索开始
      if (filter.startDate) {
        data.STime = $filter("date")(filter.startDate, "yyyy-MM-dd");
      }
      //撤销时间搜索结束
      if (filter.endDate) {
        data.ETime = $filter("date")(filter.endDate, "yyyy-MM-dd");
      }
      //撤销状态
      if (filter.ErificationStatus) {
        data.PayStatus = filter.ErificationStatus;
      }
      //部门id
      if (filter.DeptId) {
        data.DeptId = filter.DeptId;
      }
     // console.log(JSON.stringify(data));
      return data;
    }

    function changeScope(data) {
      $scope.mainData.list = _.union($scope.mainData.list, data.list);
      $scope.mainData.allPageCount = data.pageCount;
      if (vm.page == $scope.mainData.allPageCount) {
        vm.listMax = true;
      }
      vm.listLoading = false;
      $rootScope.isloadList = false;
      $rootScope.showProcessBar = false;
    }
  }

  /*输入框内容按下回车*/
  function searchSubmit(keyEvent) {
    if (keyEvent.which === 13) {
      vm.searchList();
    }
  }

  //订单预付款，订单暂借款撤销退回
  function returnRevoke(revokeID){
    var showTitle =vm.RType=='Advance'?'是否确定退回订单预付款撤回':(vm.RType=='Temporary'?'是否确定退回订单暂借款撤回':'是否确定退回预约详情');
    showWarningBox(showTitle,function(){
       var param={
         RType:vm.RType,
         id:revokeID
       };
        setReturnRevoke(param,function(response){
          console.log(response);
          if (response.code >= 700 && response.code < 800) {
            vm.detailTipInfo = "退回成功";
            changeScope();
            closeSubView();
          } else {
            vm.detailTipInfo = "退回失败";
            vm.detailTipInfoType = "error";
          }
        });
    });

    function changeScope(){
      var item = _.filter($scope.mainData.list, function(i) {
        return i._id == revokeID;
      });
      $scope.mainData.list = _.without($scope.mainData.list, item[0]);
    }
  }

  /*枚举状态*/
  vm.RevokeStates = [{
    'value': 1,
    'name': '未确认'
  }, {
    'value': 2,
    'name': '已确认'
  }];


}
/**
 * Created by chen on 2016/4/7.
 * 导游预领 控制器
 */
angular.module("HY").controller("financeGuidePreCollarController", fGuidePreCollarController);

function fGuidePreCollarController(getFinanceGuidePreCollarList, getFinanceGuidePreCollarInfo, getTeamList, GuidePreCollarUpdate,
  RevokeGuidePreCollarPrice, deleteGuidePreCollar, $scope, $rootScope, $filter, ngDialog, Pagination, openSubView, showWarningBox, closeSubView, backAuditFinance, auditFinance, addRefreshPageByID) {
  var vm = this;
  var dataInfo = $rootScope[position[2]];
  dataInfo.AuditBack = {};
  vm.template = {};
  vm.template.BusinessNavTab = "/public/angularView/finances/business/OBusinessNavTab.html"; //导航切换
  /*vm.filter = {};
  vm.filter.TimeType = 1;*/
  var filters = $rootScope[position[1]].filter;
  if (typeof filters == "undefined") {
    //console.log("fdfd");
    $rootScope[position[1]].filter = {
      TimeType: 1, //时间搜索类型
      ConditionField: "PayPrice"
    };
  }
  vm.teamFilter = {}; //搜索团队条件
  vm.searchList = searchList;
  vm.searchTeam = searchTeam; //搜索团队
  vm.searchSubmit = searchSubmit;
  vm.searchTeamSubmit = searchTeamSubmit; //输入关键词搜索团队
  vm.choseTeam = choseTeam; //选择团队
  vm.page = 1;
  vm.pageSize = 20;
  vm.teamPage = 1;
  vm.teamPageSize = 5;
  vm.showAddDiv = showAddDiv; //跳转到添加页面

  vm.add = {};
  vm.fDetailPage = 1; //明细列表页数
  vm.fDetailPageSize = 5; //明细列表一页娴熟的数量
  vm.fDetailOneInfo = {
    // popoverIsOpen:true
  }; //单条添加财务明细
  //$rootScope[position[2]]
  vm.fDetailEditInfo = {}; //编辑时候的信息
  $rootScope[position[2]].financeDetailListInfo = []; //当页财务明细列表
  $rootScope[position[2]].FinanceDetailAllList = []; //财务明细总的列表
  vm.addFinanceDetailList = addFinanceDetailList; //财务明细单挑数据保存到财务明细列表中
  vm.financeDetailPaging = financeDetailPaging; //财务明细分页
  vm.editFinanceDetail = editFinanceDetail; //编辑显示单挑财务明细
  vm.saveGuidePreCollar = saveGuidePreCollar; //保存导游预领信息，提交数据库
  vm.financeDetailHotel = new Pagination(
    $rootScope[position[2]].FinanceDetailAllList.length, vm.fDetailPageSize
  );
  vm.deleteFinanceDetail = deleteFinanceDetail; //删除财务明细
  vm.deleteGuidePreCollarFun = deleteGuidePreCollarFun; //删除导游预领
  vm.saveFinanceDetail = saveFinanceDetail;
  vm.Withdraw = {
    popoverIsOpen: false
  }; //导游预领撤回信息
  vm.gpcWithdrawRetract = gpcWithdrawRetract; //提交撤回信息
  $scope.mainData.navTabType = 'guidePreCollar';


  /*function delFinance(item) {
      vm.financeDetailListInfo = _.without(financeDetailListInfo, item);
  }*/

  if ($rootScope[position[2]].operationMode == 'show') {
    $rootScope[position[2]].FinanceDetailAllList = $scope.detailData.FinanceDetailList;
    var surplusRevokeMoney = $scope.detailData.WaitVerificationMoney - $scope.detailData.WaitRevokeMoney;
    if ($scope.detailData.PayStatus == 2 && surplusRevokeMoney > 0) {
      vm.Withdraw.showRetract = true;
      $scope.detailData.surplusRevokeMoney = surplusRevokeMoney; //当前最大申请撤回金额
      vm.Withdraw.RetractPrice = surplusRevokeMoney; //撤回金额默认为最大撤回金额
    }
    if ($scope.detailData.PayStatus != 2 && ($scope.detailData.FeeAuditStatus == 1 || $scope.detailData.FeeAuditStatus == 4 ||
        $scope.detailData.FeeAuditStatus == 5 || $scope.detailData.FeeAuditStatus == 6)) {
      $scope.detailData.showDelete = true;
    }
    if ($rootScope[position[2]].FinanceDetailAllList !== undefined) {
      recombinationList();
    }
  }

  function showFinanceOrderInfo() {
    $rootScope[position[2]].FinanceDetailAllList = $scope.detailData.FinanceDetailList;
    recombinationList();
  }

  function searchList(scrolling) {
    if ($scope.mainData.allPageCount === undefined) {
      $scope.mainData.allPageCount = $scope.mainData.pageCount;
    }

    vm.listLoading = true;
    if (scrolling === undefined) {
      vm.page = 1;
      vm.listMax = false;
      $scope.mainData.list = [];
    } else {
      if ($scope.mainData.allPageCount == 1 || vm.page == $scope.mainData.allPageCount) {
        vm.listLoading = false;
        $rootScope.isloadList = false;
        $rootScope.showProcessBar = false;
        return;
      }
      vm.page += 1;
    }

    var search = getInput($rootScope[position[1]].filter);
    if (!vm.listMax) {
      getFinanceGuidePreCollarList(search, changeScopte);
    } else {
      vm.listLoading = false;
      $rootScope.isloadList = false;
      $rootScope.showProcessBar = false;
    }

    function getInput(filter) {
      /*
       * SearchInfo 关键词搜索
       * Field 搜索条件字段类型 PayPrice = 申请金额，TeamNo = 团队编号，BelongUser = 申请人（计调），FinanceTitle = 申请名称
       * TimeType 时间搜索类型 1:创建时间,2:财务时间,3:发团时间
       * STime 搜索开始时间，ETime 搜索结束时间
       * PayStatus 支付状态 1未确认，2已确认
       * AuditStatus 审核状态 发起审核 = 1,审核处理中 = 2,审核通过 = 3,审核退回 = 4,审核失败 = 5,流程取消 = 6
       * ReimbursementStatus 是否报账 0:未报帐；1:已报账
       * DepartmentID 部门id
       * */
      var data = {
        iPageIndex: vm.page,
        iPageSize: vm.pageSize
      };
      //关键词
      if (filter.SearchInfo) {
        data.SearchInfo = filter.SearchInfo;
      }
      //搜索条件字段类型
      if (filter.ConditionField) {
        data.Field = filter.ConditionField;
      }
      //时间搜索类型
      if (filter.TimeType) {
        data.TimeType = filter.TimeType;
      }
      //搜索开始时间
      if (filter.STime) {
        data.STime = $filter("date")(filter.STime, "yyyy-MM-dd");
      }
      //搜索结束时间
      if (filter.ETime) {
        data.ETime = $filter("date")(filter.ETime, "yyyy-MM-dd");
      }
      //支付状态
      if (filter.PayStatus) {
        data.PayStatus = filter.PayStatus;
      }
      //审核状态
      if (filter.AuditStatus) {
        data.AuditStatus = filter.AuditStatus;
      }
      //是否报账
      if (filter.ReimbursementStatus) {
        data.ReimbursementStatus = filter.ReimbursementStatus;
      }
      //部门id
      if (filter.DepartmentID) {
        data.DepartmentID = filter.DepartmentID;
      }
      return data;
    }

    function changeScopte(data) {
      $scope.mainData.list = _.union($scope.mainData.list, data.list);
      $scope.mainData.allPageCount = data.pageCount;
      if (vm.page == $scope.mainData.allPageCount) {
        vm.listMax = true;
      }
      vm.listLoading = false;
      $rootScope.isloadList = false;
      $rootScope.showProcessBar = false;
    }
  }

  /*输入框内容按下回车*/
  function searchSubmit(keyEvent) {
    if (keyEvent.which == 13) {
      vm.searchList();
    }
  }

  /*选择团队*/
  function choseTeam() {
    searchTeam();
    ngDialog.open({
      className: 'big',
      template: '/public/angularView/finances/guidePreCollar/guidePreCollarTeam.html?' + Math.random(),
      data: {}
    });
  }

  /*搜索团队*/
  function searchTeam(page) {
    if (page === undefined) {
      vm.teamPage = 1;
    } else {
      vm.teamPage = page;
    }
    var search = getTeamInput(vm.teamFilter);

    getTeamList(search, changeScopteFilter);

    function getTeamInput(teamFilter) {
      var data = {
        iPageIndex: vm.teamPage,
        iPageSize: vm.teamPageSize
      };
      //关键词
      if (teamFilter.SearchInfo) {
        data.SearchInfo = teamFilter.SearchInfo;
      }
      //搜索开始时间
      if (teamFilter.StartTime) {
        data.StartTime = $filter("date")(teamFilter.StartTime, "yyyy-MM-dd");
      }
      //搜搜结束时间
      if (teamFilter.EndTime) {
        data.EndTime = $filter("date")(teamFilter.EndTime, "yyyy-MM-dd");
      }
      //部门id
      if (teamFilter.DeptID) {
        data.DeptID = teamFilter.DeptID;
      }
      //团队类型
      if (teamFilter.TeamType) {
        data.TeamType = teamFilter.TeamType;
      }
      //团队状态
      if (teamFilter.TeamStatus) {
        data.TeamStatus = teamFilter.TeamStatus;
      }
      return data;
    }

    function changeScopteFilter(data) {
      $scope.mainData.TeamList = data.list;
      $scope.mainData.TeamHotel = new Pagination(
        data.count, vm.teamPage
      );
    }
  }

  function searchTeamSubmit(keyEvent) {
    if (keyEvent.which == 13) {
      vm.searchTeam();
    }
  }

  //跳转到添加页面
  function showAddDiv(teamID) {
    $scope.fetch('financeCenter/financeGuidePreCollar/Add?TeamID=' + teamID);
    openSubView();
  }

  //财务明细单挑数据保存到财务明细列表中
  function addFinanceDetailList() {
    if (checkInput()) {
      var _oneFD = {
        FeeDataID: vm.fDetailOneInfo.FeeDataID,
        FeeName: vm.fDetailOneInfo.FeeName,
        Quantity: vm.fDetailOneInfo.Quantity,
        SingePrice: vm.fDetailOneInfo.SingePrice,
        FeeNotes: vm.fDetailOneInfo.FeeNotes
      };
      $rootScope[position[2]].FinanceDetailAllList.push(_oneFD); //开头天添加unshift
      vm.fDetailOneInfo = {};
      recombinationList();
    }

    /*function recombinationList() {
      var start = (vm.fDetailPage - 1) * vm.fDetailPageSize;
      vm.financeDetailListInfo = vm.FinanceDetailAllList.slice(start, start + vm.fDetailPageSize);
      vm.financeDetailHotel = new Pagination(
        vm.FinanceDetailAllList.length, vm.fDetailPage
      );
    }*/

    function checkInput() {
      var flag = true;
      var requiredList = ['FeeName', 'Quantity', 'SingePrice', 'FeeNotes'];
      for (var item in requiredList) {
        if (vm.financeDetailAdd[requiredList[item]].$error.required) {
          flag = false;
          vm.detailTipInfo = "预领信息需求填写不完整";
          vm.detailTipInfoType = "error";
          break;
        } else {
          flag = true;
        }
      }
      return flag;
    }
  }

  /*点击编辑，把当前数据显示编辑框中*/
  function editFinanceDetail(item) {
    vm.fDetailEditInfo = angular.copy(item);
  }

  /*修改数据保存到原始数据*/
  function saveFinanceDetail(item) {
    if (checkInput()) {
      item = angular.extend(item, vm.fDetailEditInfo);
      item.popoverIsOpen = false;
      vm.fDetailEditInfo = {};
    }

    function checkInput() {
      var flag = true;
      var requiredList = ['FeeName', 'Quantity', 'SingePrice', 'FeeNotes'];
      for (var item in requiredList) {
        if (vm.financeDetailEdit[requiredList[item]].$error.required) {
          flag = false;
          vm.detailTipInfo = "预领信息需求填写不完整";
          vm.detailTipInfoType = "error";
          break;
        } else {
          flag = true;
        }
      }
      return flag;
    }
  }

  /*删除财务明细列表中某个元素*/
  function deleteFinanceDetail(item) {
    $rootScope[position[2]].FinanceDetailAllList = _.without($rootScope[position[2]].FinanceDetailAllList, item);
    recombinationList();

    /*function recombinationList() {
      var allPageCount = Math.ceil(vm.FinanceDetailAllList % vm.fDetailPageSize); //最大分页
      vm.fDetailPage = vm.fDetailPage < 0 ? 1 : (vm.fDetailPage > allPageCount ? allPageCount : vm.fDetailPage);
      var start = (vm.fDetailPage - 1) * vm.fDetailPageSize;
      vm.financeDetailListInfo = vm.FinanceDetailAllList.slice(start, start + vm.fDetailPageSize);
      vm.financeDetailHotel = new Pagination(
        vm.FinanceDetailAllList.length, vm.fDetailPage
      );
    }*/
  }

  function recombinationList() {
    var allPageCount = Math.ceil($rootScope[position[2]].FinanceDetailAllList % vm.fDetailPageSize); //最大分页
    vm.fDetailPage = vm.fDetailPage < 0 ? 1 : (vm.fDetailPage > allPageCount ? allPageCount : vm.fDetailPage);
    var start = (vm.fDetailPage - 1) * vm.fDetailPageSize;
    $rootScope[position[2]].financeDetailListInfo = $rootScope[position[2]].FinanceDetailAllList.slice(start, start + vm.fDetailPageSize);
    vm.financeDetailHotel = new Pagination(
      $rootScope[position[2]].FinanceDetailAllList.length, vm.fDetailPage
    );
  }

  //财务明细列表分页
  function financeDetailPaging(page) {
    if (page === undefined) {
      vm.fDetailPage = 1;
    } else {
      vm.fDetailPage = page;
    }
    var start = (vm.fDetailPage - 1) * vm.fDetailPageSize;
    $rootScope[position[2]].financeDetailListInfo = $rootScope[position[2]].FinanceDetailAllList.slice(start, start + vm.fDetailPageSize);
  }

  /*保存导游预领*/
  function saveGuidePreCollar() {
    if ($rootScope[position[2]].FinanceDetailAllList.length > 0) {
      vm.detailTipInfo = "正在保存导游预领信息...";
      vm.detailTipInfoType = "info";
      var param = {
        "FinanceID": $scope.detailData.FinanceID,
        "TeamID": $scope.detailData.TeamID,
        "FeeReimbursement": JSON.stringify($rootScope[position[2]].FinanceDetailAllList)
      };
      console.log(JSON.stringify(param));
      GuidePreCollarUpdate(param, function(response) {
        vm.detailTipInfo = "已经保存导游预领信息";
        vm.detailTipInfoType = "success";
        if (dataInfo.OPtype == "Audit") {
          var audit = _.find($rootScope[position[1]].list, function(item) {
            if (item.detail.businessID == dataInfo.FinanceID && item.subType == dataInfo.subType && item.targetId == dataInfo.targetID && item._id.$id == dataInfo.itemID)
              return true;
          });
          audit.isHandled = true;
        } else {
          savaToScope(response);
        }
        closeSubView();
        //vm.Withdraw.popoverIsOpen = false;
      });
    } else {
      vm.detailTipInfo = "请先申请导游预领金";
      vm.detailTipInfoType = "error";
    }

    function savaToScope(response) {
      var _finance = _.find($rootScope[position[1]].list, function(item) {
        if (item.FinanceID == response._id)
          return true;
      });
      if (_finance === undefined) {
        _finance = {
          "FinanceID": response._id,
          "TeamNo": response.TeamInfo.TeamNo,
          "TeamTitle": response.TeamInfo.TeamTitle,
          "TeamStartTime": response.TeamInfo.TeamStartTime,
          "ChangePrice": response.ChangePrice,
          "VerificationMoney": response.VerificationMoney,
          "PayPrice": response.PayPrice,
          "AuditStatus": response.AuditStatus,
          "FinancialTime": response.FinancialTime,
          "BelongID": response.Belong === undefined ? "" : response.Belong.ForeignKeyID,
          "BelongName": response.Belong === undefined ? "" : response.Belong.EmployeeName
        };
        $scope.mainData.list.unshift(_finance);
      } else {
        _finance.ChangePrice = response.ChangePrice;
        _finance.VerificationMoney = response.VerificationMoney;
        _finance.PayPrice = response.PayPrice;
        _finance.AuditStatus = response.AuditStatus;
      }
    }
  }

  /*删除导游预领*/
  function deleteGuidePreCollarFun() {
    var financeID = $scope.detailData.FinanceID; //导游预领id
    showWarningBox("确定要删除此导游预领？", activate);

    function activate() {
      deleteGuidePreCollar(financeID, function(response) {
        if (response.code >= 700 && response.code < 800) {
          vm.detailTipInfo = "删除成功";
          changeScope();
          closeSubView();
        } else {
          vm.detailTipInfo = "删除失败";
          vm.detailTipInfoType = "error";
        }
      });
    }

    function changeScope() {
      var item = _.filter($scope.mainData.list, function(i) {
        return i.FinanceID == financeID;
      });
      $scope.mainData.list = _.without($scope.mainData.list, item[0]);
    }
  }

  /*导游预领提交撤回信息*/
  function gpcWithdrawRetract() {
    if (checkInput()) {
      var param = {
        "FinanceID": $scope.detailData.FinanceID,
        "RevokePrice": vm.Withdraw.RetractPrice,
        "Notes": vm.Withdraw.Notes
      };
      vm.detailTipInfo = "正在保存撤回信息...";
      vm.detailTipInfoType = "info";
      RevokeGuidePreCollarPrice(param, function(response) {
        vm.detailTipInfo = "已经保存撤回信息";
        vm.detailTipInfoType = "success";
        //savaToScope(response.data);//导游预领撤回之后是否需要修改数据 WaitRevokeMoney
        $scope.detailData.WaitRevokeMoney = $scope.detailData.WaitRevokeMoney - vm.Withdraw.RetractPrice;
        var surplusRevokeMoney = $scope.detailData.WaitVerificationMoney - $scope.detailData.WaitRevokeMoney;
        vm.Withdraw = {};
        if (surplusRevokeMoney > 0) {
          vm.Withdraw.showRetract = true;
          $scope.detailData.surplusRevokeMoney = surplusRevokeMoney; //当前最大申请撤回金额
          vm.Withdraw.RetractPrice = surplusRevokeMoney; //撤回金额默认为最大撤回金额
        }
        vm.Withdraw.popoverIsOpen = false;
      });
    }

    function checkInput() {
      var flag = true;
      var requiredList = ['RetractPrice', 'Notes'];
      for (var item in requiredList) {
        console.log(requiredList[item]);
        flag = checkEmptyList(requiredList[item]);
        if (flag === false) {
          vm.detailTipInfo = "申请撤回需求填写不完整";
          vm.detailTipInfoType = "error";
          break;
        }
      }
      return flag;
    }

    function checkEmptyList(item) {
      if (vm.gpcWithdraw[item].$error.required) {
        return false;
      } else {
        return true;
      }
    }
  }

  //导游预领明细总价
  $scope.$watch('detailData.FinanceDetailAllList', function(value) {
    if (value !== undefined) {
      $rootScope[position[2]].fDetailTotalPrice = 0;
      value.forEach(function(item) {
        $rootScope[position[2]].fDetailTotalPrice += item.Quantity * item.SingePrice;
      });
    }
  }, true);


  /*审核通过*/
  $scope.auditFinanceGuidePreCollar = function() {
    showWarningBox("是否审核导游预领通过,下一步流程(" + dataInfo.nextStepName + ")", function() {
      var param = {
        FinanceID: dataInfo.FinanceID
      };
      vm.detailTipInfo = "导游预领通过审核中。。。";
      vm.detailTipInfoType = "warning";
      $rootScope.showProcessBar = true;
      auditFinance(param, function(detail) {
        var viewId = $rootScope[switchType[2]].id;
        addRefreshPageByID(viewId);
        vm.detailTipInfo = "导游预领通过审核成功";
        vm.detailTipInfoType = "success";
        $rootScope.showSubView = false;
        $rootScope.showProcessBar = false;
        var audit = _.find($rootScope[position[1]].list, function(item) {
          if (item.detail.businessID == param.FinanceID && item.subType == dataInfo.subType && item.targetId == dataInfo.targetID && item._id.$id == dataInfo.itemID)
            return true;
        });
        audit.isHandled = true;
      });
    });
  };
  /*审核退回弹框*/
  $scope.openBackAuditFinanceGuidePreCollar = function() {
    dataInfo.AuditBack.BussinessID = dataInfo.FinanceID;
    dataInfo.AuditBack.User = dataInfo.Belong;
    dataInfo.AuditBack.Title = "导游预领";
    dataInfo.AuditBack.Notes = "";
  };
  /*审核退回*/
  $scope.backAudit = function() {
    showWarningBox("是否退回导游预领", function() {
      var param = {
        FinanceID: dataInfo.AuditBack.BussinessID,
        Notes: dataInfo.AuditBack.Notes
      };
      vm.detailTipInfo = "导游预领退回中。。。";
      vm.detailTipInfoType = "warning";
      $rootScope.showProcessBar = true;
      backAuditFinance(param, function(detail) {
        var viewId = $rootScope[switchType[2]].id;
        addRefreshPageByID(viewId);
        vm.detailTipInfo = "导游预领退回成功";
        vm.detailTipInfoType = "success";
        $rootScope.showSubView = false;
        $rootScope.showProcessBar = false;
        var audit = _.find($rootScope[position[1]].list, function(item) {
          if (item.detail.businessID == param.FinanceID && item.subType == dataInfo.subType && item.targetId == dataInfo.targetID && item._id.$id == dataInfo.itemID)
            return true;
        });
        audit.isHandled = true;
      });
    });
  };
  /*导游报账时间类型*/
  vm.EGuideReimbursementTimeTypes = [{
    'value': 1,
    'name': '创建时间'
  }, {
    'value': 2,
    'name': '财务时间'
  }, {
    'value': 3,
    'name': '发团时间'
  }];

  /*财务确认状态 支付状态*/
  vm.EPayStatus = [{
    'value': 1,
    'name': '未确认'
  }, {
    'value': 2,
    'name': '已确认'
  }];

  /*审核状态*/
  vm.EAuditStatus = [{
    'value': 1,
    'name': '发起'
  }, {
    'value': 2,
    'name': '处理中'
  }, {
    'value': 3,
    'name': '通过'
  }, {
    'value': 4,
    'name': '退回'
  }, {
    'value': 5,
    'name': '失败'
  }, {
    'value': 6,
    'name': '取消'
  }];

  vm.EGuideReimStatus = [{
    'value': 1,
    'name': '未报账'
  }, {
    'value': 2,
    'name': '已报账'
  }];
}
﻿
angular.module("HY").controller("financeOrderAdvanceController", fOrderAdvanceController);

function fOrderAdvanceController(getFinanceOrderAdvanceList, getFinanceOrderAdvanceInfo, getFOrderThreeSingleList, financeAdvanceAdd,
  deleteFOrderAdvance, getManagerPersonnel, $scope, $rootScope, $filter, ngDialog, Pagination, openSubView,
  showWarningBox, closeSubView, addRefreshPageByID, financeAdvanceRetract, auditFinance, backAuditFinance) {
  var vm = this;
  var dataInfo = $rootScope[position[2]];
  var editInfo = $rootScope.editInfo;
  dataInfo.AuditBack = {};
  vm.page = 1;
  vm.pageSize = 20;
  vm.threePage = 1;
  vm.threePageSize = 5;
  /*$rootScope.mainData.navTabType = "OrderAdvance"; //nav类型*/
  vm.editLink = "financeCenter/financeOrderAdvance/financeOrderAdvanceInfo"; //订单预付款 暂借款详情
  vm.template = {};
  vm.templateBasicUrl = "/public/angularView/finances/FinanceOrderAdvance/";
  vm.template.BusinessNavTab = "/public/angularView/finances/business/OBusinessNavTab.html"; //导航切换
  vm.template.OrderAdvanceList = vm.templateBasicUrl + "FinanceOrderAdvanceList.html"; //订单预付款
  vm.template.OrderBorrowList = vm.templateBasicUrl + "FinanceOrderBorrowList.html"; //订单暂借款
  vm.addOrderBorrowAddUrl = "financeCenter/financeOrderAdvance/financeOrderBorrowAdd"; //添加订单暂借款url
  vm.searchList = searchList;
  vm.searchSubmit = searchSubmit;
  vm.choseThreeSingle = choseThreeSingle; //选择三清单
  vm.searchThreeSingle = searchThreeSingle; //搜索三清单
  vm.searchThreeSingleSubmit = searchThreeSingleSubmit;
  vm.page = 1;

  /*vm.filter = {};
  vm.filter.TimeType = 1;*/
  vm.threeSingleFilter = {}; //选择三清单条件
  vm.showAddDiv = showAddDiv;
  vm.closeOrderAddDiv = closeOrderAddDiv;
  vm.submitOrderAdvanceAdd = submitOrderAdvanceAdd;
  vm.deleteOrderAdvanceFun = deleteOrderAdvanceFun; //删除订单预付款，删除订单暂借款
  vm.add = {}; //添加订单预付款、订单暂借款信息
  $rootScope[position[2]].Withdraw = {
    popoverIsOpen: false
  }; //订单撤回信息
  /*vm.Withdraw = {
  	popoverIsOpen: false
  }; //订单撤回信息*/
  vm.getManagerPersonnelFun = getManagerPersonnelFun; //获取人员
  vm.fAdvanceRetract = fAdvanceRetract; //提交撤回信息
  vm.datepickerOptions = {
    playStartTime: {
      minDate: Date.now()
    },
    playEndTime: {
      minDate: Date.now()
    }
  };

  vm.add.GCOMP = {};
  $scope.arrowConf = {
    left: 140,
    useArrow: true
  };
  $scope.popConf = {
    left: 20,
    position: "bottom"
  };

  var filters = $rootScope[position[1]].filter;
  if (typeof filters == "undefined") {
    console.log("fdfd");
    $rootScope[position[1]].filter = {
      TimeType: 1,
      ConditionField: "PayPrice"
    };
  }

  //getNavTabType();
  $scope.$watch("mainData.FinanceType", function(value) {
    if (value) {
      getNavTabType();
    }
  });

  function getNavTabType() {
    console.log($rootScope[position[2]]);
    if ($rootScope.mainData.FinanceType == 2) { //订单预付款
      $rootScope.mainData.navTabType = 'OrderAdvance';
    } else { //订单暂借款
      $rootScope.mainData.navTabType = 'OrderBorrow';
    }
    if ($rootScope[position[2]].operationMode == 'show') {
      showFinanceOrderInfo();
    } else if ($rootScope[position[2]].operationMode == 'add') {
      defaultAddInfo();
    } else if ($rootScope[position[2]].operationMode == 'edit') {
      defaultEditInfo();
    }
  }

  //添加的时候默认设置
  function defaultAddInfo() {
    if ($rootScope.detailData.CensusID !== undefined) {
      vm.add.CensusID = $rootScope.detailData.CensusID;
    }
    if ($rootScope.detailData.ProjectTime !== undefined) {
      vm.add.ProjectTime = new Date(Date.parse($rootScope.detailData.ProjectTime.replace(/-/g, "/")));
    }
    if ($scope.detailData.FinanceType !== undefined) {
      vm.add.FinanceType = $scope.detailData.FinanceType;
    }
  }


  //添加的时候默认设置
  function defaultEditInfo() {
    if ($scope.detailData.FinanceType !== undefined) {
      vm.add.FinanceType = $scope.detailData.FinanceType;
    }
    vm.add.FinanceID = editInfo.FinanceID;
    vm.add.Title = editInfo.Title;
    vm.add.PayPrice = editInfo.PayPrice;
    vm.add.CensusID = editInfo.CensusID;
    vm.add.GCOMPID = editInfo.GCOMPID;
    vm.add.GCOMPAccountID = editInfo.GCOMPAccountID;
    vm.add.PayModeID = editInfo.PayModeID;
    vm.add.ProjectTime = editInfo.ProjectTime;
    vm.add.InvoiceNo = editInfo.InvoiceNo;
    vm.add.BelongID = editInfo.BelongID;
    vm.add.Notes = editInfo.Notes;
  }



  //显示基本信息的时候，初始化
  function showFinanceOrderInfo() {
    /*财务类型，28为订单预付款撤回，29订单暂借款撤回*/
    console.log($scope.detailData.FinanceType.ID);
    $rootScope[position[2]].Withdraw.financeTypeID = $scope.detailData.FinanceType.ID == 2 ? 28 : 29;

    var surplusRevokeMoney = $scope.detailData.WaitVerificationMoney - $scope.detailData.WaitRevokeMoney;
    if ($scope.detailData.PayStatus == 2 && surplusRevokeMoney > 0) {
      $rootScope[position[2]].Withdraw.showRetract = true;
    }
  }

  /*搜索列表*/
  function searchList(scrolling) {
    /*if (vm.listMax) {
        return;
    }*/
    if ($scope.mainData.allPageCount === undefined) {
      $scope.mainData.allPageCount = $scope.mainData.pageCount;
    }

    vm.listLoading = true;
    if (scrolling === undefined) {
      vm.page = 1;
      vm.listMax = false;
      /*$rootScope.isloadList = true;
      $rootScope.showProcessBar = true;*/
      $scope.mainData.list = [];
    } else {
      if ($scope.mainData.allPageCount == 1 || vm.page == $scope.mainData.allPageCount) {
        vm.listLoading = false;
        $rootScope.isloadList = false;
        $rootScope.showProcessBar = false;
        return;
      }
      vm.page += 1;
    }

    var search = getInput($rootScope[position[1]].filter);
    if (!vm.listMax) {
      getFinanceOrderAdvanceList(search, changeScopte);
    } else {
      vm.listLoading = false;
      $rootScope.isloadList = false;
      $rootScope.showProcessBar = false;
    }

    function getInput(filter) {
      /*
       * SearchInfo 关键词搜索
       * FinanceType 财务款项类型 订单预付款 = 2,订单暂借款 = 3
       * Field 搜索条件字段类型 PayPrice = 申请金额，FinanceCompanyName = 结算单位，FinanceTitle = 预付标题，BelongUser = 申请人（计调），FinanceNo = 预付编号，CensusNo = 三清单编号
       * TimeType 时间搜索类型 0添加时间1审核时间2支付时间
       * STime 搜索开始时间，ETime 搜索结束时间
       * PayStatus 支付状态 1未确认，2已确认
       * AuditStatus 审核状态 发起审核 = 1,审核处理中 = 2,审核通过 = 3,审核退回 = 4,审核失败 = 5,流程取消 = 6
       * ErificationStatus 核销状态 1未核销，2已核销
       * DeptId 部门id
       * */
      var data = {
        iPageIndex: vm.page,
        iPageSize: vm.pageSize,
        FinanceType: $rootScope.mainData.FinanceType
      };
      //关键词
      if (filter.SearchInfo) {
        data.SearchInfo = filter.SearchInfo;
      }
      //搜索条件字段类型
      if (filter.ConditionField) {
        data.Field = filter.ConditionField;
      }
      //时间搜索类型
      if (filter.TimeType) {
        data.TimeType = filter.TimeType;
      }
      //搜索开始时间
      if (filter.STime) {
        data.STime = $filter("date")(filter.STime, "yyyy-MM-dd");
      }
      //搜索结束时间
      if (filter.ETime) {
        data.ETime = $filter("date")(filter.ETime, "yyyy-MM-dd");
      }
      //支付状态
      if (filter.PayStatus) {
        data.PayStatus = filter.PayStatus;
      }
      //审核状态
      if (filter.AuditStatus) {
        data.AuditStatus = filter.AuditStatus;
      }
      //核销状态
      if (filter.ErificationStatus) {
        data.ErificationStatus = filter.ErificationStatus;
      }
      //部门id
      if (filter.DeptId) {
        data.DeptId = filter.DeptId;
      }
      return data;
    }

    function changeScopte(data) {
      $scope.mainData.list = _.union($scope.mainData.list, data.list);
      $scope.mainData.allPageCount = data.pageCount;
      if (vm.page == $scope.mainData.allPageCount) {
        vm.listMax = true;
      }
      vm.listLoading = false;
      $rootScope.isloadList = false;
      $rootScope.showProcessBar = false;
    }
  }

  /*输入框内容按下回车*/
  function searchSubmit(keyEvent) {
    if (keyEvent.which == 13) {
      vm.searchList();
    }
  }

  /*选择三清单*/
  function choseThreeSingle() {
    searchThreeSingle();
    ngDialog.open({
      id: 'fOrderThreeSingleList',
      className: 'big',
      template: '/public/angularView/finances/FinanceOrderAdvance/FinanceOrderThreeSingle.html?' + Math.random(),
      data: {}
    });
  }

  /*搜索三清单*/
  function searchThreeSingle(page) {
    if (page === undefined) {
      vm.threePage = 1;
    } else {
      vm.threePage = page;
    }
    var search = getThreeInput(vm.threeSingleFilter);

    getFOrderThreeSingleList(search, changeScopteFilter);

    function getThreeInput(threeSingleFilter) {
      var data = {
        iPageIndex: vm.threePage,
        iPageSize: vm.threePageSize
      };
      //关键词
      if (threeSingleFilter.SearchInfo) {
        data.SearchInfo = threeSingleFilter.SearchInfo;
      }
      //搜索开始时间
      if (threeSingleFilter.StartTime) {
        data.StartTime = $filter("date")(threeSingleFilter.StartTime, "yyyy-MM-dd");
      }
      //搜索结束时间
      if (threeSingleFilter.EndTime) {
        data.EndTime = $filter("date")(threeSingleFilter.EndTime, "yyyy-MM-dd");
      }
      //三清单类型
      if (threeSingleFilter.CensusType) {
        data.CensusType = threeSingleFilter.CensusType;
      }
      //提交状态
      if (threeSingleFilter.GenderStatus) {
        data.GenderStatus = threeSingleFilter.GenderStatus;
      }
      //审核状态
      if (threeSingleFilter.CensusStatus) {
        data.CensusStatus = threeSingleFilter.CensusStatus;
      }
      //选择部门
      if (threeSingleFilter.DepartmentID) {
        data.DepartmentID = threeSingleFilter.DepartmentID;
      }
      return data;
    }

    function changeScopteFilter(data) {
      $scope.mainData.threeSingleList = data.list;
      $scope.mainData.threeSingleHotel = new Pagination(
        data.count, vm.threePage
      );
    }
  }

  /*输入框内容按下回车,三清单*/
  function searchThreeSingleSubmit(keyEvent) {
    if (keyEvent.which == 13) {
      vm.searchThreeSingle(1);
    }
  }

  //跳转到添加页面
  function showAddDiv(CensusID, CensusTime) {
    var censusTime = $filter("date")(CensusTime, "yyyy-MM-dd");
    $scope.fetch('financeCenter/financeOrderAdvance/financeOrderAdvanceAdd?CensusID=' + CensusID + '&ProjectTime=' + censusTime);
    openSubView();
  }

  //关闭添加页面
  function closeOrderAddDiv() {
    var requiredList = [];
    if (vm.add.FinanceType == 2) {
      requiredList = ['Title', 'PayPrice', 'PayModeID', 'ProjectTime', 'Notes'];
    } else {
      requiredList = ['Title', 'PayPrice', 'PayModeID', 'BelongID', 'Notes'];
    }
    vm.add.Title = null;
    vm.add.PayPrice = null;
    vm.add.CensusID = null;
    vm.add.GCOMP = {};
    vm.add.PayModeID = null;
    vm.add.ProjectTime = null;
    vm.add.InvoiceNo = null;
    vm.add.BelongID = null;
    vm.add.Notes = null;
    vm.detailTipInfo = "";
    vm.detailTipInfoType = "";
    //addRefreshPageByID(($rootScope[switchType[2]].id));
    closeSubView();
  }

  /*保存订单预付款*/
  function submitOrderAdvanceAdd() {
    if (checkInput()) {
      var _finance = {
        "RequestData": JSON.stringify({
          "FinanceID": vm.add.FinanceID,
          "FinanceTypeID": vm.add.FinanceType,
          "Title": vm.add.Title,
          "PayPrice": vm.add.PayPrice,
          "CensusID": vm.add.CensusID,
          "GCOMPID": vm.add.GCOMP.ID,
          "GCOMPAccountID": vm.add.GCOMP.AccountInfo[0].ForeignKeyID,
          "PayModeID": vm.add.PayModeID,
          "ProjectTime": vm.add.ProjectTime,
          "InvoiceNo": vm.add.InvoiceNo,
          "BelongID": vm.add.BelongID,
          "Notes": vm.add.Notes
        })
      };
      vm.detailTipInfo = "正在保存订单预付款...";
      vm.detailTipInfoType = "info";
      financeAdvanceAdd(_finance, function(response) {
        vm.detailTipInfo = "已经保存订单预付款";
        vm.detailTipInfoType = "success";
        if (editInfo !== undefined && editInfo.OPtype == "Audit") {
          var audit = _.find($rootScope[position[1]].list, function(item) {
            if (item.detail.businessID == editInfo.FinanceID && item.subType == editInfo.subType && item.targetId == editInfo.targetID && item._id.$id == editInfo.itemID)
              return true;
          });
          audit.isHandled = true;
        } else {
          savaToScope(response);
        }

        // fetch("financeCenter/financeOrderAdvance/financeOrderAdvanceList");
        closeSubView();

      });
    }

    function savaToScope(response) {
      var financeData = {
        "_id": response._id,
        "AddTime": response.CreateTime,
        "FinanceAdvanceNo": response.FinanceNo,
        "FinanceTtile": response.Title,
        "PayPrice": response.PayPrice,
        "VerificationMoney": response.VerificationMoney,
        "WaitVerificationMoney": response.WaitVerificationMoney,
        "AuditStatus": "",
        "BelongUserID": response.Belong.ForeignKeyID,
        "BelongUserName": response.Belong.EmployeeName,
        "GCOMPID": response.GCOMP.ForeignKeyID,
        "GCOMPName": response.GCOMP.Name,
        "PayStatus": 1,
        "FinancialTime": response.FinancialTime, //财务支付时间
        "VerificationStatus": "", //核销状态
        "AddInfo": response.CreateUser
      };
      if (vm.add.FinanceType == 2) { //订单预付款  三清单编号
        financeData.CensusNo = response.CensusInfo.CensusNo;
      }
      var _auditStatus = _.filter($rootScope.FinancesType.AuditStatusList, function(elem) {
        return elem.Value == response.AuditStatus;
      });
      financeData.AuditStatus = _auditStatus.length > 0 ? _auditStatus[0].Text : "";
      var _VerificationStatus;
      if (response.PayStatus == 2 && response.WaitVerificationMoney === 0) {
        _VerificationStatus = _.filter(vm.EVerification, function(elem) {
          return elem.value == 2;
        });
      } else {
        _VerificationStatus = _.filter(vm.EVerification, function(elem) {
          return elem.value == 1;
        });
      }
      financeData.VerificationStatus = _VerificationStatus.length > 0 ? _VerificationStatus[0].name : "";
      var targetData = _.find($scope.mainData.list, function(listData){
        return listData._id == financeData._id;
      });
      if(undefined !== targetData){
        targetData = financeData;
      }else{
        $scope.mainData.list.unshift(financeData);
      }
    }

    function checkInput() {
      var flag = true;
      var requiredList = [];
      if (vm.add.FinanceType == 2) {
        requiredList = ['Title', 'PayPrice', 'PayModeID', 'ProjectTime', 'Notes'];
      } else {
        requiredList = ['Title', 'PayPrice', 'PayModeID', 'BelongID', 'Notes'];
      }
      for (var item in requiredList) {
        flag = checkEmptyList(requiredList[item]);
        if (flag === false) {
          vm.detailTipInfo = "订单预付款需求填写不完整";
          vm.detailTipInfoType = "error";
          break;
        }
      }
      if (typeof(vm.add.GCOMP) === undefined || angular.equals(vm.add.GCOMP, {})) {
        flag = false;
        vm.detailTipInfo = "请选择合作单位";
        vm.detailTipInfoType = "error";
      }
      return flag;
    }

    function checkEmptyList(item) {
      if ($scope.fOrderAdvanceAdd[item].$error.required) {
        return false;
      } else {
        return true;
      }
    }
  }

  /*删除订单预付款，订单暂借款*/
  function deleteOrderAdvanceFun() {
    var financeID = $scope.detailData._id;
    showWarningBox("确定要删除此订单预付款？", activate);

    function activate() {
      deleteFOrderAdvance(financeID, function(response) {
        console.log(response);
        if (response.code >= 700 && response.code < 800) {
          vm.detailTipInfo = "删除成功";
          changeScope();
          closeSubView();
        } else {
          vm.detailTipInfo = "删除失败";
          vm.detailTipInfoType = "error";
        }
      });
    }

    function changeScope() {
      var item = _.filter($scope.mainData.list, function(i) {
        return i._id == financeID;
      });
      $scope.mainData.list = _.without($scope.mainData.list, item[0]);
    }
  }

  /*提交撤回信息*/
  function fAdvanceRetract() {
    if (checkInput()) {
      var param = {
        "RequestData": JSON.stringify({
          "FinanceId": $scope.detailData._id,
          "RetractPrice": $rootScope[position[2]].Withdraw.RetractPrice,
          "RetractTypeID": $rootScope[position[2]].Withdraw.RetractTypeID,
          "RetractTitle": $rootScope[position[2]].Withdraw.RetractTitle,
          "Notes": $rootScope[position[2]].Withdraw.Notes,
          "FinanceTypeID": $rootScope[position[2]].Withdraw.financeTypeID
        })
      };
      vm.detailTipInfo = "正在保存撤回信息...";
      vm.detailTipInfoType = "info";
      financeAdvanceRetract(param, function(response) {
        vm.detailTipInfo = "已经保存撤回信息";
        vm.detailTipInfoType = "success";
        savaToScope(response.data);
        $rootScope[position[2]].Withdraw.popoverIsOpen = false;
      });
    }

    function checkInput() {
      var flag = true;
      var requiredList = ['RetractPrice', 'RetractTypeID', 'RetractTitle', 'Notes'];
      for (var item in requiredList) {
        flag = checkEmptyList(requiredList[item]);
        if (flag === false) {
          vm.detailTipInfo = "申请撤回需求填写不完整";
          vm.detailTipInfoType = "error";
          break;
        }
      }
      return flag;
    }

    function checkEmptyList(item) {
      if (vm.fOrderWithdraw[item].$error.required) {
        return false;
      } else {
        return true;
      }
    }

    function savaToScope(response) {
      var _financeBack = {
        "_id": response._id,
        "FinanceNo": response.FinanceNo,
        "Title": response.Title,
        "PayPrice": response.PayPrice,
        "PayModeName": response.PayMode,
        "Notes": response.Notes,
        "CreateUser": response.CreateUser,
        "PayStatus": "",
        "FinancialStaff": response.FinancialStaff,
        "FinancialTime": response.FinancialTime
      };
      //退回状态
      var _payStatusBack = _.filter(vm.EPayStatusBack, function(elem) {
        return elem.value == response.PayStatus;
      });
      _financeBack.PayStatus = _payStatusBack.length > 0 ? _payStatusBack[0].name : "";
      $scope.detailData.FinanceBackList.push(_financeBack);
    }
  }
  /*审核通过*/
  $scope.auditFinanceOrderAdvance = function() {
    showWarningBox("是否审核" + dataInfo.FinanceType.Name + "通过,下一步流程(" + dataInfo.nextStepName + ")", function() {
      var param = {
        FinanceID: dataInfo._id
      };
      vm.detailTipInfo = dataInfo.FinanceType.Name + "通过审核中。。。";
      vm.detailTipInfoType = "warning";
      $rootScope.showProcessBar = true;
      auditFinance(param, function(detail) {
        var viewId = $rootScope[switchType[2]].id;
        addRefreshPageByID(viewId);
        vm.detailTipInfo = dataInfo.FinanceType.Name + "通过审核成功";
        vm.detailTipInfoType = "success";
        $rootScope.showSubView = false;
        $rootScope.showProcessBar = false;
        var audit = _.find($rootScope[position[1]].list, function(item) {
          if (item.detail.businessID == param.FinanceID && item.subType == dataInfo.subType && item.targetId == dataInfo.targetID && item._id.$id == dataInfo.itemID)
            return true;
        });
        audit.isHandled = true;
      });
    });
  };
  /*审核退回弹框*/
  $scope.openBackAuditFinanceOrderAdvance = function() {
    dataInfo.AuditBack.BussinessID = dataInfo._id;
    dataInfo.AuditBack.User = dataInfo.Belong;
    dataInfo.AuditBack.Title = dataInfo.FinanceType.Name;
    dataInfo.AuditBack.Notes = "";
  };
  /*审核退回*/
  $scope.backAudit = function() {
    showWarningBox("是否退回" + dataInfo.FinanceType.Name, function() {
      var param = {
        FinanceID: dataInfo.AuditBack.BussinessID,
        Notes: dataInfo.AuditBack.Notes
      };
      vm.detailTipInfo = dataInfo.FinanceType.Name + "退回中。。。";
      vm.detailTipInfoType = "warning";
      $rootScope.showProcessBar = true;
      backAuditFinance(param, function(detail) {
        var viewId = $rootScope[switchType[2]].id;
        addRefreshPageByID(viewId);
        vm.detailTipInfo = dataInfo.FinanceType.Name + "退回成功";
        vm.detailTipInfoType = "success";
        $rootScope.showSubView = false;
        $rootScope.showProcessBar = false;
        var audit = _.find($rootScope[position[1]].list, function(item) {
          if (item.detail.businessID == param.FinanceID && item.subType == dataInfo.subType && item.targetId == dataInfo.targetID && item._id.$id == dataInfo.itemID)
            return true;
        });
        audit.isHandled = true;
      });
    });
  };

  /*设置流程重新开始初始化值*/
  $scope.EditInfo = function() {
    if (dataInfo.FinanceType.ID == 2) {
      $scope.fetch("financeCenter/financeOrderAdvance/financeOrderAdvanceAdd?operationMode=edit");
    } else {
      $scope.fetch("financeCenter/financeOrderAdvance/financeOrderBorrowAdd?operationMode=edit");
    }
    $scope.openItem();
    event.stopPropagation();
    $rootScope.editInfo = {
      FinanceID: dataInfo._id,
      Title: dataInfo.Title,
      PayPrice: dataInfo.PayPrice,
      CensusID: dataInfo.CensusInfo === undefined ? "" : dataInfo.CensusInfo.CensusID,
      GCOMPID: dataInfo.GCOMPID,
      GCOMPAccountID: dataInfo.GCOMPAccountID,
      PayModeID: dataInfo.PayModeID,
      ProjectTime: dataInfo.ProjectTime,
      InvoiceNo: dataInfo.InvoiceNo,
      BelongID: dataInfo.Belong.ForeignKeyID,
      Notes: dataInfo.Notes,
      OPtype: dataInfo.OPtype,
      subType: dataInfo.subType,
      targetID: dataInfo.targetID,
      itemID: dataInfo.itemID
    };
    /*		vm.add = {
    			FinanceType: $scope.detailData.FinanceType,
    			FinanceID: $scope.detailData.FinanceID,
    			Title: $scope.detailData.Title,
    			PayPrice: $scope.detailData.PayPrice,
    			CensusID: $scope.detailData.CensusID,
    			GCOMPID: $scope.detailData.GCOMPID,
    			GCOMPAccountID: $scope.detailData.GCOMPAccountID,
    			PayModeID: $scope.detailData.PayModeID,
    			ProjectTime: $scope.detailData.ProjectTime,
    			InvoiceNo: $scope.detailData.InvoiceNo,
    			BelongID: $scope.detailData.BelongID,
    			Notes: $scope.detailData.Notes,
    			OPtype: $scope.detailData.OPtype,
    			subType: $scope.detailData.subType,
    			targetID: $scope.detailData.targetID,
    			itemID: $scope.detailData.itemID
    		}

    		console.log(vm.add);*/
  };

  /*获取当前账号所在部门的员工信息*/
  function getManagerPersonnelFun() {
    getManagerPersonnel(function(data) {
      vm.mPersonnelList = data.list;
    });
  }

  /*财务确认状态 支付状态*/
  vm.EPayStatus = [{
    'value': 1,
    'name': '未确认'
  }, {
    'value': 2,
    'name': '已确认'
  }];

  /*审核状态*/
  vm.EAuditStatus = [{
    'value': 1,
    'name': '发起'
  }, {
    'value': 2,
    'name': '处理中'
  }, {
    'value': 3,
    'name': '通过'
  }, {
    'value': 4,
    'name': '退回'
  }, {
    'value': 5,
    'name': '失败'
  }, {
    'value': 6,
    'name': '取消'
  }];


  /*核销状态*/
  vm.EVerification = [{
    'value': 1,
    'name': '未核销'
  }, {
    'value': 2,
    'name': '已核销'
  }];

  vm.ETimeType = [{
    'value': 1,
    'name': '申请日期'
  }, {
    'value': 2,
    'name': '支付日期'
  }];

  /*三清单类型*/
  vm.ECensusType = [{
    'value': 1,
    'name': '跟团游'
  }, {
    'value': 2,
    'name': '签证'
  }, {
    'value': 3,
    'name': '景区'
  }, {
    'value': 12,
    'name': '自由行'
  }, {
    'value': 13,
    'name': '自驾游'
  }, {
    'value': 17,
    'name': '定制游'
  }, {
    'value': 18,
    'name': '邮轮专线'
  }, {
    'value': 23,
    'name': '一团一议'
  }, {
    'value': 24,
    'name': '机票订单'
  }, {
    'value': 9,
    'name': '地接'
  }];

  /*三清单提交状态*/
  vm.EGenderStatus = [{
    'value': 1,
    'name': '未提交'
  }, {
    'value': 2,
    'name': '已提交'
  }];

  /*退回状态(订单预付款暂借款撤回列表)*/
  vm.EPayStatusBack = [{
    'value': 1,
    'name': '未撤回'
  }, {
    'value': 2,
    'name': '已撤回'
  }];
}
